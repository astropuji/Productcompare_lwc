{"version":3,"file":"lwc-components.min.js","sources":["../../node_modules/lwc/dist/engine/esm/es2017/engine.js","../../node_modules/tslib/tslib.es6.js","../../node_modules/graphql/jsutils/nodejsCustomInspectSymbol.mjs","../../node_modules/graphql/jsutils/inspect.mjs","../../node_modules/graphql/jsutils/defineInspect.mjs","../../node_modules/graphql/jsutils/invariant.mjs","../../node_modules/graphql/language/ast.mjs","../../node_modules/graphql/language/visitor.mjs","../../node_modules/ts-invariant/lib/invariant.esm.js","../../@lwc/resources/empty_html.js","../../node_modules/fast-json-stable-stringify/index.js","../../node_modules/@wry/equality/lib/equality.esm.js","../../node_modules/apollo-utilities/lib/bundle.esm.js","../../node_modules/zen-observable/lib/Observable.js","../../node_modules/zen-observable/index.js","../../node_modules/apollo-link/lib/bundle.esm.js","../../node_modules/symbol-observable/es/index.js","../../node_modules/apollo-client/bundle.esm.js","../../node_modules/symbol-observable/es/ponyfill.js","../../node_modules/apollo-cache/lib/bundle.esm.js","../../node_modules/@wry/context/lib/context.esm.js","../../node_modules/optimism/lib/bundle.esm.js","../../node_modules/apollo-cache-inmemory/lib/bundle.esm.js","../../node_modules/graphql/language/blockString.mjs","../../node_modules/graphql/language/printer.mjs","../../node_modules/apollo-link-http-common/lib/bundle.esm.js","../../node_modules/apollo-link-http/lib/bundle.esm.js","../../node_modules/graphql/jsutils/devAssert.mjs","../../node_modules/graphql/jsutils/isObjectLike.mjs","../../node_modules/graphql/polyfills/symbols.mjs","../../node_modules/graphql/language/location.mjs","../../node_modules/graphql/language/printLocation.mjs","../../node_modules/graphql/error/GraphQLError.mjs","../../node_modules/graphql/error/syntaxError.mjs","../../node_modules/graphql/language/kinds.mjs","../../node_modules/graphql/language/source.mjs","../../node_modules/graphql/language/directiveLocation.mjs","../../node_modules/graphql/language/tokenKind.mjs","../../node_modules/graphql/language/lexer.mjs","../../node_modules/graphql/language/parser.mjs","../../node_modules/graphql-tag/src/index.js","../../node_modules/@lwce/apollo-client/dist/es6/client.js","../../src/my/greeting/greeting.js","../../node_modules/@lwce/apollo-client/dist/es6/query.js","../../src/main.js"],"sourcesContent":["/* proxy-compat-disable */\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction detect() {\n  // Don't apply polyfill when ProxyCompat is enabled.\n  if ('getKey' in Proxy) {\n    return false;\n  }\n\n  const proxy = new Proxy([3, 4], {});\n  const res = [1, 2].concat(proxy);\n  return res.length !== 4;\n}\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n\nconst {\n  isConcatSpreadable\n} = Symbol;\nconst {\n  isArray\n} = Array;\nconst {\n  slice: ArraySlice,\n  unshift: ArrayUnshift,\n  shift: ArrayShift\n} = Array.prototype;\n\nfunction isObject(O) {\n  return typeof O === 'object' ? O !== null : typeof O === 'function';\n} // https://www.ecma-international.org/ecma-262/6.0/#sec-isconcatspreadable\n\n\nfunction isSpreadable(O) {\n  if (!isObject(O)) {\n    return false;\n  }\n\n  const spreadable = O[isConcatSpreadable];\n  return spreadable !== undefined ? Boolean(spreadable) : isArray(O);\n} // https://www.ecma-international.org/ecma-262/6.0/#sec-array.prototype.concat\n\n\nfunction ArrayConcatPolyfill(..._args) {\n  const O = Object(this);\n  const A = [];\n  let N = 0;\n  const items = ArraySlice.call(arguments);\n  ArrayUnshift.call(items, O);\n\n  while (items.length) {\n    const E = ArrayShift.call(items);\n\n    if (isSpreadable(E)) {\n      let k = 0;\n      const length = E.length;\n\n      for (k; k < length; k += 1, N += 1) {\n        if (k in E) {\n          const subElement = E[k];\n          A[N] = subElement;\n        }\n      }\n    } else {\n      A[N] = E;\n      N += 1;\n    }\n  }\n\n  return A;\n}\n\nfunction apply() {\n  Array.prototype.concat = ArrayConcatPolyfill;\n}\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n\nif (detect()) {\n  apply();\n}\n/**\n * Copyright (C) 2018 salesforce.com, inc.\n */\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n\nfunction invariant(value, msg) {\n  if (!value) {\n    throw new Error(`Invariant Violation: ${msg}`);\n  }\n}\n\nfunction isTrue(value, msg) {\n  if (!value) {\n    throw new Error(`Assert Violation: ${msg}`);\n  }\n}\n\nfunction isFalse(value, msg) {\n  if (value) {\n    throw new Error(`Assert Violation: ${msg}`);\n  }\n}\n\nfunction fail(msg) {\n  throw new Error(msg);\n}\n\nvar assert = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  invariant: invariant,\n  isTrue: isTrue,\n  isFalse: isFalse,\n  fail: fail\n});\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\nconst {\n  assign,\n  create,\n  defineProperties,\n  defineProperty,\n  freeze,\n  getOwnPropertyDescriptor,\n  getOwnPropertyNames,\n  getPrototypeOf,\n  hasOwnProperty,\n  keys,\n  seal,\n  setPrototypeOf\n} = Object;\nconst {\n  isArray: isArray$1\n} = Array;\nconst {\n  filter: ArrayFilter,\n  find: ArrayFind,\n  indexOf: ArrayIndexOf,\n  join: ArrayJoin,\n  map: ArrayMap,\n  push: ArrayPush,\n  reduce: ArrayReduce,\n  reverse: ArrayReverse,\n  slice: ArraySlice$1,\n  splice: ArraySplice,\n  unshift: ArrayUnshift$1,\n  forEach\n} = Array.prototype;\nconst {\n  charCodeAt: StringCharCodeAt,\n  replace: StringReplace,\n  slice: StringSlice,\n  toLowerCase: StringToLowerCase\n} = String.prototype;\n\nfunction isUndefined(obj) {\n  return obj === undefined;\n}\n\nfunction isNull(obj) {\n  return obj === null;\n}\n\nfunction isTrue$1(obj) {\n  return obj === true;\n}\n\nfunction isFalse$1(obj) {\n  return obj === false;\n}\n\nfunction isFunction(obj) {\n  return typeof obj === 'function';\n}\n\nfunction isObject$1(obj) {\n  return typeof obj === 'object';\n}\n\nfunction isString(obj) {\n  return typeof obj === 'string';\n}\n\nfunction isNumber(obj) {\n  return typeof obj === 'number';\n}\n\nconst OtS = {}.toString;\n\nfunction toString(obj) {\n  if (obj && obj.toString) {\n    // Arrays might hold objects with \"null\" prototype So using\n    // Array.prototype.toString directly will cause an error Iterate through\n    // all the items and handle individually.\n    if (isArray$1(obj)) {\n      return ArrayJoin.call(ArrayMap.call(obj, toString), ',');\n    }\n\n    return obj.toString();\n  } else if (typeof obj === 'object') {\n    return OtS.call(obj);\n  } else {\n    return obj + emptyString;\n  }\n}\n\nfunction getPropertyDescriptor(o, p) {\n  do {\n    const d = getOwnPropertyDescriptor(o, p);\n\n    if (!isUndefined(d)) {\n      return d;\n    }\n\n    o = getPrototypeOf(o);\n  } while (o !== null);\n}\n\nconst emptyString = '';\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n/**\n * According to the following list, there are 48 aria attributes of which two (ariaDropEffect and\n * ariaGrabbed) are deprecated:\n * https://www.w3.org/TR/wai-aria-1.1/#x6-6-definitions-of-states-and-properties-all-aria-attributes\n *\n * The above list of 46 aria attributes is consistent with the following resources:\n * https://github.com/w3c/aria/pull/708/files#diff-eacf331f0ffc35d4b482f1d15a887d3bR11060\n * https://wicg.github.io/aom/spec/aria-reflection.html\n */\n\nconst AriaPropertyNames = ['ariaActiveDescendant', 'ariaAtomic', 'ariaAutoComplete', 'ariaBusy', 'ariaChecked', 'ariaColCount', 'ariaColIndex', 'ariaColSpan', 'ariaControls', 'ariaCurrent', 'ariaDescribedBy', 'ariaDetails', 'ariaDisabled', 'ariaErrorMessage', 'ariaExpanded', 'ariaFlowTo', 'ariaHasPopup', 'ariaHidden', 'ariaInvalid', 'ariaKeyShortcuts', 'ariaLabel', 'ariaLabelledBy', 'ariaLevel', 'ariaLive', 'ariaModal', 'ariaMultiLine', 'ariaMultiSelectable', 'ariaOrientation', 'ariaOwns', 'ariaPlaceholder', 'ariaPosInSet', 'ariaPressed', 'ariaReadOnly', 'ariaRelevant', 'ariaRequired', 'ariaRoleDescription', 'ariaRowCount', 'ariaRowIndex', 'ariaRowSpan', 'ariaSelected', 'ariaSetSize', 'ariaSort', 'ariaValueMax', 'ariaValueMin', 'ariaValueNow', 'ariaValueText', 'role'];\nconst AttrNameToPropNameMap = create(null);\nconst PropNameToAttrNameMap = create(null); // Synthetic creation of all AOM property descriptors for Custom Elements\n\nforEach.call(AriaPropertyNames, propName => {\n  // Typescript infers the wrong function type for this particular overloaded method:\n  // https://github.com/Microsoft/TypeScript/issues/27972\n  // @ts-ignore type-mismatch\n  const attrName = StringToLowerCase.call(StringReplace.call(propName, /^aria/, 'aria-'));\n  AttrNameToPropNameMap[attrName] = propName;\n  PropNameToAttrNameMap[propName] = attrName;\n});\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n/*\n * In IE11, symbols are expensive.\n * Due to the nature of the symbol polyfill. This method abstract the\n * creation of symbols, so we can fallback to string when native symbols\n * are not supported. Note that we can't use typeof since it will fail when transpiling.\n */\n\nconst hasNativeSymbolsSupport = Symbol('x').toString() === 'Symbol(x)';\n\nfunction createHiddenField(key, namespace) {\n  return hasNativeSymbolsSupport ? Symbol(key) : `$$lwc-${namespace}-${key}$$`;\n}\n\nconst hiddenFieldsMap = new WeakMap();\n\nfunction setHiddenField(o, field, value) {\n  let valuesByField = hiddenFieldsMap.get(o);\n\n  if (isUndefined(valuesByField)) {\n    valuesByField = create(null);\n    hiddenFieldsMap.set(o, valuesByField);\n  }\n\n  valuesByField[field] = value;\n}\n\nfunction getHiddenField(o, field) {\n  const valuesByField = hiddenFieldsMap.get(o);\n\n  if (!isUndefined(valuesByField)) {\n    return valuesByField[field];\n  }\n}\n/** version: 1.7.1 */\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n\nfunction detect$1(propName) {\n  return Object.getOwnPropertyDescriptor(Element.prototype, propName) === undefined;\n}\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n\nconst {\n  getAttribute,\n  hasAttribute,\n  removeAttribute,\n  removeAttributeNS,\n  setAttribute,\n  setAttributeNS\n} = Element.prototype;\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\nconst nodeToAriaPropertyValuesMap = new WeakMap();\n\nfunction getAriaPropertyMap(elm) {\n  let map = nodeToAriaPropertyValuesMap.get(elm);\n\n  if (map === undefined) {\n    map = {};\n    nodeToAriaPropertyValuesMap.set(elm, map);\n  }\n\n  return map;\n}\n\nfunction getNormalizedAriaPropertyValue(value) {\n  return value == null ? null : String(value);\n}\n\nfunction createAriaPropertyPropertyDescriptor(propName, attrName) {\n  return {\n    get() {\n      const map = getAriaPropertyMap(this);\n\n      if (hasOwnProperty.call(map, propName)) {\n        return map[propName];\n      } // otherwise just reflect what's in the attribute\n\n\n      return hasAttribute.call(this, attrName) ? getAttribute.call(this, attrName) : null;\n    },\n\n    set(newValue) {\n      const normalizedValue = getNormalizedAriaPropertyValue(newValue);\n      const map = getAriaPropertyMap(this);\n      map[propName] = normalizedValue; // reflect into the corresponding attribute\n\n      if (newValue === null) {\n        removeAttribute.call(this, attrName);\n      } else {\n        setAttribute.call(this, attrName, newValue);\n      }\n    },\n\n    configurable: true,\n    enumerable: true\n  };\n}\n\nfunction patch(propName) {\n  // Typescript is inferring the wrong function type for this particular\n  // overloaded method: https://github.com/Microsoft/TypeScript/issues/27972\n  // @ts-ignore type-mismatch\n  const attrName = PropNameToAttrNameMap[propName];\n  const descriptor = createAriaPropertyPropertyDescriptor(propName, attrName);\n  Object.defineProperty(Element.prototype, propName, descriptor);\n}\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n\nconst ElementPrototypeAriaPropertyNames = keys(PropNameToAttrNameMap);\n\nfor (let i = 0, len = ElementPrototypeAriaPropertyNames.length; i < len; i += 1) {\n  const propName = ElementPrototypeAriaPropertyNames[i];\n\n  if (detect$1(propName)) {\n    patch(propName);\n  }\n}\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n\nlet nextTickCallbackQueue = [];\nconst SPACE_CHAR = 32;\nconst EmptyObject = seal(create(null));\nconst EmptyArray = seal([]);\n\nfunction flushCallbackQueue() {\n  if (process.env.NODE_ENV !== 'production') {\n    if (nextTickCallbackQueue.length === 0) {\n      throw new Error(`Internal Error: If callbackQueue is scheduled, it is because there must be at least one callback on this pending queue.`);\n    }\n  }\n\n  const callbacks = nextTickCallbackQueue;\n  nextTickCallbackQueue = []; // reset to a new queue\n\n  for (let i = 0, len = callbacks.length; i < len; i += 1) {\n    callbacks[i]();\n  }\n}\n\nfunction addCallbackToNextTick(callback) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!isFunction(callback)) {\n      throw new Error(`Internal Error: addCallbackToNextTick() can only accept a function callback`);\n    }\n  }\n\n  if (nextTickCallbackQueue.length === 0) {\n    Promise.resolve().then(flushCallbackQueue);\n  }\n\n  ArrayPush.call(nextTickCallbackQueue, callback);\n}\n\nfunction guid() {\n  function s4() {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n\n  return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n}\n/*\n * Copyright (c) 2019, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n\nconst {\n  create: create$1\n} = Object;\nconst {\n  splice: ArraySplice$1,\n  indexOf: ArrayIndexOf$1,\n  push: ArrayPush$1\n} = Array.prototype;\nconst TargetToReactiveRecordMap = new WeakMap();\n\nfunction isUndefined$1(obj) {\n  return obj === undefined;\n}\n\nfunction getReactiveRecord(target) {\n  let reactiveRecord = TargetToReactiveRecordMap.get(target);\n\n  if (isUndefined$1(reactiveRecord)) {\n    const newRecord = create$1(null);\n    reactiveRecord = newRecord;\n    TargetToReactiveRecordMap.set(target, newRecord);\n  }\n\n  return reactiveRecord;\n}\n\nlet currentReactiveObserver = null;\n\nfunction valueMutated(target, key) {\n  const reactiveRecord = TargetToReactiveRecordMap.get(target);\n\n  if (!isUndefined$1(reactiveRecord)) {\n    const reactiveObservers = reactiveRecord[key];\n\n    if (!isUndefined$1(reactiveObservers)) {\n      for (let i = 0, len = reactiveObservers.length; i < len; i += 1) {\n        const ro = reactiveObservers[i];\n        ro.notify();\n      }\n    }\n  }\n}\n\nfunction valueObserved(target, key) {\n  // We should determine if an active Observing Record is present to track mutations.\n  if (currentReactiveObserver === null) {\n    return;\n  }\n\n  const ro = currentReactiveObserver;\n  const reactiveRecord = getReactiveRecord(target);\n  let reactiveObservers = reactiveRecord[key];\n\n  if (isUndefined$1(reactiveObservers)) {\n    reactiveObservers = [];\n    reactiveRecord[key] = reactiveObservers;\n  } else if (reactiveObservers[0] === ro) {\n    return; // perf optimization considering that most subscriptions will come from the same record\n  }\n\n  if (ArrayIndexOf$1.call(reactiveObservers, ro) === -1) {\n    ro.link(reactiveObservers);\n  }\n}\n\nclass ReactiveObserver {\n  constructor(callback) {\n    this.listeners = [];\n    this.callback = callback;\n  }\n\n  observe(job) {\n    const inceptionReactiveRecord = currentReactiveObserver;\n    currentReactiveObserver = this;\n    let error;\n\n    try {\n      job();\n    } catch (e) {\n      error = Object(e);\n    } finally {\n      currentReactiveObserver = inceptionReactiveRecord;\n\n      if (error !== undefined) {\n        throw error; // eslint-disable-line no-unsafe-finally\n      }\n    }\n  }\n  /**\n   * This method is responsible for disconnecting the Reactive Observer\n   * from any Reactive Record that has a reference to it, to prevent future\n   * notifications about previously recorded access.\n   */\n\n\n  reset() {\n    const {\n      listeners\n    } = this;\n    const len = listeners.length;\n\n    if (len > 0) {\n      for (let i = 0; i < len; i += 1) {\n        const set = listeners[i];\n        const pos = ArrayIndexOf$1.call(listeners[i], this);\n        ArraySplice$1.call(set, pos, 1);\n      }\n\n      listeners.length = 0;\n    }\n  } // friend methods\n\n\n  notify() {\n    this.callback.call(undefined, this);\n  }\n\n  link(reactiveObservers) {\n    ArrayPush$1.call(reactiveObservers, this); // we keep track of observing records where the observing record was added to so we can do some clean up later on\n\n    ArrayPush$1.call(this.listeners, reactiveObservers);\n  }\n\n}\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n\nfunction componentValueMutated(vm, key) {\n  valueMutated(vm.component, key);\n}\n\nfunction componentValueObserved(vm, key) {\n  valueObserved(vm.component, key);\n}\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n\nfunction getComponentTag(vm) {\n  return `<${StringToLowerCase.call(vm.tagName)}>`;\n} // TODO [#1695]: Unify getComponentStack and getErrorComponentStack\n\n\nfunction getComponentStack(vm) {\n  const stack = [];\n  let prefix = '';\n\n  while (!isNull(vm.owner)) {\n    ArrayPush.call(stack, prefix + getComponentTag(vm));\n    vm = vm.owner;\n    prefix += '\\t';\n  }\n\n  return ArrayJoin.call(stack, '\\n');\n}\n\nfunction getErrorComponentStack(vm) {\n  const wcStack = [];\n  let currentVm = vm;\n\n  while (!isNull(currentVm)) {\n    ArrayPush.call(wcStack, getComponentTag(currentVm));\n    currentVm = currentVm.owner;\n  }\n\n  return wcStack.reverse().join('\\n\\t');\n}\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n\nfunction logError(message, vm) {\n  let msg = `[LWC error]: ${message}`;\n\n  if (!isUndefined(vm)) {\n    msg = `${msg}\\n${getComponentStack(vm)}`;\n  }\n\n  if (process.env.NODE_ENV === 'test') {\n    /* eslint-disable-next-line no-console */\n    console.error(msg);\n    return;\n  }\n\n  try {\n    throw new Error(msg);\n  } catch (e) {\n    /* eslint-disable-next-line no-console */\n    console.error(e);\n  }\n}\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n\nfunction handleEvent(event, vnode) {\n  const {\n    type\n  } = event;\n  const {\n    data: {\n      on\n    }\n  } = vnode;\n  const handler = on && on[type]; // call event handler if exists\n\n  if (handler) {\n    handler.call(undefined, event);\n  }\n}\n\nfunction createListener() {\n  return function handler(event) {\n    handleEvent(event, handler.vnode);\n  };\n}\n\nfunction updateAllEventListeners(oldVnode, vnode) {\n  if (isUndefined(oldVnode.listener)) {\n    createAllEventListeners(vnode);\n  } else {\n    vnode.listener = oldVnode.listener;\n    vnode.listener.vnode = vnode;\n  }\n}\n\nfunction createAllEventListeners(vnode) {\n  const {\n    data: {\n      on\n    }\n  } = vnode;\n\n  if (isUndefined(on)) {\n    return;\n  }\n\n  const elm = vnode.elm;\n  const listener = vnode.listener = createListener();\n  listener.vnode = vnode;\n  let name;\n\n  for (name in on) {\n    elm.addEventListener(name, listener);\n  }\n}\n\nvar modEvents = {\n  update: updateAllEventListeners,\n  create: createAllEventListeners\n};\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\nconst defaultDefHTMLPropertyNames = ['accessKey', 'dir', 'draggable', 'hidden', 'id', 'lang', 'spellcheck', 'tabIndex', 'title']; // Few more exceptions that are using the attribute name to match the property in lowercase.\n// this list was compiled from https://msdn.microsoft.com/en-us/library/ms533062(v=vs.85).aspx\n// and https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\n// Note: this list most be in sync with the compiler as well.\n\nconst HTMLPropertyNamesWithLowercasedReflectiveAttributes = ['accessKey', 'readOnly', 'tabIndex', 'bgColor', 'colSpan', 'rowSpan', 'contentEditable', 'dateTime', 'formAction', 'isMap', 'maxLength', 'useMap'];\n\nfunction offsetPropertyErrorMessage(name) {\n  return `Using the \\`${name}\\` property is an anti-pattern because it rounds the value to an integer. Instead, use the \\`getBoundingClientRect\\` method to obtain fractional values for the size of an element and its position relative to the viewport.`;\n} // Global HTML Attributes & Properties\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\n// https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement\n\n\nconst globalHTMLProperties = assign(create(null), {\n  accessKey: {\n    attribute: 'accesskey'\n  },\n  accessKeyLabel: {\n    readOnly: true\n  },\n  className: {\n    attribute: 'class',\n    error: 'Using the `className` property is an anti-pattern because of slow runtime behavior and potential conflicts with classes provided by the owner element. Use the `classList` API instead.'\n  },\n  contentEditable: {\n    attribute: 'contenteditable'\n  },\n  dataset: {\n    readOnly: true,\n    error: \"Using the `dataset` property is an anti-pattern because it can't be statically analyzed. Expose each property individually using the `@api` decorator instead.\"\n  },\n  dir: {\n    attribute: 'dir'\n  },\n  draggable: {\n    attribute: 'draggable'\n  },\n  dropzone: {\n    attribute: 'dropzone',\n    readOnly: true\n  },\n  hidden: {\n    attribute: 'hidden'\n  },\n  id: {\n    attribute: 'id'\n  },\n  inputMode: {\n    attribute: 'inputmode'\n  },\n  lang: {\n    attribute: 'lang'\n  },\n  slot: {\n    attribute: 'slot',\n    error: 'Using the `slot` property is an anti-pattern.'\n  },\n  spellcheck: {\n    attribute: 'spellcheck'\n  },\n  style: {\n    attribute: 'style'\n  },\n  tabIndex: {\n    attribute: 'tabindex'\n  },\n  title: {\n    attribute: 'title'\n  },\n  translate: {\n    attribute: 'translate'\n  },\n  // additional \"global attributes\" that are not present in the link above.\n  isContentEditable: {\n    readOnly: true\n  },\n  offsetHeight: {\n    readOnly: true,\n    error: offsetPropertyErrorMessage('offsetHeight')\n  },\n  offsetLeft: {\n    readOnly: true,\n    error: offsetPropertyErrorMessage('offsetLeft')\n  },\n  offsetParent: {\n    readOnly: true\n  },\n  offsetTop: {\n    readOnly: true,\n    error: offsetPropertyErrorMessage('offsetTop')\n  },\n  offsetWidth: {\n    readOnly: true,\n    error: offsetPropertyErrorMessage('offsetWidth')\n  },\n  role: {\n    attribute: 'role'\n  }\n});\nconst AttrNameToPropNameMap$1 = assign(create(null), AttrNameToPropNameMap);\nconst PropNameToAttrNameMap$1 = assign(create(null), PropNameToAttrNameMap);\nforEach.call(defaultDefHTMLPropertyNames, propName => {\n  const attrName = StringToLowerCase.call(propName);\n  AttrNameToPropNameMap$1[attrName] = propName;\n  PropNameToAttrNameMap$1[propName] = attrName;\n});\nforEach.call(HTMLPropertyNamesWithLowercasedReflectiveAttributes, propName => {\n  const attrName = StringToLowerCase.call(propName);\n  AttrNameToPropNameMap$1[attrName] = propName;\n  PropNameToAttrNameMap$1[propName] = attrName;\n});\nconst CAPS_REGEX = /[A-Z]/g;\n/**\n * This method maps between property names\n * and the corresponding attribute name.\n */\n\nfunction getAttrNameFromPropName(propName) {\n  if (isUndefined(PropNameToAttrNameMap$1[propName])) {\n    PropNameToAttrNameMap$1[propName] = StringReplace.call(propName, CAPS_REGEX, match => '-' + match.toLowerCase());\n  }\n\n  return PropNameToAttrNameMap$1[propName];\n}\n\nlet controlledElement = null;\nlet controlledAttributeName;\n\nfunction isAttributeLocked(elm, attrName) {\n  return elm !== controlledElement || attrName !== controlledAttributeName;\n}\n\nfunction lockAttribute(_elm, _key) {\n  controlledElement = null;\n  controlledAttributeName = undefined;\n}\n\nfunction unlockAttribute(elm, key) {\n  controlledElement = elm;\n  controlledAttributeName = key;\n}\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n\nconst xlinkNS = 'http://www.w3.org/1999/xlink';\nconst xmlNS = 'http://www.w3.org/XML/1998/namespace';\nconst ColonCharCode = 58;\n\nfunction updateAttrs(oldVnode, vnode) {\n  const {\n    data: {\n      attrs\n    }\n  } = vnode;\n\n  if (isUndefined(attrs)) {\n    return;\n  }\n\n  let {\n    data: {\n      attrs: oldAttrs\n    }\n  } = oldVnode;\n\n  if (oldAttrs === attrs) {\n    return;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert.invariant(isUndefined(oldAttrs) || keys(oldAttrs).join(',') === keys(attrs).join(','), `vnode.data.attrs cannot change shape.`);\n  }\n\n  const elm = vnode.elm;\n  let key;\n  oldAttrs = isUndefined(oldAttrs) ? EmptyObject : oldAttrs; // update modified attributes, add new attributes\n  // this routine is only useful for data-* attributes in all kind of elements\n  // and aria-* in standard elements (custom elements will use props for these)\n\n  for (key in attrs) {\n    const cur = attrs[key];\n    const old = oldAttrs[key];\n\n    if (old !== cur) {\n      unlockAttribute(elm, key);\n\n      if (StringCharCodeAt.call(key, 3) === ColonCharCode) {\n        // Assume xml namespace\n        elm.setAttributeNS(xmlNS, key, cur);\n      } else if (StringCharCodeAt.call(key, 5) === ColonCharCode) {\n        // Assume xlink namespace\n        elm.setAttributeNS(xlinkNS, key, cur);\n      } else if (isNull(cur)) {\n        elm.removeAttribute(key);\n      } else {\n        elm.setAttribute(key, cur);\n      }\n\n      lockAttribute();\n    }\n  }\n}\n\nconst emptyVNode = {\n  data: {}\n};\nvar modAttrs = {\n  create: vnode => updateAttrs(emptyVNode, vnode),\n  update: updateAttrs\n};\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\nfunction isLiveBindingProp(sel, key) {\n  // For properties with live bindings, we read values from the DOM element\n  // instead of relying on internally tracked values.\n  return sel === 'input' && (key === 'value' || key === 'checked');\n}\n\nfunction update(oldVnode, vnode) {\n  const props = vnode.data.props;\n\n  if (isUndefined(props)) {\n    return;\n  }\n\n  const oldProps = oldVnode.data.props;\n\n  if (oldProps === props) {\n    return;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert.invariant(isUndefined(oldProps) || keys(oldProps).join(',') === keys(props).join(','), 'vnode.data.props cannot change shape.');\n  }\n\n  const elm = vnode.elm;\n  const isFirstPatch = isUndefined(oldProps);\n  const {\n    sel\n  } = vnode;\n\n  for (const key in props) {\n    const cur = props[key];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!(key in elm)) {\n        // TODO [#1297]: Move this validation to the compiler\n        assert.fail(`Unknown public property \"${key}\" of element <${sel}>. This is likely a typo on the corresponding attribute \"${getAttrNameFromPropName(key)}\".`);\n      }\n    } // if it is the first time this element is patched, or the current value is different to the previous value...\n\n\n    if (isFirstPatch || cur !== (isLiveBindingProp(sel, key) ? elm[key] : oldProps[key])) {\n      elm[key] = cur;\n    }\n  }\n}\n\nconst emptyVNode$1 = {\n  data: {}\n};\nvar modProps = {\n  create: vnode => update(emptyVNode$1, vnode),\n  update\n};\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\nconst classNameToClassMap = create(null);\n\nfunction getMapFromClassName(className) {\n  // Intentionally using == to match undefined and null values from computed style attribute\n  if (className == null) {\n    return EmptyObject;\n  } // computed class names must be string\n\n\n  className = isString(className) ? className : className + '';\n  let map = classNameToClassMap[className];\n\n  if (map) {\n    return map;\n  }\n\n  map = create(null);\n  let start = 0;\n  let o;\n  const len = className.length;\n\n  for (o = 0; o < len; o++) {\n    if (StringCharCodeAt.call(className, o) === SPACE_CHAR) {\n      if (o > start) {\n        map[StringSlice.call(className, start, o)] = true;\n      }\n\n      start = o + 1;\n    }\n  }\n\n  if (o > start) {\n    map[StringSlice.call(className, start, o)] = true;\n  }\n\n  classNameToClassMap[className] = map;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // just to make sure that this object never changes as part of the diffing algo\n    freeze(map);\n  }\n\n  return map;\n}\n\nfunction updateClassAttribute(oldVnode, vnode) {\n  const {\n    elm,\n    data: {\n      className: newClass\n    }\n  } = vnode;\n  const {\n    data: {\n      className: oldClass\n    }\n  } = oldVnode;\n\n  if (oldClass === newClass) {\n    return;\n  }\n\n  const {\n    classList\n  } = elm;\n  const newClassMap = getMapFromClassName(newClass);\n  const oldClassMap = getMapFromClassName(oldClass);\n  let name;\n\n  for (name in oldClassMap) {\n    // remove only if it is not in the new class collection and it is not set from within the instance\n    if (isUndefined(newClassMap[name])) {\n      classList.remove(name);\n    }\n  }\n\n  for (name in newClassMap) {\n    if (isUndefined(oldClassMap[name])) {\n      classList.add(name);\n    }\n  }\n}\n\nconst emptyVNode$2 = {\n  data: {}\n};\nvar modComputedClassName = {\n  create: vnode => updateClassAttribute(emptyVNode$2, vnode),\n  update: updateClassAttribute\n};\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\nfunction updateStyleAttribute(oldVnode, vnode) {\n  const {\n    style: newStyle\n  } = vnode.data;\n\n  if (oldVnode.data.style === newStyle) {\n    return;\n  }\n\n  const elm = vnode.elm;\n  const {\n    style\n  } = elm;\n\n  if (!isString(newStyle) || newStyle === '') {\n    removeAttribute.call(elm, 'style');\n  } else {\n    style.cssText = newStyle;\n  }\n}\n\nconst emptyVNode$3 = {\n  data: {}\n};\nvar modComputedStyle = {\n  create: vnode => updateStyleAttribute(emptyVNode$3, vnode),\n  update: updateStyleAttribute\n};\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// The compiler takes care of transforming the inline classnames into an object. It's faster to set the\n// different classnames properties individually instead of via a string.\n\nfunction createClassAttribute(vnode) {\n  const {\n    elm,\n    data: {\n      classMap\n    }\n  } = vnode;\n\n  if (isUndefined(classMap)) {\n    return;\n  }\n\n  const {\n    classList\n  } = elm;\n\n  for (const name in classMap) {\n    classList.add(name);\n  }\n}\n\nvar modStaticClassName = {\n  create: createClassAttribute\n};\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// The compiler takes care of transforming the inline style into an object. It's faster to set the\n// different style properties individually instead of via a string.\n\nfunction createStyleAttribute(vnode) {\n  const {\n    elm,\n    data: {\n      styleMap\n    }\n  } = vnode;\n\n  if (isUndefined(styleMap)) {\n    return;\n  }\n\n  const {\n    style\n  } = elm;\n\n  for (const name in styleMap) {\n    style[name] = styleMap[name];\n  }\n}\n\nvar modStaticStyle = {\n  create: createStyleAttribute\n};\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n/**\n@license\nCopyright (c) 2015 Simon Friis Vindum.\nThis code may only be used under the MIT License found at\nhttps://github.com/snabbdom/snabbdom/blob/master/LICENSE\nCode distributed by Snabbdom as part of the Snabbdom project at\nhttps://github.com/snabbdom/snabbdom/\n*/\n\nfunction isUndef(s) {\n  return s === undefined;\n}\n\nfunction sameVnode(vnode1, vnode2) {\n  return vnode1.key === vnode2.key && vnode1.sel === vnode2.sel;\n}\n\nfunction isVNode(vnode) {\n  return vnode != null;\n}\n\nfunction createKeyToOldIdx(children, beginIdx, endIdx) {\n  const map = {};\n  let j, key, ch; // TODO [#1637]: simplify this by assuming that all vnodes has keys\n\n  for (j = beginIdx; j <= endIdx; ++j) {\n    ch = children[j];\n\n    if (isVNode(ch)) {\n      key = ch.key;\n\n      if (key !== undefined) {\n        map[key] = j;\n      }\n    }\n  }\n\n  return map;\n}\n\nfunction addVnodes(parentElm, before, vnodes, startIdx, endIdx) {\n  for (; startIdx <= endIdx; ++startIdx) {\n    const ch = vnodes[startIdx];\n\n    if (isVNode(ch)) {\n      ch.hook.create(ch);\n      ch.hook.insert(ch, parentElm, before);\n    }\n  }\n}\n\nfunction removeVnodes(parentElm, vnodes, startIdx, endIdx) {\n  for (; startIdx <= endIdx; ++startIdx) {\n    const ch = vnodes[startIdx]; // text nodes do not have logic associated to them\n\n    if (isVNode(ch)) {\n      ch.hook.remove(ch, parentElm);\n    }\n  }\n}\n\nfunction updateDynamicChildren(parentElm, oldCh, newCh) {\n  let oldStartIdx = 0;\n  let newStartIdx = 0;\n  let oldEndIdx = oldCh.length - 1;\n  let oldStartVnode = oldCh[0];\n  let oldEndVnode = oldCh[oldEndIdx];\n  let newEndIdx = newCh.length - 1;\n  let newStartVnode = newCh[0];\n  let newEndVnode = newCh[newEndIdx];\n  let oldKeyToIdx;\n  let idxInOld;\n  let elmToMove;\n  let before;\n\n  while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n    if (!isVNode(oldStartVnode)) {\n      oldStartVnode = oldCh[++oldStartIdx]; // Vnode might have been moved left\n    } else if (!isVNode(oldEndVnode)) {\n      oldEndVnode = oldCh[--oldEndIdx];\n    } else if (!isVNode(newStartVnode)) {\n      newStartVnode = newCh[++newStartIdx];\n    } else if (!isVNode(newEndVnode)) {\n      newEndVnode = newCh[--newEndIdx];\n    } else if (sameVnode(oldStartVnode, newStartVnode)) {\n      patchVnode(oldStartVnode, newStartVnode);\n      oldStartVnode = oldCh[++oldStartIdx];\n      newStartVnode = newCh[++newStartIdx];\n    } else if (sameVnode(oldEndVnode, newEndVnode)) {\n      patchVnode(oldEndVnode, newEndVnode);\n      oldEndVnode = oldCh[--oldEndIdx];\n      newEndVnode = newCh[--newEndIdx];\n    } else if (sameVnode(oldStartVnode, newEndVnode)) {\n      // Vnode moved right\n      patchVnode(oldStartVnode, newEndVnode);\n      newEndVnode.hook.move(oldStartVnode, parentElm, oldEndVnode.elm.nextSibling);\n      oldStartVnode = oldCh[++oldStartIdx];\n      newEndVnode = newCh[--newEndIdx];\n    } else if (sameVnode(oldEndVnode, newStartVnode)) {\n      // Vnode moved left\n      patchVnode(oldEndVnode, newStartVnode);\n      newStartVnode.hook.move(oldEndVnode, parentElm, oldStartVnode.elm);\n      oldEndVnode = oldCh[--oldEndIdx];\n      newStartVnode = newCh[++newStartIdx];\n    } else {\n      if (oldKeyToIdx === undefined) {\n        oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);\n      }\n\n      idxInOld = oldKeyToIdx[newStartVnode.key];\n\n      if (isUndef(idxInOld)) {\n        // New element\n        newStartVnode.hook.create(newStartVnode);\n        newStartVnode.hook.insert(newStartVnode, parentElm, oldStartVnode.elm);\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        elmToMove = oldCh[idxInOld];\n\n        if (isVNode(elmToMove)) {\n          if (elmToMove.sel !== newStartVnode.sel) {\n            // New element\n            newStartVnode.hook.create(newStartVnode);\n            newStartVnode.hook.insert(newStartVnode, parentElm, oldStartVnode.elm);\n          } else {\n            patchVnode(elmToMove, newStartVnode);\n            oldCh[idxInOld] = undefined;\n            newStartVnode.hook.move(elmToMove, parentElm, oldStartVnode.elm);\n          }\n        }\n\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n  }\n\n  if (oldStartIdx <= oldEndIdx || newStartIdx <= newEndIdx) {\n    if (oldStartIdx > oldEndIdx) {\n      const n = newCh[newEndIdx + 1];\n      before = isVNode(n) ? n.elm : null;\n      addVnodes(parentElm, before, newCh, newStartIdx, newEndIdx);\n    } else {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n}\n\nfunction updateStaticChildren(parentElm, oldCh, newCh) {\n  const {\n    length\n  } = newCh;\n\n  if (oldCh.length === 0) {\n    // the old list is empty, we can directly insert anything new\n    addVnodes(parentElm, null, newCh, 0, length);\n    return;\n  } // if the old list is not empty, the new list MUST have the same\n  // amount of nodes, that's why we call this static children\n\n\n  let referenceElm = null;\n\n  for (let i = length - 1; i >= 0; i -= 1) {\n    const vnode = newCh[i];\n    const oldVNode = oldCh[i];\n\n    if (vnode !== oldVNode) {\n      if (isVNode(oldVNode)) {\n        if (isVNode(vnode)) {\n          // both vnodes must be equivalent, and se just need to patch them\n          patchVnode(oldVNode, vnode);\n          referenceElm = vnode.elm;\n        } else {\n          // removing the old vnode since the new one is null\n          oldVNode.hook.remove(oldVNode, parentElm);\n        }\n      } else if (isVNode(vnode)) {\n        // this condition is unnecessary\n        vnode.hook.create(vnode); // insert the new node one since the old one is null\n\n        vnode.hook.insert(vnode, parentElm, referenceElm);\n        referenceElm = vnode.elm;\n      }\n    }\n  }\n}\n\nfunction patchVnode(oldVnode, vnode) {\n  if (oldVnode !== vnode) {\n    vnode.elm = oldVnode.elm;\n    vnode.hook.update(oldVnode, vnode);\n  }\n}\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n\nfunction generateDataDescriptor(options) {\n  return assign({\n    configurable: true,\n    enumerable: true,\n    writable: true\n  }, options);\n}\n\nfunction generateAccessorDescriptor(options) {\n  return assign({\n    configurable: true,\n    enumerable: true\n  }, options);\n}\n\nlet isDomMutationAllowed = false;\n\nfunction unlockDomMutation() {\n  if (process.env.NODE_ENV === 'production') {\n    // this method should never leak to prod\n    throw new ReferenceError();\n  }\n\n  isDomMutationAllowed = true;\n}\n\nfunction lockDomMutation() {\n  if (process.env.NODE_ENV === 'production') {\n    // this method should never leak to prod\n    throw new ReferenceError();\n  }\n\n  isDomMutationAllowed = false;\n}\n\nfunction portalRestrictionErrorMessage(name, type) {\n  return `The \\`${name}\\` ${type} is available only on elements that use the \\`lwc:dom=\"manual\"\\` directive.`;\n}\n\nfunction getNodeRestrictionsDescriptors(node, options = {}) {\n  if (process.env.NODE_ENV === 'production') {\n    // this method should never leak to prod\n    throw new ReferenceError();\n  }\n\n  const originalTextContentDescriptor = getPropertyDescriptor(node, 'textContent');\n  const originalNodeValueDescriptor = getPropertyDescriptor(node, 'nodeValue');\n  const {\n    appendChild,\n    insertBefore,\n    removeChild,\n    replaceChild\n  } = node;\n  return {\n    appendChild: generateDataDescriptor({\n      value(aChild) {\n        if (this instanceof Element && isFalse$1(options.isPortal)) {\n          logError(portalRestrictionErrorMessage('appendChild', 'method'));\n        }\n\n        return appendChild.call(this, aChild);\n      }\n\n    }),\n    insertBefore: generateDataDescriptor({\n      value(newNode, referenceNode) {\n        if (!isDomMutationAllowed && this instanceof Element && isFalse$1(options.isPortal)) {\n          logError(portalRestrictionErrorMessage('insertBefore', 'method'));\n        }\n\n        return insertBefore.call(this, newNode, referenceNode);\n      }\n\n    }),\n    removeChild: generateDataDescriptor({\n      value(aChild) {\n        if (!isDomMutationAllowed && this instanceof Element && isFalse$1(options.isPortal)) {\n          logError(portalRestrictionErrorMessage('removeChild', 'method'));\n        }\n\n        return removeChild.call(this, aChild);\n      }\n\n    }),\n    replaceChild: generateDataDescriptor({\n      value(newChild, oldChild) {\n        if (this instanceof Element && isFalse$1(options.isPortal)) {\n          logError(portalRestrictionErrorMessage('replaceChild', 'method'));\n        }\n\n        return replaceChild.call(this, newChild, oldChild);\n      }\n\n    }),\n    nodeValue: generateAccessorDescriptor({\n      get() {\n        return originalNodeValueDescriptor.get.call(this);\n      },\n\n      set(value) {\n        if (!isDomMutationAllowed && this instanceof Element && isFalse$1(options.isPortal)) {\n          logError(portalRestrictionErrorMessage('nodeValue', 'property'));\n        }\n\n        originalNodeValueDescriptor.set.call(this, value);\n      }\n\n    }),\n    textContent: generateAccessorDescriptor({\n      get() {\n        return originalTextContentDescriptor.get.call(this);\n      },\n\n      set(value) {\n        if (this instanceof Element && isFalse$1(options.isPortal)) {\n          logError(portalRestrictionErrorMessage('textContent', 'property'));\n        }\n\n        originalTextContentDescriptor.set.call(this, value);\n      }\n\n    })\n  };\n}\n\nfunction getElementRestrictionsDescriptors(elm, options) {\n  if (process.env.NODE_ENV === 'production') {\n    // this method should never leak to prod\n    throw new ReferenceError();\n  }\n\n  const descriptors = getNodeRestrictionsDescriptors(elm, options);\n  const originalInnerHTMLDescriptor = getPropertyDescriptor(elm, 'innerHTML');\n  const originalOuterHTMLDescriptor = getPropertyDescriptor(elm, 'outerHTML');\n  assign(descriptors, {\n    innerHTML: generateAccessorDescriptor({\n      get() {\n        return originalInnerHTMLDescriptor.get.call(this);\n      },\n\n      set(value) {\n        if (isFalse$1(options.isPortal)) {\n          logError(portalRestrictionErrorMessage('innerHTML', 'property'), getAssociatedVMIfPresent(this));\n        }\n\n        return originalInnerHTMLDescriptor.set.call(this, value);\n      }\n\n    }),\n    outerHTML: generateAccessorDescriptor({\n      get() {\n        return originalOuterHTMLDescriptor.get.call(this);\n      },\n\n      set(_value) {\n        throw new TypeError(`Invalid attempt to set outerHTML on Element.`);\n      }\n\n    })\n  });\n  return descriptors;\n}\n\nconst BLOCKED_SHADOW_ROOT_METHODS = ['cloneNode', 'getElementById', 'getSelection', 'elementsFromPoint', 'dispatchEvent'];\n\nfunction getShadowRootRestrictionsDescriptors(sr) {\n  if (process.env.NODE_ENV === 'production') {\n    // this method should never leak to prod\n    throw new ReferenceError();\n  } // Disallowing properties in dev mode only to avoid people doing the wrong\n  // thing when using the real shadow root, because if that's the case,\n  // the component will not work when running with synthetic shadow.\n\n\n  const originalAddEventListener = sr.addEventListener;\n  const descriptors = getNodeRestrictionsDescriptors(sr);\n  const originalInnerHTMLDescriptor = getPropertyDescriptor(sr, 'innerHTML');\n  const originalTextContentDescriptor = getPropertyDescriptor(sr, 'textContent');\n  assign(descriptors, {\n    innerHTML: generateAccessorDescriptor({\n      get() {\n        return originalInnerHTMLDescriptor.get.call(this);\n      },\n\n      set(_value) {\n        throw new TypeError(`Invalid attempt to set innerHTML on ShadowRoot.`);\n      }\n\n    }),\n    textContent: generateAccessorDescriptor({\n      get() {\n        return originalTextContentDescriptor.get.call(this);\n      },\n\n      set(_value) {\n        throw new TypeError(`Invalid attempt to set textContent on ShadowRoot.`);\n      }\n\n    }),\n    addEventListener: generateDataDescriptor({\n      value(type, listener, options) {\n        // TODO [#420]: this is triggered when the component author attempts to add a listener\n        // programmatically into its Component's shadow root\n        if (!isUndefined(options)) {\n          logError('The `addEventListener` method in `LightningElement` does not support any options.', getAssociatedVMIfPresent(this));\n        } // Typescript does not like it when you treat the `arguments` object as an array\n        // @ts-ignore type-mismatch\n\n\n        return originalAddEventListener.apply(this, arguments);\n      }\n\n    })\n  });\n  forEach.call(BLOCKED_SHADOW_ROOT_METHODS, methodName => {\n    descriptors[methodName] = generateAccessorDescriptor({\n      get() {\n        throw new Error(`Disallowed method \"${methodName}\" in ShadowRoot.`);\n      }\n\n    });\n  });\n  return descriptors;\n} // Custom Elements Restrictions:\n// -----------------------------\n\n\nfunction getCustomElementRestrictionsDescriptors(elm) {\n  if (process.env.NODE_ENV === 'production') {\n    // this method should never leak to prod\n    throw new ReferenceError();\n  }\n\n  const descriptors = getNodeRestrictionsDescriptors(elm);\n  const originalAddEventListener = elm.addEventListener;\n  const originalInnerHTMLDescriptor = getPropertyDescriptor(elm, 'innerHTML');\n  const originalOuterHTMLDescriptor = getPropertyDescriptor(elm, 'outerHTML');\n  const originalTextContentDescriptor = getPropertyDescriptor(elm, 'textContent');\n  return assign(descriptors, {\n    innerHTML: generateAccessorDescriptor({\n      get() {\n        return originalInnerHTMLDescriptor.get.call(this);\n      },\n\n      set(_value) {\n        throw new TypeError(`Invalid attempt to set innerHTML on HTMLElement.`);\n      }\n\n    }),\n    outerHTML: generateAccessorDescriptor({\n      get() {\n        return originalOuterHTMLDescriptor.get.call(this);\n      },\n\n      set(_value) {\n        throw new TypeError(`Invalid attempt to set outerHTML on HTMLElement.`);\n      }\n\n    }),\n    textContent: generateAccessorDescriptor({\n      get() {\n        return originalTextContentDescriptor.get.call(this);\n      },\n\n      set(_value) {\n        throw new TypeError(`Invalid attempt to set textContent on HTMLElement.`);\n      }\n\n    }),\n    addEventListener: generateDataDescriptor({\n      value(type, listener, options) {\n        // TODO [#420]: this is triggered when the component author attempts to add a listener\n        // programmatically into a lighting element node\n        if (!isUndefined(options)) {\n          logError('The `addEventListener` method in `LightningElement` does not support any options.', getAssociatedVMIfPresent(this));\n        } // Typescript does not like it when you treat the `arguments` object as an array\n        // @ts-ignore type-mismatch\n\n\n        return originalAddEventListener.apply(this, arguments);\n      }\n\n    })\n  });\n}\n\nfunction getComponentRestrictionsDescriptors() {\n  if (process.env.NODE_ENV === 'production') {\n    // this method should never leak to prod\n    throw new ReferenceError();\n  }\n\n  return {\n    tagName: generateAccessorDescriptor({\n      get() {\n        throw new Error(`Usage of property \\`tagName\\` is disallowed because the component itself does` + ` not know which tagName will be used to create the element, therefore writing` + ` code that check for that value is error prone.`);\n      },\n\n      configurable: true,\n      enumerable: false\n    })\n  };\n}\n\nfunction getLightningElementPrototypeRestrictionsDescriptors(proto) {\n  if (process.env.NODE_ENV === 'production') {\n    // this method should never leak to prod\n    throw new ReferenceError();\n  }\n\n  const originalDispatchEvent = proto.dispatchEvent;\n  const descriptors = {\n    dispatchEvent: generateDataDescriptor({\n      value(event) {\n        const vm = getAssociatedVM(this);\n\n        if (!isNull(event) && isObject$1(event)) {\n          const {\n            type\n          } = event;\n\n          if (!/^[a-z][a-z0-9_]*$/.test(type)) {\n            logError(`Invalid event type \"${type}\" dispatched in element ${getComponentTag(vm)}.` + ` Event name must start with a lowercase letter and followed only lowercase` + ` letters, numbers, and underscores`, vm);\n          }\n        } // Typescript does not like it when you treat the `arguments` object as an array\n        // @ts-ignore type-mismatch\n\n\n        return originalDispatchEvent.apply(this, arguments);\n      }\n\n    })\n  };\n  forEach.call(getOwnPropertyNames(globalHTMLProperties), propName => {\n    if (propName in proto) {\n      return; // no need to redefine something that we are already exposing\n    }\n\n    descriptors[propName] = generateAccessorDescriptor({\n      get() {\n        const {\n          error,\n          attribute\n        } = globalHTMLProperties[propName];\n        const msg = [];\n        msg.push(`Accessing the global HTML property \"${propName}\" is disabled.`);\n\n        if (error) {\n          msg.push(error);\n        } else if (attribute) {\n          msg.push(`Instead access it via \\`this.getAttribute(\"${attribute}\")\\`.`);\n        }\n\n        logError(msg.join('\\n'), getAssociatedVM(this));\n      },\n\n      set() {\n        const {\n          readOnly\n        } = globalHTMLProperties[propName];\n\n        if (readOnly) {\n          logError(`The global HTML property \\`${propName}\\` is read-only.`, getAssociatedVM(this));\n        }\n      }\n\n    });\n  });\n  return descriptors;\n}\n\nfunction patchElementWithRestrictions(elm, options) {\n  defineProperties(elm, getElementRestrictionsDescriptors(elm, options));\n} // This routine will prevent access to certain properties on a shadow root instance to guarantee\n// that all components will work fine in IE11 and other browsers without shadow dom support.\n\n\nfunction patchShadowRootWithRestrictions(sr) {\n  defineProperties(sr, getShadowRootRestrictionsDescriptors(sr));\n}\n\nfunction patchCustomElementWithRestrictions(elm) {\n  const restrictionsDescriptors = getCustomElementRestrictionsDescriptors(elm);\n  const elmProto = getPrototypeOf(elm);\n  setPrototypeOf(elm, create(elmProto, restrictionsDescriptors));\n}\n\nfunction patchComponentWithRestrictions(cmp) {\n  defineProperties(cmp, getComponentRestrictionsDescriptors());\n}\n\nfunction patchLightningElementPrototypeWithRestrictions(proto) {\n  defineProperties(proto, getLightningElementPrototypeRestrictionsDescriptors(proto));\n}\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n/**\n * This is a descriptor map that contains\n * all standard properties that a Custom Element can support (including AOM properties), which\n * determines what kind of capabilities the Base HTML Element and\n * Base Lightning Element should support.\n */\n\n\nconst HTMLElementOriginalDescriptors = create(null);\nforEach.call(keys(PropNameToAttrNameMap), propName => {\n  // Note: intentionally using our in-house getPropertyDescriptor instead of getOwnPropertyDescriptor here because\n  // in IE11, some properties are on Element.prototype instead of HTMLElement, just to be sure.\n  const descriptor = getPropertyDescriptor(HTMLElement.prototype, propName);\n\n  if (!isUndefined(descriptor)) {\n    HTMLElementOriginalDescriptors[propName] = descriptor;\n  }\n});\nforEach.call(defaultDefHTMLPropertyNames, propName => {\n  // Note: intentionally using our in-house getPropertyDescriptor instead of getOwnPropertyDescriptor here because\n  // in IE11, id property is on Element.prototype instead of HTMLElement, and we suspect that more will fall into\n  // this category, so, better to be sure.\n  const descriptor = getPropertyDescriptor(HTMLElement.prototype, propName);\n\n  if (!isUndefined(descriptor)) {\n    HTMLElementOriginalDescriptors[propName] = descriptor;\n  }\n});\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n/**\n * This operation is called with a descriptor of an standard html property\n * that a Custom Element can support (including AOM properties), which\n * determines what kind of capabilities the Base Lightning Element should support. When producing the new descriptors\n * for the Base Lightning Element, it also include the reactivity bit, so the standard property is reactive.\n */\n\nfunction createBridgeToElementDescriptor(propName, descriptor) {\n  const {\n    get,\n    set,\n    enumerable,\n    configurable\n  } = descriptor;\n\n  if (!isFunction(get)) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert.fail(`Detected invalid public property descriptor for HTMLElement.prototype.${propName} definition. Missing the standard getter.`);\n    }\n\n    throw new TypeError();\n  }\n\n  if (!isFunction(set)) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert.fail(`Detected invalid public property descriptor for HTMLElement.prototype.${propName} definition. Missing the standard setter.`);\n    }\n\n    throw new TypeError();\n  }\n\n  return {\n    enumerable,\n    configurable,\n\n    get() {\n      const vm = getAssociatedVM(this);\n\n      if (isBeingConstructed(vm)) {\n        if (process.env.NODE_ENV !== 'production') {\n          const name = vm.elm.constructor.name;\n          logError(`\\`${name}\\` constructor can't read the value of property \\`${propName}\\` because the owner component hasn't set the value yet. Instead, use the \\`${name}\\` constructor to set a default value for the property.`, vm);\n        }\n\n        return;\n      }\n\n      componentValueObserved(vm, propName);\n      return get.call(vm.elm);\n    },\n\n    set(newValue) {\n      const vm = getAssociatedVM(this);\n\n      if (process.env.NODE_ENV !== 'production') {\n        const vmBeingRendered = getVMBeingRendered();\n        assert.invariant(!isInvokingRender, `${vmBeingRendered}.render() method has side effects on the state of ${vm}.${propName}`);\n        assert.invariant(!isUpdatingTemplate, `When updating the template of ${vmBeingRendered}, one of the accessors used by the template has side effects on the state of ${vm}.${propName}`);\n        assert.isFalse(isBeingConstructed(vm), `Failed to construct '${getComponentTag(vm)}': The result must not have attributes.`);\n        assert.invariant(!isObject$1(newValue) || isNull(newValue), `Invalid value \"${newValue}\" for \"${propName}\" of ${vm}. Value cannot be an object, must be a primitive value.`);\n      }\n\n      if (newValue !== vm.cmpProps[propName]) {\n        vm.cmpProps[propName] = newValue;\n        componentValueMutated(vm, propName);\n      }\n\n      return set.call(vm.elm, newValue);\n    }\n\n  };\n}\n\nfunction getLinkedElement(cmp) {\n  return getAssociatedVM(cmp).elm;\n}\n/**\n * This class is the base class for any LWC element.\n * Some elements directly extends this class, others implement it via inheritance.\n **/\n\n\nfunction BaseLightningElementConstructor() {\n  // This should be as performant as possible, while any initialization should be done lazily\n  if (isNull(vmBeingConstructed)) {\n    throw new ReferenceError('Illegal constructor');\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert.invariant(vmBeingConstructed.elm instanceof HTMLElement, `Component creation requires a DOM element to be associated to ${vmBeingConstructed}.`);\n  }\n\n  const vm = vmBeingConstructed;\n  const {\n    elm,\n    mode,\n    def: {\n      ctor\n    }\n  } = vm;\n  const component = this;\n  const cmpRoot = elm.attachShadow({\n    mode,\n    delegatesFocus: !!ctor.delegatesFocus,\n    '$$lwc-synthetic-mode$$': true\n  });\n  vm.component = this;\n  vm.cmpRoot = cmpRoot; // Locker hooks assignment. When the LWC engine run with Locker, Locker intercepts all the new\n  // component creation and passes hooks to instrument all the component interactions with the\n  // engine. We are intentionally hiding this argument from the formal API of LightningElement\n  // because we don't want folks to know about it just yet.\n\n  if (arguments.length === 1) {\n    const {\n      callHook,\n      setHook,\n      getHook\n    } = arguments[0];\n    vm.callHook = callHook;\n    vm.setHook = setHook;\n    vm.getHook = getHook;\n  } // Linking elm, shadow root and component with the VM.\n\n\n  associateVM(component, vm);\n  associateVM(cmpRoot, vm);\n  associateVM(elm, vm); // Adding extra guard rails in DEV mode.\n\n  if (process.env.NODE_ENV !== 'production') {\n    patchCustomElementWithRestrictions(elm);\n    patchComponentWithRestrictions(component);\n    patchShadowRootWithRestrictions(cmpRoot);\n  }\n\n  return this;\n}\n\nBaseLightningElementConstructor.prototype = {\n  constructor: BaseLightningElementConstructor,\n\n  dispatchEvent() {\n    const elm = getLinkedElement(this); // Typescript does not like it when you treat the `arguments` object as an array\n    // @ts-ignore type-mismatch;\n\n    return elm.dispatchEvent.apply(elm, arguments);\n  },\n\n  addEventListener(type, listener, options) {\n    const vm = getAssociatedVM(this);\n\n    if (process.env.NODE_ENV !== 'production') {\n      const vmBeingRendered = getVMBeingRendered();\n      assert.invariant(!isInvokingRender, `${vmBeingRendered}.render() method has side effects on the state of ${vm} by adding an event listener for \"${type}\".`);\n      assert.invariant(!isUpdatingTemplate, `Updating the template of ${vmBeingRendered} has side effects on the state of ${vm} by adding an event listener for \"${type}\".`);\n      assert.invariant(isFunction(listener), `Invalid second argument for this.addEventListener() in ${vm} for event \"${type}\". Expected an EventListener but received ${listener}.`);\n    }\n\n    const wrappedListener = getWrappedComponentsListener(vm, listener);\n    vm.elm.addEventListener(type, wrappedListener, options);\n  },\n\n  removeEventListener(type, listener, options) {\n    const vm = getAssociatedVM(this);\n    const wrappedListener = getWrappedComponentsListener(vm, listener);\n    vm.elm.removeEventListener(type, wrappedListener, options);\n  },\n\n  hasAttribute() {\n    const elm = getLinkedElement(this); // Typescript does not like it when you treat the `arguments` object as an array\n    // @ts-ignore type-mismatch\n\n    return elm.hasAttribute.apply(elm, arguments);\n  },\n\n  hasAttributeNS() {\n    const elm = getLinkedElement(this); // Typescript does not like it when you treat the `arguments` object as an array\n    // @ts-ignore type-mismatch\n\n    return elm.hasAttributeNS.apply(elm, arguments);\n  },\n\n  removeAttribute(attrName) {\n    const elm = getLinkedElement(this);\n    unlockAttribute(elm, attrName); // Typescript does not like it when you treat the `arguments` object as an array\n    // @ts-ignore type-mismatch\n\n    elm.removeAttribute.apply(elm, arguments);\n    lockAttribute();\n  },\n\n  removeAttributeNS(_namespace, attrName) {\n    const elm = getLinkedElement(this);\n    unlockAttribute(elm, attrName); // Typescript does not like it when you treat the `arguments` object as an array\n    // @ts-ignore type-mismatch\n\n    elm.removeAttributeNS.apply(elm, arguments);\n    lockAttribute();\n  },\n\n  getAttribute() {\n    const elm = getLinkedElement(this); // Typescript does not like it when you treat the `arguments` object as an array\n    // @ts-ignore type-mismatch\n\n    return elm.getAttribute.apply(elm, arguments);\n  },\n\n  getAttributeNS() {\n    const elm = getLinkedElement(this); // Typescript does not like it when you treat the `arguments` object as an array\n    // @ts-ignore type-mismatch\n\n    return elm.getAttributeNS.apply(elm, arguments);\n  },\n\n  setAttribute(attrName) {\n    const elm = getLinkedElement(this);\n\n    if (process.env.NODE_ENV !== 'production') {\n      const vm = getAssociatedVM(this);\n      assert.isFalse(isBeingConstructed(vm), `Failed to construct '${getComponentTag(vm)}': The result must not have attributes.`);\n    }\n\n    unlockAttribute(elm, attrName); // Typescript does not like it when you treat the `arguments` object as an array\n    // @ts-ignore type-mismatch\n\n    elm.setAttribute.apply(elm, arguments);\n    lockAttribute();\n  },\n\n  setAttributeNS(_namespace, attrName) {\n    const elm = getLinkedElement(this);\n\n    if (process.env.NODE_ENV !== 'production') {\n      const vm = getAssociatedVM(this);\n      assert.isFalse(isBeingConstructed(vm), `Failed to construct '${getComponentTag(vm)}': The result must not have attributes.`);\n    }\n\n    unlockAttribute(elm, attrName); // Typescript does not like it when you treat the `arguments` object as an array\n    // @ts-ignore type-mismatch\n\n    elm.setAttributeNS.apply(elm, arguments);\n    lockAttribute();\n  },\n\n  getBoundingClientRect() {\n    const elm = getLinkedElement(this);\n\n    if (process.env.NODE_ENV !== 'production') {\n      const vm = getAssociatedVM(this);\n      assert.isFalse(isBeingConstructed(vm), `this.getBoundingClientRect() should not be called during the construction of the custom element for ${getComponentTag(vm)} because the element is not yet in the DOM, instead, you can use it in one of the available life-cycle hooks.`);\n    } // Typescript does not like it when you treat the `arguments` object as an array\n    // @ts-ignore type-mismatch\n\n\n    return elm.getBoundingClientRect.apply(elm, arguments);\n  },\n\n  /**\n   * Returns the first element that is a descendant of node that\n   * matches selectors.\n   */\n  // querySelector<K extends keyof HTMLElementTagNameMap>(selectors: K): HTMLElementTagNameMap[K] | null;\n  // querySelector<K extends keyof SVGElementTagNameMap>(selectors: K): SVGElementTagNameMap[K] | null;\n  querySelector() {\n    const elm = getLinkedElement(this);\n\n    if (process.env.NODE_ENV !== 'production') {\n      const vm = getAssociatedVM(this);\n      assert.isFalse(isBeingConstructed(vm), `this.querySelector() cannot be called during the construction of the custom element for ${getComponentTag(vm)} because no children has been added to this element yet.`);\n    } // Typescript does not like it when you treat the `arguments` object as an array\n    // @ts-ignore type-mismatch\n\n\n    return elm.querySelector.apply(elm, arguments);\n  },\n\n  /**\n   * Returns all element descendants of node that\n   * match selectors.\n   */\n  // querySelectorAll<K extends keyof HTMLElementTagNameMap>(selectors: K): NodeListOf<HTMLElementTagNameMap[K]>,\n  // querySelectorAll<K extends keyof SVGElementTagNameMap>(selectors: K): NodeListOf<SVGElementTagNameMap[K]>,\n  querySelectorAll() {\n    const elm = getLinkedElement(this);\n\n    if (process.env.NODE_ENV !== 'production') {\n      const vm = getAssociatedVM(this);\n      assert.isFalse(isBeingConstructed(vm), `this.querySelectorAll() cannot be called during the construction of the custom element for ${getComponentTag(vm)} because no children has been added to this element yet.`);\n    } // Typescript does not like it when you treat the `arguments` object as an array\n    // @ts-ignore type-mismatch\n\n\n    return elm.querySelectorAll.apply(elm, arguments);\n  },\n\n  /**\n   * Returns all element descendants of node that\n   * match the provided tagName.\n   */\n  getElementsByTagName() {\n    const elm = getLinkedElement(this);\n\n    if (process.env.NODE_ENV !== 'production') {\n      const vm = getAssociatedVM(this);\n      assert.isFalse(isBeingConstructed(vm), `this.getElementsByTagName() cannot be called during the construction of the custom element for ${getComponentTag(vm)} because no children has been added to this element yet.`);\n    } // Typescript does not like it when you treat the `arguments` object as an array\n    // @ts-ignore type-mismatch\n\n\n    return elm.getElementsByTagName.apply(elm, arguments);\n  },\n\n  /**\n   * Returns all element descendants of node that\n   * match the provide classnames.\n   */\n  getElementsByClassName() {\n    const elm = getLinkedElement(this);\n\n    if (process.env.NODE_ENV !== 'production') {\n      const vm = getAssociatedVM(this);\n      assert.isFalse(isBeingConstructed(vm), `this.getElementsByClassName() cannot be called during the construction of the custom element for ${getComponentTag(vm)} because no children has been added to this element yet.`);\n    } // Typescript does not like it when you treat the `arguments` object as an array\n    // @ts-ignore type-mismatch\n\n\n    return elm.getElementsByClassName.apply(elm, arguments);\n  },\n\n  get isConnected() {\n    return getLinkedElement(this).isConnected;\n  },\n\n  get classList() {\n    if (process.env.NODE_ENV !== 'production') {\n      const vm = getAssociatedVM(this); // TODO [#1290]: this still fails in dev but works in production, eventually, we should just throw in all modes\n\n      assert.isFalse(isBeingConstructed(vm), `Failed to construct ${vm}: The result must not have attributes. Adding or tampering with classname in constructor is not allowed in a web component, use connectedCallback() instead.`);\n    }\n\n    return getLinkedElement(this).classList;\n  },\n\n  get template() {\n    const vm = getAssociatedVM(this);\n    return vm.cmpRoot;\n  },\n\n  get shadowRoot() {\n    // From within the component instance, the shadowRoot is always\n    // reported as \"closed\". Authors should rely on this.template instead.\n    return null;\n  },\n\n  render() {\n    const vm = getAssociatedVM(this);\n    return vm.def.template;\n  },\n\n  toString() {\n    const vm = getAssociatedVM(this);\n    return `[object ${vm.def.name}]`;\n  }\n\n};\nconst lightningBasedDescriptors = create(null);\n\nfor (const propName in HTMLElementOriginalDescriptors) {\n  lightningBasedDescriptors[propName] = createBridgeToElementDescriptor(propName, HTMLElementOriginalDescriptors[propName]);\n}\n\ndefineProperties(BaseLightningElementConstructor.prototype, lightningBasedDescriptors);\ndefineProperty(BaseLightningElementConstructor, 'CustomElementConstructor', {\n  get() {\n    // If required, a runtime-specific implementation must be defined.\n    throw new ReferenceError('The current runtime does not support CustomElementConstructor.');\n  },\n\n  configurable: true\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  patchLightningElementPrototypeWithRestrictions(BaseLightningElementConstructor.prototype);\n} // @ts-ignore\n\n\nconst BaseLightningElement = BaseLightningElementConstructor;\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n/**\n * @wire decorator to wire fields and methods to a wire adapter in\n * LWC Components. This function implements the internals of this\n * decorator.\n */\n\nfunction wire(_adapter, _config) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert.fail('@wire(adapter, config?) may only be used as a decorator.');\n  }\n\n  throw new Error();\n}\n\nfunction internalWireFieldDecorator(key) {\n  return {\n    get() {\n      const vm = getAssociatedVM(this);\n      componentValueObserved(vm, key);\n      return vm.cmpFields[key];\n    },\n\n    set(value) {\n      const vm = getAssociatedVM(this);\n      /**\n       * Reactivity for wired fields is provided in wiring.\n       * We intentionally add reactivity here since this is just\n       * letting the author to do the wrong thing, but it will keep our\n       * system to be backward compatible.\n       */\n\n      if (value !== vm.cmpFields[key]) {\n        vm.cmpFields[key] = value;\n        componentValueMutated(vm, key);\n      }\n    },\n\n    enumerable: true,\n    configurable: true\n  };\n}\n/**\n * Copyright (C) 2017 salesforce.com, inc.\n */\n\n\nconst {\n  isArray: isArray$2\n} = Array;\nconst {\n  getPrototypeOf: getPrototypeOf$1,\n  create: ObjectCreate,\n  defineProperty: ObjectDefineProperty,\n  defineProperties: ObjectDefineProperties,\n  isExtensible,\n  getOwnPropertyDescriptor: getOwnPropertyDescriptor$1,\n  getOwnPropertyNames: getOwnPropertyNames$1,\n  getOwnPropertySymbols,\n  preventExtensions,\n  hasOwnProperty: hasOwnProperty$1\n} = Object;\nconst {\n  push: ArrayPush$2,\n  concat: ArrayConcat,\n  map: ArrayMap$1\n} = Array.prototype;\nconst OtS$1 = {}.toString;\n\nfunction toString$1(obj) {\n  if (obj && obj.toString) {\n    return obj.toString();\n  } else if (typeof obj === 'object') {\n    return OtS$1.call(obj);\n  } else {\n    return obj + '';\n  }\n}\n\nfunction isUndefined$2(obj) {\n  return obj === undefined;\n}\n\nfunction isFunction$1(obj) {\n  return typeof obj === 'function';\n}\n\nfunction isObject$2(obj) {\n  return typeof obj === 'object';\n}\n\nconst proxyToValueMap = new WeakMap();\n\nfunction registerProxy(proxy, value) {\n  proxyToValueMap.set(proxy, value);\n}\n\nconst unwrap = replicaOrAny => proxyToValueMap.get(replicaOrAny) || replicaOrAny;\n\nfunction wrapValue(membrane, value) {\n  return membrane.valueIsObservable(value) ? membrane.getProxy(value) : value;\n}\n/**\n * Unwrap property descriptors will set value on original descriptor\n * We only need to unwrap if value is specified\n * @param descriptor external descrpitor provided to define new property on original value\n */\n\n\nfunction unwrapDescriptor(descriptor) {\n  if (hasOwnProperty$1.call(descriptor, 'value')) {\n    descriptor.value = unwrap(descriptor.value);\n  }\n\n  return descriptor;\n}\n\nfunction lockShadowTarget(membrane, shadowTarget, originalTarget) {\n  const targetKeys = ArrayConcat.call(getOwnPropertyNames$1(originalTarget), getOwnPropertySymbols(originalTarget));\n  targetKeys.forEach(key => {\n    let descriptor = getOwnPropertyDescriptor$1(originalTarget, key); // We do not need to wrap the descriptor if configurable\n    // Because we can deal with wrapping it when user goes through\n    // Get own property descriptor. There is also a chance that this descriptor\n    // could change sometime in the future, so we can defer wrapping\n    // until we need to\n\n    if (!descriptor.configurable) {\n      descriptor = wrapDescriptor(membrane, descriptor, wrapValue);\n    }\n\n    ObjectDefineProperty(shadowTarget, key, descriptor);\n  });\n  preventExtensions(shadowTarget);\n}\n\nclass ReactiveProxyHandler {\n  constructor(membrane, value) {\n    this.originalTarget = value;\n    this.membrane = membrane;\n  }\n\n  get(shadowTarget, key) {\n    const {\n      originalTarget,\n      membrane\n    } = this;\n    const value = originalTarget[key];\n    const {\n      valueObserved\n    } = membrane;\n    valueObserved(originalTarget, key);\n    return membrane.getProxy(value);\n  }\n\n  set(shadowTarget, key, value) {\n    const {\n      originalTarget,\n      membrane: {\n        valueMutated\n      }\n    } = this;\n    const oldValue = originalTarget[key];\n\n    if (oldValue !== value) {\n      originalTarget[key] = value;\n      valueMutated(originalTarget, key);\n    } else if (key === 'length' && isArray$2(originalTarget)) {\n      // fix for issue #236: push will add the new index, and by the time length\n      // is updated, the internal length is already equal to the new length value\n      // therefore, the oldValue is equal to the value. This is the forking logic\n      // to support this use case.\n      valueMutated(originalTarget, key);\n    }\n\n    return true;\n  }\n\n  deleteProperty(shadowTarget, key) {\n    const {\n      originalTarget,\n      membrane: {\n        valueMutated\n      }\n    } = this;\n    delete originalTarget[key];\n    valueMutated(originalTarget, key);\n    return true;\n  }\n\n  apply(shadowTarget, thisArg, argArray) {\n    /* No op */\n  }\n\n  construct(target, argArray, newTarget) {\n    /* No op */\n  }\n\n  has(shadowTarget, key) {\n    const {\n      originalTarget,\n      membrane: {\n        valueObserved\n      }\n    } = this;\n    valueObserved(originalTarget, key);\n    return key in originalTarget;\n  }\n\n  ownKeys(shadowTarget) {\n    const {\n      originalTarget\n    } = this;\n    return ArrayConcat.call(getOwnPropertyNames$1(originalTarget), getOwnPropertySymbols(originalTarget));\n  }\n\n  isExtensible(shadowTarget) {\n    const shadowIsExtensible = isExtensible(shadowTarget);\n\n    if (!shadowIsExtensible) {\n      return shadowIsExtensible;\n    }\n\n    const {\n      originalTarget,\n      membrane\n    } = this;\n    const targetIsExtensible = isExtensible(originalTarget);\n\n    if (!targetIsExtensible) {\n      lockShadowTarget(membrane, shadowTarget, originalTarget);\n    }\n\n    return targetIsExtensible;\n  }\n\n  setPrototypeOf(shadowTarget, prototype) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`Invalid setPrototypeOf invocation for reactive proxy ${toString$1(this.originalTarget)}. Prototype of reactive objects cannot be changed.`);\n    }\n  }\n\n  getPrototypeOf(shadowTarget) {\n    const {\n      originalTarget\n    } = this;\n    return getPrototypeOf$1(originalTarget);\n  }\n\n  getOwnPropertyDescriptor(shadowTarget, key) {\n    const {\n      originalTarget,\n      membrane\n    } = this;\n    const {\n      valueObserved\n    } = this.membrane; // keys looked up via hasOwnProperty need to be reactive\n\n    valueObserved(originalTarget, key);\n    let desc = getOwnPropertyDescriptor$1(originalTarget, key);\n\n    if (isUndefined$2(desc)) {\n      return desc;\n    }\n\n    const shadowDescriptor = getOwnPropertyDescriptor$1(shadowTarget, key);\n\n    if (!isUndefined$2(shadowDescriptor)) {\n      return shadowDescriptor;\n    } // Note: by accessing the descriptor, the key is marked as observed\n    // but access to the value, setter or getter (if available) cannot observe\n    // mutations, just like regular methods, in which case we just do nothing.\n\n\n    desc = wrapDescriptor(membrane, desc, wrapValue);\n\n    if (!desc.configurable) {\n      // If descriptor from original target is not configurable,\n      // We must copy the wrapped descriptor over to the shadow target.\n      // Otherwise, proxy will throw an invariant error.\n      // This is our last chance to lock the value.\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getOwnPropertyDescriptor#Invariants\n      ObjectDefineProperty(shadowTarget, key, desc);\n    }\n\n    return desc;\n  }\n\n  preventExtensions(shadowTarget) {\n    const {\n      originalTarget,\n      membrane\n    } = this;\n    lockShadowTarget(membrane, shadowTarget, originalTarget);\n    preventExtensions(originalTarget);\n    return true;\n  }\n\n  defineProperty(shadowTarget, key, descriptor) {\n    const {\n      originalTarget,\n      membrane\n    } = this;\n    const {\n      valueMutated\n    } = membrane;\n    const {\n      configurable\n    } = descriptor; // We have to check for value in descriptor\n    // because Object.freeze(proxy) calls this method\n    // with only { configurable: false, writeable: false }\n    // Additionally, method will only be called with writeable:false\n    // if the descriptor has a value, as opposed to getter/setter\n    // So we can just check if writable is present and then see if\n    // value is present. This eliminates getter and setter descriptors\n\n    if (hasOwnProperty$1.call(descriptor, 'writable') && !hasOwnProperty$1.call(descriptor, 'value')) {\n      const originalDescriptor = getOwnPropertyDescriptor$1(originalTarget, key);\n      descriptor.value = originalDescriptor.value;\n    }\n\n    ObjectDefineProperty(originalTarget, key, unwrapDescriptor(descriptor));\n\n    if (configurable === false) {\n      ObjectDefineProperty(shadowTarget, key, wrapDescriptor(membrane, descriptor, wrapValue));\n    }\n\n    valueMutated(originalTarget, key);\n    return true;\n  }\n\n}\n\nfunction wrapReadOnlyValue(membrane, value) {\n  return membrane.valueIsObservable(value) ? membrane.getReadOnlyProxy(value) : value;\n}\n\nclass ReadOnlyHandler {\n  constructor(membrane, value) {\n    this.originalTarget = value;\n    this.membrane = membrane;\n  }\n\n  get(shadowTarget, key) {\n    const {\n      membrane,\n      originalTarget\n    } = this;\n    const value = originalTarget[key];\n    const {\n      valueObserved\n    } = membrane;\n    valueObserved(originalTarget, key);\n    return membrane.getReadOnlyProxy(value);\n  }\n\n  set(shadowTarget, key, value) {\n    if (process.env.NODE_ENV !== 'production') {\n      const {\n        originalTarget\n      } = this;\n      throw new Error(`Invalid mutation: Cannot set \"${key.toString()}\" on \"${originalTarget}\". \"${originalTarget}\" is read-only.`);\n    }\n\n    return false;\n  }\n\n  deleteProperty(shadowTarget, key) {\n    if (process.env.NODE_ENV !== 'production') {\n      const {\n        originalTarget\n      } = this;\n      throw new Error(`Invalid mutation: Cannot delete \"${key.toString()}\" on \"${originalTarget}\". \"${originalTarget}\" is read-only.`);\n    }\n\n    return false;\n  }\n\n  apply(shadowTarget, thisArg, argArray) {\n    /* No op */\n  }\n\n  construct(target, argArray, newTarget) {\n    /* No op */\n  }\n\n  has(shadowTarget, key) {\n    const {\n      originalTarget,\n      membrane: {\n        valueObserved\n      }\n    } = this;\n    valueObserved(originalTarget, key);\n    return key in originalTarget;\n  }\n\n  ownKeys(shadowTarget) {\n    const {\n      originalTarget\n    } = this;\n    return ArrayConcat.call(getOwnPropertyNames$1(originalTarget), getOwnPropertySymbols(originalTarget));\n  }\n\n  setPrototypeOf(shadowTarget, prototype) {\n    if (process.env.NODE_ENV !== 'production') {\n      const {\n        originalTarget\n      } = this;\n      throw new Error(`Invalid prototype mutation: Cannot set prototype on \"${originalTarget}\". \"${originalTarget}\" prototype is read-only.`);\n    }\n  }\n\n  getOwnPropertyDescriptor(shadowTarget, key) {\n    const {\n      originalTarget,\n      membrane\n    } = this;\n    const {\n      valueObserved\n    } = membrane; // keys looked up via hasOwnProperty need to be reactive\n\n    valueObserved(originalTarget, key);\n    let desc = getOwnPropertyDescriptor$1(originalTarget, key);\n\n    if (isUndefined$2(desc)) {\n      return desc;\n    }\n\n    const shadowDescriptor = getOwnPropertyDescriptor$1(shadowTarget, key);\n\n    if (!isUndefined$2(shadowDescriptor)) {\n      return shadowDescriptor;\n    } // Note: by accessing the descriptor, the key is marked as observed\n    // but access to the value or getter (if available) cannot be observed,\n    // just like regular methods, in which case we just do nothing.\n\n\n    desc = wrapDescriptor(membrane, desc, wrapReadOnlyValue);\n\n    if (hasOwnProperty$1.call(desc, 'set')) {\n      desc.set = undefined; // readOnly membrane does not allow setters\n    }\n\n    if (!desc.configurable) {\n      // If descriptor from original target is not configurable,\n      // We must copy the wrapped descriptor over to the shadow target.\n      // Otherwise, proxy will throw an invariant error.\n      // This is our last chance to lock the value.\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getOwnPropertyDescriptor#Invariants\n      ObjectDefineProperty(shadowTarget, key, desc);\n    }\n\n    return desc;\n  }\n\n  preventExtensions(shadowTarget) {\n    if (process.env.NODE_ENV !== 'production') {\n      const {\n        originalTarget\n      } = this;\n      throw new Error(`Invalid mutation: Cannot preventExtensions on ${originalTarget}\". \"${originalTarget} is read-only.`);\n    }\n\n    return false;\n  }\n\n  defineProperty(shadowTarget, key, descriptor) {\n    if (process.env.NODE_ENV !== 'production') {\n      const {\n        originalTarget\n      } = this;\n      throw new Error(`Invalid mutation: Cannot defineProperty \"${key.toString()}\" on \"${originalTarget}\". \"${originalTarget}\" is read-only.`);\n    }\n\n    return false;\n  }\n\n}\n\nfunction extract(objectOrArray) {\n  if (isArray$2(objectOrArray)) {\n    return objectOrArray.map(item => {\n      const original = unwrap(item);\n\n      if (original !== item) {\n        return extract(original);\n      }\n\n      return item;\n    });\n  }\n\n  const obj = ObjectCreate(getPrototypeOf$1(objectOrArray));\n  const names = getOwnPropertyNames$1(objectOrArray);\n  return ArrayConcat.call(names, getOwnPropertySymbols(objectOrArray)).reduce((seed, key) => {\n    const item = objectOrArray[key];\n    const original = unwrap(item);\n\n    if (original !== item) {\n      seed[key] = extract(original);\n    } else {\n      seed[key] = item;\n    }\n\n    return seed;\n  }, obj);\n}\n\nconst formatter = {\n  header: plainOrProxy => {\n    const originalTarget = unwrap(plainOrProxy); // if originalTarget is falsy or not unwrappable, exit\n\n    if (!originalTarget || originalTarget === plainOrProxy) {\n      return null;\n    }\n\n    const obj = extract(plainOrProxy);\n    return ['object', {\n      object: obj\n    }];\n  },\n  hasBody: () => {\n    return false;\n  },\n  body: () => {\n    return null;\n  }\n}; // Inspired from paulmillr/es6-shim\n// https://github.com/paulmillr/es6-shim/blob/master/es6-shim.js#L176-L185\n\nfunction getGlobal() {\n  // the only reliable means to get the global object is `Function('return this')()`\n  // However, this causes CSP violations in Chrome apps.\n  if (typeof globalThis !== 'undefined') {\n    return globalThis;\n  }\n\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n\n  if (typeof global !== 'undefined') {\n    return global;\n  } // Gracefully degrade if not able to locate the global object\n\n\n  return {};\n}\n\nfunction init() {\n  if (process.env.NODE_ENV === 'production') {\n    // this method should never leak to prod\n    throw new ReferenceError();\n  }\n\n  const global = getGlobal(); // Custom Formatter for Dev Tools. To enable this, open Chrome Dev Tools\n  //  - Go to Settings,\n  //  - Under console, select \"Enable custom formatters\"\n  // For more information, https://docs.google.com/document/d/1FTascZXT9cxfetuPRT2eXPQKXui4nWFivUnS_335T3U/preview\n\n  const devtoolsFormatters = global.devtoolsFormatters || [];\n  ArrayPush$2.call(devtoolsFormatters, formatter);\n  global.devtoolsFormatters = devtoolsFormatters;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  init();\n}\n\nfunction createShadowTarget(value) {\n  let shadowTarget = undefined;\n\n  if (isArray$2(value)) {\n    shadowTarget = [];\n  } else if (isObject$2(value)) {\n    shadowTarget = {};\n  }\n\n  return shadowTarget;\n}\n\nconst ObjectDotPrototype = Object.prototype;\n\nfunction defaultValueIsObservable(value) {\n  // intentionally checking for null\n  if (value === null) {\n    return false;\n  } // treat all non-object types, including undefined, as non-observable values\n\n\n  if (typeof value !== 'object') {\n    return false;\n  }\n\n  if (isArray$2(value)) {\n    return true;\n  }\n\n  const proto = getPrototypeOf$1(value);\n  return proto === ObjectDotPrototype || proto === null || getPrototypeOf$1(proto) === null;\n}\n\nconst defaultValueObserved = (obj, key) => {\n  /* do nothing */\n};\n\nconst defaultValueMutated = (obj, key) => {\n  /* do nothing */\n};\n\nconst defaultValueDistortion = value => value;\n\nfunction wrapDescriptor(membrane, descriptor, getValue) {\n  const {\n    set,\n    get\n  } = descriptor;\n\n  if (hasOwnProperty$1.call(descriptor, 'value')) {\n    descriptor.value = getValue(membrane, descriptor.value);\n  } else {\n    if (!isUndefined$2(get)) {\n      descriptor.get = function () {\n        // invoking the original getter with the original target\n        return getValue(membrane, get.call(unwrap(this)));\n      };\n    }\n\n    if (!isUndefined$2(set)) {\n      descriptor.set = function (value) {\n        // At this point we don't have a clear indication of whether\n        // or not a valid mutation will occur, we don't have the key,\n        // and we are not sure why and how they are invoking this setter.\n        // Nevertheless we preserve the original semantics by invoking the\n        // original setter with the original target and the unwrapped value\n        set.call(unwrap(this), membrane.unwrapProxy(value));\n      };\n    }\n  }\n\n  return descriptor;\n}\n\nclass ReactiveMembrane {\n  constructor(options) {\n    this.valueDistortion = defaultValueDistortion;\n    this.valueMutated = defaultValueMutated;\n    this.valueObserved = defaultValueObserved;\n    this.valueIsObservable = defaultValueIsObservable;\n    this.objectGraph = new WeakMap();\n\n    if (!isUndefined$2(options)) {\n      const {\n        valueDistortion,\n        valueMutated,\n        valueObserved,\n        valueIsObservable\n      } = options;\n      this.valueDistortion = isFunction$1(valueDistortion) ? valueDistortion : defaultValueDistortion;\n      this.valueMutated = isFunction$1(valueMutated) ? valueMutated : defaultValueMutated;\n      this.valueObserved = isFunction$1(valueObserved) ? valueObserved : defaultValueObserved;\n      this.valueIsObservable = isFunction$1(valueIsObservable) ? valueIsObservable : defaultValueIsObservable;\n    }\n  }\n\n  getProxy(value) {\n    const unwrappedValue = unwrap(value);\n    const distorted = this.valueDistortion(unwrappedValue);\n\n    if (this.valueIsObservable(distorted)) {\n      const o = this.getReactiveState(unwrappedValue, distorted); // when trying to extract the writable version of a readonly\n      // we return the readonly.\n\n      return o.readOnly === value ? value : o.reactive;\n    }\n\n    return distorted;\n  }\n\n  getReadOnlyProxy(value) {\n    value = unwrap(value);\n    const distorted = this.valueDistortion(value);\n\n    if (this.valueIsObservable(distorted)) {\n      return this.getReactiveState(value, distorted).readOnly;\n    }\n\n    return distorted;\n  }\n\n  unwrapProxy(p) {\n    return unwrap(p);\n  }\n\n  getReactiveState(value, distortedValue) {\n    const {\n      objectGraph\n    } = this;\n    let reactiveState = objectGraph.get(distortedValue);\n\n    if (reactiveState) {\n      return reactiveState;\n    }\n\n    const membrane = this;\n    reactiveState = {\n      get reactive() {\n        const reactiveHandler = new ReactiveProxyHandler(membrane, distortedValue); // caching the reactive proxy after the first time it is accessed\n\n        const proxy = new Proxy(createShadowTarget(distortedValue), reactiveHandler);\n        registerProxy(proxy, value);\n        ObjectDefineProperty(this, 'reactive', {\n          value: proxy\n        });\n        return proxy;\n      },\n\n      get readOnly() {\n        const readOnlyHandler = new ReadOnlyHandler(membrane, distortedValue); // caching the readOnly proxy after the first time it is accessed\n\n        const proxy = new Proxy(createShadowTarget(distortedValue), readOnlyHandler);\n        registerProxy(proxy, value);\n        ObjectDefineProperty(this, 'readOnly', {\n          value: proxy\n        });\n        return proxy;\n      }\n\n    };\n    objectGraph.set(distortedValue, reactiveState);\n    return reactiveState;\n  }\n\n}\n/** version: 0.26.0 */\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n\nfunction valueDistortion(value) {\n  return value;\n}\n\nconst reactiveMembrane = new ReactiveMembrane({\n  valueObserved,\n  valueMutated,\n  valueDistortion\n});\n/**\n * EXPERIMENTAL: This function implements an unwrap mechanism that\n * works for observable membrane objects. This API is subject to\n * change or being removed.\n */\n\nconst unwrap$1 = function (value) {\n  const unwrapped = reactiveMembrane.unwrapProxy(value);\n\n  if (unwrapped !== value) {\n    // if value is a proxy, unwrap to access original value and apply distortion\n    return valueDistortion(unwrapped);\n  }\n\n  return value;\n};\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n\nfunction track(target) {\n  if (arguments.length === 1) {\n    return reactiveMembrane.getProxy(target);\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert.fail(`@track decorator can only be used with one argument to return a trackable object, or as a decorator function.`);\n  }\n\n  throw new Error();\n}\n\nfunction internalTrackDecorator(key) {\n  return {\n    get() {\n      const vm = getAssociatedVM(this);\n      componentValueObserved(vm, key);\n      return vm.cmpFields[key];\n    },\n\n    set(newValue) {\n      const vm = getAssociatedVM(this);\n\n      if (process.env.NODE_ENV !== 'production') {\n        const vmBeingRendered = getVMBeingRendered();\n        assert.invariant(!isInvokingRender, `${vmBeingRendered}.render() method has side effects on the state of ${vm}.${toString(key)}`);\n        assert.invariant(!isUpdatingTemplate, `Updating the template of ${vmBeingRendered} has side effects on the state of ${vm}.${toString(key)}`);\n      }\n\n      const reactiveOrAnyValue = reactiveMembrane.getProxy(newValue);\n\n      if (reactiveOrAnyValue !== vm.cmpFields[key]) {\n        vm.cmpFields[key] = reactiveOrAnyValue;\n        componentValueMutated(vm, key);\n      }\n    },\n\n    enumerable: true,\n    configurable: true\n  };\n}\n/**\n * Copyright (C) 2018 salesforce.com, inc.\n */\n\n/**\n * Copyright (C) 2018 salesforce.com, inc.\n */\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n\nconst {\n  assign: assign$1,\n  create: create$2,\n  defineProperties: defineProperties$1,\n  defineProperty: defineProperty$1,\n  freeze: freeze$1,\n  getOwnPropertyDescriptor: getOwnPropertyDescriptor$2,\n  getOwnPropertyNames: getOwnPropertyNames$2,\n  getPrototypeOf: getPrototypeOf$2,\n  hasOwnProperty: hasOwnProperty$2,\n  keys: keys$1,\n  seal: seal$1,\n  setPrototypeOf: setPrototypeOf$1\n} = Object;\nconst {\n  filter: ArrayFilter$1,\n  find: ArrayFind$1,\n  indexOf: ArrayIndexOf$2,\n  join: ArrayJoin$1,\n  map: ArrayMap$2,\n  push: ArrayPush$3,\n  reduce: ArrayReduce$1,\n  reverse: ArrayReverse$1,\n  slice: ArraySlice$2,\n  splice: ArraySplice$2,\n  unshift: ArrayUnshift$2,\n  forEach: forEach$1\n} = Array.prototype;\nconst {\n  charCodeAt: StringCharCodeAt$1,\n  replace: StringReplace$1,\n  slice: StringSlice$1,\n  toLowerCase: StringToLowerCase$1\n} = String.prototype;\n\nfunction isUndefined$3(obj) {\n  return obj === undefined;\n}\n\nfunction isTrue$1$1(obj) {\n  return obj === true;\n}\n\nfunction isFalse$1$1(obj) {\n  return obj === false;\n}\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n/**\n * According to the following list, there are 48 aria attributes of which two (ariaDropEffect and\n * ariaGrabbed) are deprecated:\n * https://www.w3.org/TR/wai-aria-1.1/#x6-6-definitions-of-states-and-properties-all-aria-attributes\n *\n * The above list of 46 aria attributes is consistent with the following resources:\n * https://github.com/w3c/aria/pull/708/files#diff-eacf331f0ffc35d4b482f1d15a887d3bR11060\n * https://wicg.github.io/aom/spec/aria-reflection.html\n */\n\n\nconst AriaPropertyNames$1 = ['ariaActiveDescendant', 'ariaAtomic', 'ariaAutoComplete', 'ariaBusy', 'ariaChecked', 'ariaColCount', 'ariaColIndex', 'ariaColSpan', 'ariaControls', 'ariaCurrent', 'ariaDescribedBy', 'ariaDetails', 'ariaDisabled', 'ariaErrorMessage', 'ariaExpanded', 'ariaFlowTo', 'ariaHasPopup', 'ariaHidden', 'ariaInvalid', 'ariaKeyShortcuts', 'ariaLabel', 'ariaLabelledBy', 'ariaLevel', 'ariaLive', 'ariaModal', 'ariaMultiLine', 'ariaMultiSelectable', 'ariaOrientation', 'ariaOwns', 'ariaPlaceholder', 'ariaPosInSet', 'ariaPressed', 'ariaReadOnly', 'ariaRelevant', 'ariaRequired', 'ariaRoleDescription', 'ariaRowCount', 'ariaRowIndex', 'ariaRowSpan', 'ariaSelected', 'ariaSetSize', 'ariaSort', 'ariaValueMax', 'ariaValueMin', 'ariaValueNow', 'ariaValueText', 'role'];\nconst AttrNameToPropNameMap$2 = create$2(null);\nconst PropNameToAttrNameMap$2 = create$2(null); // Synthetic creation of all AOM property descriptors for Custom Elements\n\nforEach$1.call(AriaPropertyNames$1, propName => {\n  // Typescript infers the wrong function type for this particular overloaded method:\n  // https://github.com/Microsoft/TypeScript/issues/27972\n  // @ts-ignore type-mismatch\n  const attrName = StringToLowerCase$1.call(StringReplace$1.call(propName, /^aria/, 'aria-'));\n  AttrNameToPropNameMap$2[attrName] = propName;\n  PropNameToAttrNameMap$2[propName] = attrName;\n});\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n/*\n * In IE11, symbols are expensive.\n * Due to the nature of the symbol polyfill. This method abstract the\n * creation of symbols, so we can fallback to string when native symbols\n * are not supported. Note that we can't use typeof since it will fail when transpiling.\n */\n\nconst hasNativeSymbolsSupport$1 = Symbol('x').toString() === 'Symbol(x)';\n/** version: 1.7.1 */\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// Cached reference to globalThis\n\nlet _globalThis;\n\nif (typeof globalThis === 'object') {\n  _globalThis = globalThis;\n}\n\nfunction getGlobalThis() {\n  if (typeof _globalThis === 'object') {\n    return _globalThis;\n  }\n\n  try {\n    // eslint-disable-next-line no-extend-native\n    Object.defineProperty(Object.prototype, '__magic__', {\n      get: function () {\n        return this;\n      },\n      configurable: true\n    }); // @ts-ignore\n    // __magic__ is undefined in Safari 10 and IE10 and older.\n    // eslint-disable-next-line no-undef\n\n    _globalThis = __magic__; // @ts-ignore\n\n    delete Object.prototype.__magic__;\n  } catch (ex) {// In IE8, Object.defineProperty only works on DOM objects.\n  } finally {\n    // If the magic above fails for some reason we assume that we are in a\n    // legacy browser. Assume `window` exists in this case.\n    if (typeof _globalThis === 'undefined') {\n      _globalThis = window;\n    }\n  }\n\n  return _globalThis;\n}\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n\nconst _globalThis$1 = getGlobalThis();\n\nif (!_globalThis$1.lwcRuntimeFlags) {\n  Object.defineProperty(_globalThis$1, 'lwcRuntimeFlags', {\n    value: create$2(null)\n  });\n}\n\nconst runtimeFlags = _globalThis$1.lwcRuntimeFlags; // This function is not supported for use within components and is meant for\n// configuring runtime feature flags during app initialization.\n\nfunction setFeatureFlag(name, value) {\n  const isBoolean = isTrue$1$1(value) || isFalse$1$1(value);\n\n  if (!isBoolean) {\n    const message = `Failed to set the value \"${value}\" for the runtime feature flag \"${name}\". Runtime feature flags can only be set to a boolean value.`;\n\n    if (process.env.NODE_ENV !== 'production') {\n      throw new TypeError(message);\n    } else {\n      // eslint-disable-next-line no-console\n      console.error(message);\n      return;\n    }\n  }\n\n  if (isUndefined$3(featureFlagLookup[name])) {\n    // eslint-disable-next-line no-console\n    console.warn(`Failed to set the value \"${value}\" for the runtime feature flag \"${name}\" because it is undefined. Possible reasons are that 1) it was misspelled or 2) it was removed from the @lwc/features package.`);\n    return;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    // Allow the same flag to be set more than once outside of production to enable testing\n    runtimeFlags[name] = value;\n  } else {\n    // Disallow the same flag to be set more than once in production\n    const runtimeValue = runtimeFlags[name];\n\n    if (!isUndefined$3(runtimeValue)) {\n      // eslint-disable-next-line no-console\n      console.error(`Failed to set the value \"${value}\" for the runtime feature flag \"${name}\". \"${name}\" has already been set with the value \"${runtimeValue}\".`);\n      return;\n    }\n\n    Object.defineProperty(runtimeFlags, name, {\n      value\n    });\n  }\n} // This function is exposed to components to facilitate testing so we add a\n// check to make sure it is not invoked in production.\n\n\nfunction setFeatureFlagForTest(name, value) {\n  if (process.env.NODE_ENV !== 'production') {\n    return setFeatureFlag(name, value);\n  }\n}\n\nconst featureFlagLookup = {\n  ENABLE_REACTIVE_SETTER: null,\n  // Flags to toggle on/off the enforcement of shadow dom semantic in element/node outside lwc boundary when using synthetic shadow.\n  ENABLE_ELEMENT_PATCH: null,\n  ENABLE_NODE_LIST_PATCH: null,\n  ENABLE_HTML_COLLECTIONS_PATCH: null,\n  ENABLE_NODE_PATCH: null\n};\n/** version: 1.7.1 */\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\nfunction api() {\n  if (process.env.NODE_ENV !== 'production') {\n    assert.fail(`@api decorator can only be used as a decorator function.`);\n  }\n\n  throw new Error();\n}\n\nfunction createPublicPropertyDescriptor(key) {\n  return {\n    get() {\n      const vm = getAssociatedVM(this);\n\n      if (isBeingConstructed(vm)) {\n        if (process.env.NODE_ENV !== 'production') {\n          const name = vm.elm.constructor.name;\n          logError(`\\`${name}\\` constructor can’t read the value of property \\`${toString(key)}\\` because the owner component hasn’t set the value yet. Instead, use the \\`${name}\\` constructor to set a default value for the property.`, vm);\n        }\n\n        return;\n      }\n\n      componentValueObserved(vm, key);\n      return vm.cmpProps[key];\n    },\n\n    set(newValue) {\n      const vm = getAssociatedVM(this);\n\n      if (process.env.NODE_ENV !== 'production') {\n        const vmBeingRendered = getVMBeingRendered();\n        assert.invariant(!isInvokingRender, `${vmBeingRendered}.render() method has side effects on the state of ${vm}.${toString(key)}`);\n        assert.invariant(!isUpdatingTemplate, `Updating the template of ${vmBeingRendered} has side effects on the state of ${vm}.${toString(key)}`);\n      }\n\n      vm.cmpProps[key] = newValue;\n      componentValueMutated(vm, key);\n    },\n\n    enumerable: true,\n    configurable: true\n  };\n}\n\nclass AccessorReactiveObserver extends ReactiveObserver {\n  constructor(vm, set) {\n    super(() => {\n      if (isFalse$1(this.debouncing)) {\n        this.debouncing = true;\n        addCallbackToNextTick(() => {\n          if (isTrue$1(this.debouncing)) {\n            const {\n              value\n            } = this;\n            const {\n              isDirty: dirtyStateBeforeSetterCall,\n              component,\n              idx\n            } = vm;\n            set.call(component, value); // de-bouncing after the call to the original setter to prevent\n            // infinity loop if the setter itself is mutating things that\n            // were accessed during the previous invocation.\n\n            this.debouncing = false;\n\n            if (isTrue$1(vm.isDirty) && isFalse$1(dirtyStateBeforeSetterCall) && idx > 0) {\n              // immediate rehydration due to a setter driven mutation, otherwise\n              // the component will get rendered on the second tick, which it is not\n              // desirable.\n              rerenderVM(vm);\n            }\n          }\n        });\n      }\n    });\n    this.debouncing = false;\n  }\n\n  reset(value) {\n    super.reset();\n    this.debouncing = false;\n\n    if (arguments.length > 0) {\n      this.value = value;\n    }\n  }\n\n}\n\nfunction createPublicAccessorDescriptor(key, descriptor) {\n  const {\n    get,\n    set,\n    enumerable,\n    configurable\n  } = descriptor;\n\n  if (!isFunction(get)) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert.invariant(isFunction(get), `Invalid compiler output for public accessor ${toString(key)} decorated with @api`);\n    }\n\n    throw new Error();\n  }\n\n  return {\n    get() {\n      if (process.env.NODE_ENV !== 'production') {\n        // Assert that the this value is an actual Component with an associated VM.\n        getAssociatedVM(this);\n      }\n\n      return get.call(this);\n    },\n\n    set(newValue) {\n      const vm = getAssociatedVM(this);\n\n      if (process.env.NODE_ENV !== 'production') {\n        const vmBeingRendered = getVMBeingRendered();\n        assert.invariant(!isInvokingRender, `${vmBeingRendered}.render() method has side effects on the state of ${vm}.${toString(key)}`);\n        assert.invariant(!isUpdatingTemplate, `Updating the template of ${vmBeingRendered} has side effects on the state of ${vm}.${toString(key)}`);\n      }\n\n      if (set) {\n        if (runtimeFlags.ENABLE_REACTIVE_SETTER) {\n          let ro = vm.oar[key];\n\n          if (isUndefined(ro)) {\n            ro = vm.oar[key] = new AccessorReactiveObserver(vm, set);\n          } // every time we invoke this setter from outside (through this wrapper setter)\n          // we should reset the value and then debounce just in case there is a pending\n          // invocation the next tick that is not longer relevant since the value is changing\n          // from outside.\n\n\n          ro.reset(newValue);\n          ro.observe(() => {\n            set.call(this, newValue);\n          });\n        } else {\n          set.call(this, newValue);\n        }\n      } else if (process.env.NODE_ENV !== 'production') {\n        assert.fail(`Invalid attempt to set a new value for property ${toString(key)} of ${vm} that does not has a setter decorated with @api.`);\n      }\n    },\n\n    enumerable,\n    configurable\n  };\n}\n\nfunction createObservedFieldPropertyDescriptor(key) {\n  return {\n    get() {\n      const vm = getAssociatedVM(this);\n      componentValueObserved(vm, key);\n      return vm.cmpFields[key];\n    },\n\n    set(newValue) {\n      const vm = getAssociatedVM(this);\n\n      if (newValue !== vm.cmpFields[key]) {\n        vm.cmpFields[key] = newValue;\n        componentValueMutated(vm, key);\n      }\n    },\n\n    enumerable: true,\n    configurable: true\n  };\n}\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n\nvar PropType;\n\n(function (PropType) {\n  PropType[PropType[\"Field\"] = 0] = \"Field\";\n  PropType[PropType[\"Set\"] = 1] = \"Set\";\n  PropType[PropType[\"Get\"] = 2] = \"Get\";\n  PropType[PropType[\"GetSet\"] = 3] = \"GetSet\";\n})(PropType || (PropType = {}));\n\nfunction validateObservedField(Ctor, fieldName, descriptor) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!isUndefined(descriptor)) {\n      assert.fail(`Compiler Error: Invalid field ${fieldName} declaration.`);\n    }\n  }\n}\n\nfunction validateFieldDecoratedWithTrack(Ctor, fieldName, descriptor) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!isUndefined(descriptor)) {\n      assert.fail(`Compiler Error: Invalid @track ${fieldName} declaration.`);\n    }\n  }\n}\n\nfunction validateFieldDecoratedWithWire(Ctor, fieldName, descriptor) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!isUndefined(descriptor)) {\n      assert.fail(`Compiler Error: Invalid @wire(...) ${fieldName} field declaration.`);\n    }\n  }\n}\n\nfunction validateMethodDecoratedWithWire(Ctor, methodName, descriptor) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (isUndefined(descriptor) || !isFunction(descriptor.value) || isFalse$1(descriptor.writable)) {\n      assert.fail(`Compiler Error: Invalid @wire(...) ${methodName} method declaration.`);\n    }\n  }\n}\n\nfunction validateFieldDecoratedWithApi(Ctor, fieldName, descriptor) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!isUndefined(descriptor)) {\n      assert.fail(`Compiler Error: Invalid @api ${fieldName} field declaration.`);\n    }\n  }\n}\n\nfunction validateAccessorDecoratedWithApi(Ctor, fieldName, descriptor) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (isUndefined(descriptor)) {\n      assert.fail(`Compiler Error: Invalid @api get ${fieldName} accessor declaration.`);\n    } else if (isFunction(descriptor.set)) {\n      assert.isTrue(isFunction(descriptor.get), `Compiler Error: Missing getter for property ${toString(fieldName)} decorated with @api in ${Ctor}. You cannot have a setter without the corresponding getter.`);\n    } else if (!isFunction(descriptor.get)) {\n      assert.fail(`Compiler Error: Missing @api get ${fieldName} accessor declaration.`);\n    }\n  }\n}\n\nfunction validateMethodDecoratedWithApi(Ctor, methodName, descriptor) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (isUndefined(descriptor) || !isFunction(descriptor.value) || isFalse$1(descriptor.writable)) {\n      assert.fail(`Compiler Error: Invalid @api ${methodName} method declaration.`);\n    }\n  }\n}\n/**\n * INTERNAL: This function can only be invoked by compiled code. The compiler\n * will prevent this function from being imported by user-land code.\n */\n\n\nfunction registerDecorators(Ctor, meta) {\n  const proto = Ctor.prototype;\n  const {\n    publicProps,\n    publicMethods,\n    wire,\n    track,\n    fields\n  } = meta;\n  const apiMethods = create(null);\n  const apiFields = create(null);\n  const wiredMethods = create(null);\n  const wiredFields = create(null);\n  const observedFields = create(null);\n  const apiFieldsConfig = create(null);\n  let descriptor;\n\n  if (!isUndefined(publicProps)) {\n    for (const fieldName in publicProps) {\n      const propConfig = publicProps[fieldName];\n      apiFieldsConfig[fieldName] = propConfig.config;\n      descriptor = getOwnPropertyDescriptor(proto, fieldName);\n\n      if (propConfig.config > 0) {\n        // accessor declaration\n        if (process.env.NODE_ENV !== 'production') {\n          validateAccessorDecoratedWithApi(Ctor, fieldName, descriptor);\n        }\n\n        if (isUndefined(descriptor)) {\n          throw new Error();\n        }\n\n        descriptor = createPublicAccessorDescriptor(fieldName, descriptor);\n      } else {\n        // field declaration\n        if (process.env.NODE_ENV !== 'production') {\n          validateFieldDecoratedWithApi(Ctor, fieldName, descriptor);\n        }\n\n        descriptor = createPublicPropertyDescriptor(fieldName);\n      }\n\n      apiFields[fieldName] = descriptor;\n      defineProperty(proto, fieldName, descriptor);\n    }\n  }\n\n  if (!isUndefined(publicMethods)) {\n    forEach.call(publicMethods, methodName => {\n      descriptor = getOwnPropertyDescriptor(proto, methodName);\n\n      if (process.env.NODE_ENV !== 'production') {\n        validateMethodDecoratedWithApi(Ctor, methodName, descriptor);\n      }\n\n      if (isUndefined(descriptor)) {\n        throw new Error();\n      }\n\n      apiMethods[methodName] = descriptor;\n    });\n  }\n\n  if (!isUndefined(wire)) {\n    for (const fieldOrMethodName in wire) {\n      const {\n        adapter,\n        method,\n        config: configCallback,\n        dynamic = []\n      } = wire[fieldOrMethodName];\n      descriptor = getOwnPropertyDescriptor(proto, fieldOrMethodName);\n\n      if (method === 1) {\n        if (process.env.NODE_ENV !== 'production') {\n          assert.isTrue(adapter, `@wire on method \"${fieldOrMethodName}\": adapter id must be truthy.`);\n          validateMethodDecoratedWithWire(Ctor, fieldOrMethodName, descriptor);\n        }\n\n        if (isUndefined(descriptor)) {\n          throw new Error();\n        }\n\n        wiredMethods[fieldOrMethodName] = descriptor;\n        storeWiredMethodMeta(descriptor, adapter, configCallback, dynamic);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          assert.isTrue(adapter, `@wire on field \"${fieldOrMethodName}\": adapter id must be truthy.`);\n          validateFieldDecoratedWithWire(Ctor, fieldOrMethodName, descriptor);\n        }\n\n        descriptor = internalWireFieldDecorator(fieldOrMethodName);\n        wiredFields[fieldOrMethodName] = descriptor;\n        storeWiredFieldMeta(descriptor, adapter, configCallback, dynamic);\n        defineProperty(proto, fieldOrMethodName, descriptor);\n      }\n    }\n  }\n\n  if (!isUndefined(track)) {\n    for (const fieldName in track) {\n      descriptor = getOwnPropertyDescriptor(proto, fieldName);\n\n      if (process.env.NODE_ENV !== 'production') {\n        validateFieldDecoratedWithTrack(Ctor, fieldName, descriptor);\n      }\n\n      descriptor = internalTrackDecorator(fieldName);\n      defineProperty(proto, fieldName, descriptor);\n    }\n  }\n\n  if (!isUndefined(fields)) {\n    for (let i = 0, n = fields.length; i < n; i++) {\n      const fieldName = fields[i];\n      descriptor = getOwnPropertyDescriptor(proto, fieldName);\n\n      if (process.env.NODE_ENV !== 'production') {\n        validateObservedField(Ctor, fieldName, descriptor);\n      }\n\n      observedFields[fieldName] = createObservedFieldPropertyDescriptor(fieldName);\n    }\n  }\n\n  setDecoratorsMeta(Ctor, {\n    apiMethods,\n    apiFields,\n    apiFieldsConfig,\n    wiredMethods,\n    wiredFields,\n    observedFields\n  });\n  return Ctor;\n}\n\nconst signedDecoratorToMetaMap = new Map();\n\nfunction setDecoratorsMeta(Ctor, meta) {\n  signedDecoratorToMetaMap.set(Ctor, meta);\n}\n\nconst defaultMeta = {\n  apiMethods: EmptyObject,\n  apiFields: EmptyObject,\n  apiFieldsConfig: EmptyObject,\n  wiredMethods: EmptyObject,\n  wiredFields: EmptyObject,\n  observedFields: EmptyObject\n};\n\nfunction getDecoratorsMeta(Ctor) {\n  const meta = signedDecoratorToMetaMap.get(Ctor);\n  return isUndefined(meta) ? defaultMeta : meta;\n}\n\nconst signedTemplateSet = new Set();\n\nfunction defaultEmptyTemplate() {\n  return [];\n}\n\nsignedTemplateSet.add(defaultEmptyTemplate);\n\nfunction isTemplateRegistered(tpl) {\n  return signedTemplateSet.has(tpl);\n}\n/**\n * INTERNAL: This function can only be invoked by compiled code. The compiler\n * will prevent this function from being imported by userland code.\n */\n\n\nfunction registerTemplate(tpl) {\n  signedTemplateSet.add(tpl); // chaining this method as a way to wrap existing\n  // assignment of templates easily, without too much transformation\n\n  return tpl;\n}\n/**\n * EXPERIMENTAL: This function acts like a hook for Lightning Locker\n * Service and other similar libraries to sanitize vulnerable attributes.\n * This API is subject to change or being removed.\n */\n\n\nfunction sanitizeAttribute(tagName, namespaceUri, attrName, attrValue) {\n  // locker-service patches this function during runtime to sanitize vulnerable attributes.\n  // when ran off-core this function becomes a noop and returns the user authored value.\n  return attrValue;\n}\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// from the element instance, and get the value or set a new value on the component.\n// This means that across different elements, similar names can get the exact same\n// descriptor, so we can cache them:\n\n\nconst cachedGetterByKey = create(null);\nconst cachedSetterByKey = create(null);\n\nfunction createGetter(key) {\n  let fn = cachedGetterByKey[key];\n\n  if (isUndefined(fn)) {\n    fn = cachedGetterByKey[key] = function () {\n      const vm = getAssociatedVM(this);\n      const {\n        getHook\n      } = vm;\n      return getHook(vm.component, key);\n    };\n  }\n\n  return fn;\n}\n\nfunction createSetter(key) {\n  let fn = cachedSetterByKey[key];\n\n  if (isUndefined(fn)) {\n    fn = cachedSetterByKey[key] = function (newValue) {\n      const vm = getAssociatedVM(this);\n      const {\n        setHook\n      } = vm;\n      newValue = reactiveMembrane.getReadOnlyProxy(newValue);\n      setHook(vm.component, key, newValue);\n    };\n  }\n\n  return fn;\n}\n\nfunction createMethodCaller(methodName) {\n  return function () {\n    const vm = getAssociatedVM(this);\n    const {\n      callHook,\n      component\n    } = vm;\n    const fn = component[methodName];\n    return callHook(vm.component, fn, ArraySlice$1.call(arguments));\n  };\n}\n\nfunction HTMLBridgeElementFactory(SuperClass, props, methods) {\n  let HTMLBridgeElement;\n  /**\n   * Modern browsers will have all Native Constructors as regular Classes\n   * and must be instantiated with the new keyword. In older browsers,\n   * specifically IE11, those are objects with a prototype property defined,\n   * since they are not supposed to be extended or instantiated with the\n   * new keyword. This forking logic supports both cases, specifically because\n   * wc.ts relies on the construction path of the bridges to create new\n   * fully qualifying web components.\n   */\n\n  if (isFunction(SuperClass)) {\n    HTMLBridgeElement = class extends SuperClass {};\n  } else {\n    HTMLBridgeElement = function () {\n      // Bridge classes are not supposed to be instantiated directly in\n      // browsers that do not support web components.\n      throw new TypeError('Illegal constructor');\n    }; // prototype inheritance dance\n\n\n    setPrototypeOf(HTMLBridgeElement, SuperClass);\n    setPrototypeOf(HTMLBridgeElement.prototype, SuperClass.prototype);\n    defineProperty(HTMLBridgeElement.prototype, 'constructor', {\n      writable: true,\n      configurable: true,\n      value: HTMLBridgeElement\n    });\n  }\n\n  const descriptors = create(null); // expose getters and setters for each public props on the new Element Bridge\n\n  for (let i = 0, len = props.length; i < len; i += 1) {\n    const propName = props[i];\n    descriptors[propName] = {\n      get: createGetter(propName),\n      set: createSetter(propName),\n      enumerable: true,\n      configurable: true\n    };\n  } // expose public methods as props on the new Element Bridge\n\n\n  for (let i = 0, len = methods.length; i < len; i += 1) {\n    const methodName = methods[i];\n    descriptors[methodName] = {\n      value: createMethodCaller(methodName),\n      writable: true,\n      configurable: true\n    };\n  }\n\n  defineProperties(HTMLBridgeElement.prototype, descriptors);\n  return HTMLBridgeElement;\n}\n\nconst BaseBridgeElement = HTMLBridgeElementFactory(HTMLElement, getOwnPropertyNames(HTMLElementOriginalDescriptors), []);\nfreeze(BaseBridgeElement);\nseal(BaseBridgeElement.prototype);\n/*\n * Copyright (c) 2020, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\nfunction resolveCircularModuleDependency(fn) {\n  return fn();\n}\n\nfunction isCircularModuleDependency(obj) {\n  return isFunction(obj) && hasOwnProperty.call(obj, '__circular__');\n}\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n\nconst CtorToDefMap = new WeakMap();\n\nfunction getCtorProto(Ctor, subclassComponentName) {\n  let proto = getPrototypeOf(Ctor);\n\n  if (isNull(proto)) {\n    throw new ReferenceError(`Invalid prototype chain for ${subclassComponentName}, you must extend LightningElement.`);\n  } // covering the cases where the ref is circular in AMD\n\n\n  if (isCircularModuleDependency(proto)) {\n    const p = resolveCircularModuleDependency(proto);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isNull(p)) {\n        throw new ReferenceError(`Circular module dependency for ${subclassComponentName}, must resolve to a constructor that extends LightningElement.`);\n      }\n    } // escape hatch for Locker and other abstractions to provide their own base class instead\n    // of our Base class without having to leak it to user-land. If the circular function returns\n    // itself, that's the signal that we have hit the end of the proto chain, which must always\n    // be base.\n\n\n    proto = p === proto ? BaseLightningElement : p;\n  }\n\n  return proto;\n}\n\nfunction createComponentDef(Ctor, meta, subclassComponentName) {\n  if (process.env.NODE_ENV !== 'production') {\n    // local to dev block\n    const ctorName = Ctor.name; // Removing the following assert until https://bugs.webkit.org/show_bug.cgi?id=190140 is fixed.\n    // assert.isTrue(ctorName && isString(ctorName), `${toString(Ctor)} should have a \"name\" property with string value, but found ${ctorName}.`);\n\n    assert.isTrue(Ctor.constructor, `Missing ${ctorName}.constructor, ${ctorName} should have a \"constructor\" property.`);\n  }\n\n  const {\n    name\n  } = meta;\n  let {\n    template\n  } = meta;\n  const decoratorsMeta = getDecoratorsMeta(Ctor);\n  const {\n    apiFields,\n    apiFieldsConfig,\n    apiMethods,\n    wiredFields,\n    wiredMethods,\n    observedFields\n  } = decoratorsMeta;\n  const proto = Ctor.prototype;\n  let {\n    connectedCallback,\n    disconnectedCallback,\n    renderedCallback,\n    errorCallback,\n    render\n  } = proto;\n  const superProto = getCtorProto(Ctor, subclassComponentName);\n  const superDef = superProto !== BaseLightningElement ? getComponentInternalDef(superProto, subclassComponentName) : lightingElementDef;\n  const SuperBridge = isNull(superDef) ? BaseBridgeElement : superDef.bridge;\n  const bridge = HTMLBridgeElementFactory(SuperBridge, keys(apiFields), keys(apiMethods));\n  const props = assign(create(null), superDef.props, apiFields);\n  const propsConfig = assign(create(null), superDef.propsConfig, apiFieldsConfig);\n  const methods = assign(create(null), superDef.methods, apiMethods);\n  const wire = assign(create(null), superDef.wire, wiredFields, wiredMethods);\n  connectedCallback = connectedCallback || superDef.connectedCallback;\n  disconnectedCallback = disconnectedCallback || superDef.disconnectedCallback;\n  renderedCallback = renderedCallback || superDef.renderedCallback;\n  errorCallback = errorCallback || superDef.errorCallback;\n  render = render || superDef.render;\n  template = template || superDef.template; // installing observed fields into the prototype.\n\n  defineProperties(proto, observedFields);\n  const def = {\n    ctor: Ctor,\n    name,\n    wire,\n    props,\n    propsConfig,\n    methods,\n    bridge,\n    template,\n    connectedCallback,\n    disconnectedCallback,\n    renderedCallback,\n    errorCallback,\n    render\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    freeze(Ctor.prototype);\n  }\n\n  return def;\n}\n/**\n * EXPERIMENTAL: This function allows for the identification of LWC constructors. This API is\n * subject to change or being removed.\n */\n\n\nfunction isComponentConstructor(ctor) {\n  if (!isFunction(ctor)) {\n    return false;\n  } // Fast path: LightningElement is part of the prototype chain of the constructor.\n\n\n  if (ctor.prototype instanceof BaseLightningElement) {\n    return true;\n  } // Slow path: LightningElement is not part of the prototype chain of the constructor, we need\n  // climb up the constructor prototype chain to check in case there are circular dependencies\n  // to resolve.\n\n\n  let current = ctor;\n\n  do {\n    if (isCircularModuleDependency(current)) {\n      const circularResolved = resolveCircularModuleDependency(current); // If the circular function returns itself, that's the signal that we have hit the end\n      // of the proto chain, which must always be a valid base constructor.\n\n      if (circularResolved === current) {\n        return true;\n      }\n\n      current = circularResolved;\n    }\n\n    if (current === BaseLightningElement) {\n      return true;\n    }\n  } while (!isNull(current) && (current = getPrototypeOf(current))); // Finally return false if the LightningElement is not part of the prototype chain.\n\n\n  return false;\n}\n\nfunction getComponentInternalDef(Ctor, name) {\n  let def = CtorToDefMap.get(Ctor);\n\n  if (isUndefined(def)) {\n    if (isCircularModuleDependency(Ctor)) {\n      const resolvedCtor = resolveCircularModuleDependency(Ctor);\n      def = getComponentInternalDef(resolvedCtor); // Cache the unresolved component ctor too. The next time if the same unresolved ctor is used,\n      // look up the definition in cache instead of re-resolving and recreating the def.\n\n      CtorToDefMap.set(Ctor, def);\n      return def;\n    }\n\n    if (!isComponentConstructor(Ctor)) {\n      throw new TypeError(`${Ctor} is not a valid component, or does not extends LightningElement from \"lwc\". You probably forgot to add the extend clause on the class declaration.`);\n    }\n\n    let meta = getComponentRegisteredMeta(Ctor);\n\n    if (isUndefined(meta)) {\n      // TODO [#1295]: remove this workaround after refactoring tests\n      meta = {\n        template: undefined,\n        name: Ctor.name\n      };\n    }\n\n    def = createComponentDef(Ctor, meta, name || Ctor.name);\n    CtorToDefMap.set(Ctor, def);\n  }\n\n  return def;\n} // Only set prototype for public methods and properties\n// No DOM Patching occurs here\n\n\nfunction setElementProto(elm, def) {\n  setPrototypeOf(elm, def.bridge.prototype);\n}\n\nconst lightingElementDef = {\n  ctor: BaseLightningElement,\n  name: BaseLightningElement.name,\n  props: lightningBasedDescriptors,\n  propsConfig: EmptyObject,\n  methods: EmptyObject,\n  wire: EmptyObject,\n  bridge: BaseBridgeElement,\n  template: defaultEmptyTemplate,\n  render: BaseLightningElement.prototype.render\n};\n/**\n * EXPERIMENTAL: This function allows for the collection of internal component metadata. This API is\n * subject to change or being removed.\n */\n\nfunction getComponentDef(Ctor, subclassComponentName) {\n  const def = getComponentInternalDef(Ctor, subclassComponentName); // From the internal def object, we need to extract the info that is useful\n  // for some external services, e.g.: Locker Service, usually, all they care\n  // is about the shape of the constructor, the internals of it are not relevant\n  // because they don't have a way to mess with that.\n\n  const {\n    ctor,\n    name,\n    props,\n    propsConfig,\n    methods\n  } = def;\n  const publicProps = {};\n\n  for (const key in props) {\n    // avoid leaking the reference to the public props descriptors\n    publicProps[key] = {\n      config: propsConfig[key] || 0,\n      type: 'any',\n      attr: getAttrNameFromPropName(key)\n    };\n  }\n\n  const publicMethods = {};\n\n  for (const key in methods) {\n    // avoid leaking the reference to the public method descriptors\n    publicMethods[key] = methods[key].value;\n  }\n\n  return {\n    ctor,\n    name,\n    props: publicProps,\n    methods: publicMethods\n  };\n}\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n\nconst useSyntheticShadow = hasOwnProperty.call(Element.prototype, '$shadowToken$');\nconst dispatchEvent = 'EventTarget' in window ? EventTarget.prototype.dispatchEvent : Node.prototype.dispatchEvent; // IE11\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\nconst noop = () => void 0;\n\nfunction observeElementChildNodes(elm) {\n  elm.$domManual$ = true;\n}\n\nfunction setElementShadowToken(elm, token) {\n  elm.$shadowToken$ = token;\n}\n\nfunction updateNodeHook(oldVnode, vnode) {\n  const {\n    text\n  } = vnode;\n\n  if (oldVnode.text !== text) {\n    if (process.env.NODE_ENV !== 'production') {\n      unlockDomMutation();\n    }\n    /**\n     * Compiler will never produce a text property that is not string\n     */\n\n\n    vnode.elm.nodeValue = text;\n\n    if (process.env.NODE_ENV !== 'production') {\n      lockDomMutation();\n    }\n  }\n}\n\nfunction insertNodeHook(vnode, parentNode, referenceNode) {\n  if (process.env.NODE_ENV !== 'production') {\n    unlockDomMutation();\n  }\n\n  parentNode.insertBefore(vnode.elm, referenceNode);\n\n  if (process.env.NODE_ENV !== 'production') {\n    lockDomMutation();\n  }\n}\n\nfunction removeNodeHook(vnode, parentNode) {\n  if (process.env.NODE_ENV !== 'production') {\n    unlockDomMutation();\n  }\n\n  parentNode.removeChild(vnode.elm);\n\n  if (process.env.NODE_ENV !== 'production') {\n    lockDomMutation();\n  }\n}\n\nfunction createElmHook(vnode) {\n  modEvents.create(vnode); // Attrs need to be applied to element before props\n  // IE11 will wipe out value on radio inputs if value\n  // is set before type=radio.\n\n  modAttrs.create(vnode);\n  modProps.create(vnode);\n  modStaticClassName.create(vnode);\n  modStaticStyle.create(vnode);\n  modComputedClassName.create(vnode);\n  modComputedStyle.create(vnode);\n}\n\nvar LWCDOMMode;\n\n(function (LWCDOMMode) {\n  LWCDOMMode[\"manual\"] = \"manual\";\n})(LWCDOMMode || (LWCDOMMode = {}));\n\nfunction fallbackElmHook(elm, vnode) {\n  const {\n    owner\n  } = vnode;\n\n  if (isTrue$1(useSyntheticShadow)) {\n    const {\n      data: {\n        context\n      }\n    } = vnode;\n    const {\n      shadowAttribute\n    } = owner.context;\n\n    if (!isUndefined(context) && !isUndefined(context.lwc) && context.lwc.dom === LWCDOMMode.manual) {\n      // this element will now accept any manual content inserted into it\n      observeElementChildNodes(elm);\n    } // when running in synthetic shadow mode, we need to set the shadowToken value\n    // into each element from the template, so they can be styled accordingly.\n\n\n    setElementShadowToken(elm, shadowAttribute);\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    const {\n      data: {\n        context\n      }\n    } = vnode;\n    const isPortal = !isUndefined(context) && !isUndefined(context.lwc) && context.lwc.dom === LWCDOMMode.manual;\n    patchElementWithRestrictions(elm, {\n      isPortal\n    });\n  }\n}\n\nfunction updateElmHook(oldVnode, vnode) {\n  // Attrs need to be applied to element before props\n  // IE11 will wipe out value on radio inputs if value\n  // is set before type=radio.\n  modAttrs.update(oldVnode, vnode);\n  modProps.update(oldVnode, vnode);\n  modComputedClassName.update(oldVnode, vnode);\n  modComputedStyle.update(oldVnode, vnode);\n}\n\nfunction insertCustomElmHook(vnode) {\n  const vm = getAssociatedVM(vnode.elm);\n  appendVM(vm);\n}\n\nfunction updateChildrenHook(oldVnode, vnode) {\n  const {\n    children,\n    owner\n  } = vnode;\n  const fn = hasDynamicChildren(children) ? updateDynamicChildren : updateStaticChildren;\n  runWithBoundaryProtection(owner, owner.owner, noop, () => {\n    fn(vnode.elm, oldVnode.children, children);\n  }, noop);\n}\n\nfunction allocateChildrenHook(vnode) {\n  const vm = getAssociatedVM(vnode.elm); // A component with slots will re-render because:\n  // 1- There is a change of the internal state.\n  // 2- There is a change on the external api (ex: slots)\n  //\n  // In case #1, the vnodes in the cmpSlots will be reused since they didn't changed. This routine emptied the\n  // slotted children when those VCustomElement were rendered and therefore in subsequent calls to allocate children\n  // in a reused VCustomElement, there won't be any slotted children.\n  // For those cases, we will use the reference for allocated children stored when rendering the fresh VCustomElement.\n  //\n  // In case #2, we will always get a fresh VCustomElement.\n\n  const children = vnode.aChildren || vnode.children;\n  vm.aChildren = children;\n\n  if (isTrue$1(useSyntheticShadow)) {\n    // slow path\n    allocateInSlot(vm, children); // save the allocated children in case this vnode is reused.\n\n    vnode.aChildren = children; // every child vnode is now allocated, and the host should receive none directly, it receives them via the shadow!\n\n    vnode.children = EmptyArray;\n  }\n}\n\nfunction createViewModelHook(elm, vnode) {\n  if (!isUndefined(getAssociatedVMIfPresent(elm))) {\n    // There is a possibility that a custom element is registered under tagName,\n    // in which case, the initialization is already carry on, and there is nothing else\n    // to do here since this hook is called right after invoking `document.createElement`.\n    return;\n  }\n\n  const {\n    sel,\n    mode,\n    ctor,\n    owner\n  } = vnode;\n  const def = getComponentInternalDef(ctor);\n  setElementProto(elm, def);\n\n  if (isTrue$1(useSyntheticShadow)) {\n    const {\n      shadowAttribute\n    } = owner.context; // when running in synthetic shadow mode, we need to set the shadowToken value\n    // into each element from the template, so they can be styled accordingly.\n\n    setElementShadowToken(elm, shadowAttribute);\n  }\n\n  createVM(elm, def, {\n    mode,\n    owner,\n    tagName: sel\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert.isTrue(isArray$1(vnode.children), `Invalid vnode for a custom element, it must have children defined.`);\n  }\n}\n\nfunction createCustomElmHook(vnode) {\n  modEvents.create(vnode); // Attrs need to be applied to element before props\n  // IE11 will wipe out value on radio inputs if value\n  // is set before type=radio.\n\n  modAttrs.create(vnode);\n  modProps.create(vnode);\n  modStaticClassName.create(vnode);\n  modStaticStyle.create(vnode);\n  modComputedClassName.create(vnode);\n  modComputedStyle.create(vnode);\n}\n\nfunction createChildrenHook(vnode) {\n  const {\n    elm,\n    children\n  } = vnode;\n\n  for (let j = 0; j < children.length; ++j) {\n    const ch = children[j];\n\n    if (ch != null) {\n      ch.hook.create(ch);\n      ch.hook.insert(ch, elm, null);\n    }\n  }\n}\n\nfunction rerenderCustomElmHook(vnode) {\n  const vm = getAssociatedVM(vnode.elm);\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert.isTrue(isArray$1(vnode.children), `Invalid vnode for a custom element, it must have children defined.`);\n  }\n\n  rerenderVM(vm);\n}\n\nfunction updateCustomElmHook(oldVnode, vnode) {\n  // Attrs need to be applied to element before props\n  // IE11 will wipe out value on radio inputs if value\n  // is set before type=radio.\n  modAttrs.update(oldVnode, vnode);\n  modProps.update(oldVnode, vnode);\n  modComputedClassName.update(oldVnode, vnode);\n  modComputedStyle.update(oldVnode, vnode);\n}\n\nfunction removeElmHook(vnode) {\n  // this method only needs to search on child vnodes from template\n  // to trigger the remove hook just in case some of those children\n  // are custom elements.\n  const {\n    children,\n    elm\n  } = vnode;\n\n  for (let j = 0, len = children.length; j < len; ++j) {\n    const ch = children[j];\n\n    if (!isNull(ch)) {\n      ch.hook.remove(ch, elm);\n    }\n  }\n}\n\nfunction removeCustomElmHook(vnode) {\n  // for custom elements we don't have to go recursively because the removeVM routine\n  // will take care of disconnecting any child VM attached to its shadow as well.\n  removeVM(getAssociatedVM(vnode.elm));\n} // Using a WeakMap instead of a WeakSet because this one works in IE11 :(\n\n\nconst FromIteration = new WeakMap(); // dynamic children means it was generated by an iteration\n// in a template, and will require a more complex diffing algo.\n\nfunction markAsDynamicChildren(children) {\n  FromIteration.set(children, 1);\n}\n\nfunction hasDynamicChildren(children) {\n  return FromIteration.has(children);\n}\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n\nconst CHAR_S = 115;\nconst CHAR_V = 118;\nconst CHAR_G = 103;\nconst NamespaceAttributeForSVG = 'http://www.w3.org/2000/svg';\nconst SymbolIterator = Symbol.iterator;\nconst TextHook = {\n  create: vnode => {\n    const elm = document.createTextNode(vnode.text);\n    linkNodeToShadow(elm, vnode);\n    vnode.elm = elm;\n  },\n  update: updateNodeHook,\n  insert: insertNodeHook,\n  move: insertNodeHook,\n  remove: removeNodeHook\n}; // insert is called after update, which is used somewhere else (via a module)\n// to mark the vm as inserted, that means we cannot use update as the main channel\n// to rehydrate when dirty, because sometimes the element is not inserted just yet,\n// which breaks some invariants. For that reason, we have the following for any\n// Custom Element that is inserted via a template.\n\nconst ElementHook = {\n  create: vnode => {\n    const {\n      data,\n      sel,\n      clonedElement\n    } = vnode;\n    const {\n      ns\n    } = data; // TODO [#1364]: supporting the ability to inject a cloned StyleElement via a vnode this is\n    // used for style tags for native shadow\n\n    let elm;\n\n    if (isUndefined(clonedElement)) {\n      elm = isUndefined(ns) ? document.createElement(sel) : document.createElementNS(ns, sel);\n    } else {\n      elm = clonedElement;\n    }\n\n    linkNodeToShadow(elm, vnode);\n    fallbackElmHook(elm, vnode);\n    vnode.elm = elm;\n    createElmHook(vnode);\n  },\n  update: (oldVnode, vnode) => {\n    updateElmHook(oldVnode, vnode);\n    updateChildrenHook(oldVnode, vnode);\n  },\n  insert: (vnode, parentNode, referenceNode) => {\n    insertNodeHook(vnode, parentNode, referenceNode);\n    createChildrenHook(vnode);\n  },\n  move: (vnode, parentNode, referenceNode) => {\n    insertNodeHook(vnode, parentNode, referenceNode);\n  },\n  remove: (vnode, parentNode) => {\n    removeNodeHook(vnode, parentNode);\n    removeElmHook(vnode);\n  }\n};\nconst CustomElementHook = {\n  create: vnode => {\n    const {\n      sel\n    } = vnode;\n    const elm = document.createElement(sel);\n    linkNodeToShadow(elm, vnode);\n    createViewModelHook(elm, vnode);\n    vnode.elm = elm;\n    allocateChildrenHook(vnode);\n    createCustomElmHook(vnode);\n  },\n  update: (oldVnode, vnode) => {\n    updateCustomElmHook(oldVnode, vnode); // in fallback mode, the allocation will always set children to\n    // empty and delegate the real allocation to the slot elements\n\n    allocateChildrenHook(vnode); // in fallback mode, the children will be always empty, so, nothing\n    // will happen, but in native, it does allocate the light dom\n\n    updateChildrenHook(oldVnode, vnode); // this will update the shadowRoot\n\n    rerenderCustomElmHook(vnode);\n  },\n  insert: (vnode, parentNode, referenceNode) => {\n    insertNodeHook(vnode, parentNode, referenceNode);\n    const vm = getAssociatedVM(vnode.elm);\n\n    if (process.env.NODE_ENV !== 'production') {\n      assert.isTrue(vm.state === VMState.created, `${vm} cannot be recycled.`);\n    }\n\n    runConnectedCallback(vm);\n    createChildrenHook(vnode);\n    insertCustomElmHook(vnode);\n  },\n  move: (vnode, parentNode, referenceNode) => {\n    insertNodeHook(vnode, parentNode, referenceNode);\n  },\n  remove: (vnode, parentNode) => {\n    removeNodeHook(vnode, parentNode);\n    removeCustomElmHook(vnode);\n  }\n};\n\nfunction linkNodeToShadow(elm, vnode) {\n  // TODO [#1164]: this should eventually be done by the polyfill directly\n  elm.$shadowResolver$ = vnode.owner.cmpRoot.$shadowResolver$;\n} // TODO [#1136]: this should be done by the compiler, adding ns to every sub-element\n\n\nfunction addNS(vnode) {\n  const {\n    data,\n    children,\n    sel\n  } = vnode;\n  data.ns = NamespaceAttributeForSVG; // TODO [#1275]: review why `sel` equal `foreignObject` should get this `ns`\n\n  if (isArray$1(children) && sel !== 'foreignObject') {\n    for (let j = 0, n = children.length; j < n; ++j) {\n      const childNode = children[j];\n\n      if (childNode != null && childNode.hook === ElementHook) {\n        addNS(childNode);\n      }\n    }\n  }\n}\n\nfunction addVNodeToChildLWC(vnode) {\n  ArrayPush.call(getVMBeingRendered().velements, vnode);\n} // [h]tml node\n\n\nfunction h(sel, data, children) {\n  const vmBeingRendered = getVMBeingRendered();\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert.isTrue(isString(sel), `h() 1st argument sel must be a string.`);\n    assert.isTrue(isObject$1(data), `h() 2nd argument data must be an object.`);\n    assert.isTrue(isArray$1(children), `h() 3rd argument children must be an array.`);\n    assert.isTrue('key' in data, ` <${sel}> \"key\" attribute is invalid or missing for ${vmBeingRendered}. Key inside iterator is either undefined or null.`); // checking reserved internal data properties\n\n    assert.isFalse(data.className && data.classMap, `vnode.data.className and vnode.data.classMap ambiguous declaration.`);\n    assert.isFalse(data.styleMap && data.style, `vnode.data.styleMap and vnode.data.style ambiguous declaration.`);\n\n    if (data.style && !isString(data.style)) {\n      logError(`Invalid 'style' attribute passed to <${sel}> is ignored. This attribute must be a string value.`, vmBeingRendered);\n    }\n\n    forEach.call(children, childVnode => {\n      if (childVnode != null) {\n        assert.isTrue(childVnode && 'sel' in childVnode && 'data' in childVnode && 'children' in childVnode && 'text' in childVnode && 'elm' in childVnode && 'key' in childVnode, `${childVnode} is not a vnode.`);\n      }\n    });\n  }\n\n  const {\n    key\n  } = data;\n  let text, elm;\n  const vnode = {\n    sel,\n    data,\n    children,\n    text,\n    elm,\n    key,\n    hook: ElementHook,\n    owner: vmBeingRendered\n  };\n\n  if (sel.length === 3 && StringCharCodeAt.call(sel, 0) === CHAR_S && StringCharCodeAt.call(sel, 1) === CHAR_V && StringCharCodeAt.call(sel, 2) === CHAR_G) {\n    addNS(vnode);\n  }\n\n  return vnode;\n} // [t]ab[i]ndex function\n\n\nfunction ti(value) {\n  // if value is greater than 0, we normalize to 0\n  // If value is an invalid tabIndex value (null, undefined, string, etc), we let that value pass through\n  // If value is less than -1, we don't care\n  const shouldNormalize = value > 0 && !(isTrue$1(value) || isFalse$1(value));\n\n  if (process.env.NODE_ENV !== 'production') {\n    const vmBeingRendered = getVMBeingRendered();\n\n    if (shouldNormalize) {\n      logError(`Invalid tabindex value \\`${toString(value)}\\` in template for ${vmBeingRendered}. This attribute must be set to 0 or -1.`, vmBeingRendered);\n    }\n  }\n\n  return shouldNormalize ? 0 : value;\n} // [s]lot element node\n\n\nfunction s(slotName, data, children, slotset) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert.isTrue(isString(slotName), `s() 1st argument slotName must be a string.`);\n    assert.isTrue(isObject$1(data), `s() 2nd argument data must be an object.`);\n    assert.isTrue(isArray$1(children), `h() 3rd argument children must be an array.`);\n  }\n\n  if (!isUndefined(slotset) && !isUndefined(slotset[slotName]) && slotset[slotName].length !== 0) {\n    children = slotset[slotName];\n  }\n\n  const vnode = h('slot', data, children);\n\n  if (useSyntheticShadow) {\n    // TODO [#1276]: compiler should give us some sort of indicator when a vnodes collection is dynamic\n    sc(children);\n  }\n\n  return vnode;\n} // [c]ustom element node\n\n\nfunction c(sel, Ctor, data, children = EmptyArray) {\n  const vmBeingRendered = getVMBeingRendered();\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert.isTrue(isString(sel), `c() 1st argument sel must be a string.`);\n    assert.isTrue(isFunction(Ctor), `c() 2nd argument Ctor must be a function.`);\n    assert.isTrue(isObject$1(data), `c() 3nd argument data must be an object.`);\n    assert.isTrue(arguments.length === 3 || isArray$1(children), `c() 4nd argument data must be an array.`); // checking reserved internal data properties\n\n    assert.isFalse(data.className && data.classMap, `vnode.data.className and vnode.data.classMap ambiguous declaration.`);\n    assert.isFalse(data.styleMap && data.style, `vnode.data.styleMap and vnode.data.style ambiguous declaration.`);\n\n    if (data.style && !isString(data.style)) {\n      logError(`Invalid 'style' attribute passed to <${sel}> is ignored. This attribute must be a string value.`, vmBeingRendered);\n    }\n\n    if (arguments.length === 4) {\n      forEach.call(children, childVnode => {\n        if (childVnode != null) {\n          assert.isTrue(childVnode && 'sel' in childVnode && 'data' in childVnode && 'children' in childVnode && 'text' in childVnode && 'elm' in childVnode && 'key' in childVnode, `${childVnode} is not a vnode.`);\n        }\n      });\n    }\n  }\n\n  const {\n    key\n  } = data;\n  let text, elm;\n  const vnode = {\n    sel,\n    data,\n    children,\n    text,\n    elm,\n    key,\n    hook: CustomElementHook,\n    ctor: Ctor,\n    owner: vmBeingRendered,\n    mode: 'open'\n  };\n  addVNodeToChildLWC(vnode);\n  return vnode;\n} // [i]terable node\n\n\nfunction i(iterable, factory) {\n  const list = []; // TODO [#1276]: compiler should give us some sort of indicator when a vnodes collection is dynamic\n\n  sc(list);\n  const vmBeingRendered = getVMBeingRendered();\n\n  if (isUndefined(iterable) || iterable === null) {\n    if (process.env.NODE_ENV !== 'production') {\n      logError(`Invalid template iteration for value \"${toString(iterable)}\" in ${vmBeingRendered}. It must be an Array or an iterable Object.`, vmBeingRendered);\n    }\n\n    return list;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert.isFalse(isUndefined(iterable[SymbolIterator]), `Invalid template iteration for value \\`${toString(iterable)}\\` in ${vmBeingRendered}. It must be an array-like object and not \\`null\\` nor \\`undefined\\`.`);\n  }\n\n  const iterator = iterable[SymbolIterator]();\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert.isTrue(iterator && isFunction(iterator.next), `Invalid iterator function for \"${toString(iterable)}\" in ${vmBeingRendered}.`);\n  }\n\n  let next = iterator.next();\n  let j = 0;\n  let {\n    value,\n    done: last\n  } = next;\n  let keyMap;\n  let iterationError;\n\n  if (process.env.NODE_ENV !== 'production') {\n    keyMap = create(null);\n  }\n\n  while (last === false) {\n    // implementing a look-back-approach because we need to know if the element is the last\n    next = iterator.next();\n    last = next.done; // template factory logic based on the previous collected value\n\n    const vnode = factory(value, j, j === 0, last);\n\n    if (isArray$1(vnode)) {\n      ArrayPush.apply(list, vnode);\n    } else {\n      ArrayPush.call(list, vnode);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      const vnodes = isArray$1(vnode) ? vnode : [vnode];\n      forEach.call(vnodes, childVnode => {\n        if (!isNull(childVnode) && isObject$1(childVnode) && !isUndefined(childVnode.sel)) {\n          const {\n            key\n          } = childVnode;\n\n          if (isString(key) || isNumber(key)) {\n            if (keyMap[key] === 1 && isUndefined(iterationError)) {\n              iterationError = `Duplicated \"key\" attribute value for \"<${childVnode.sel}>\" in ${vmBeingRendered} for item number ${j}. A key with value \"${childVnode.key}\" appears more than once in the iteration. Key values must be unique numbers or strings.`;\n            }\n\n            keyMap[key] = 1;\n          } else if (isUndefined(iterationError)) {\n            iterationError = `Invalid \"key\" attribute value in \"<${childVnode.sel}>\" in ${vmBeingRendered} for item number ${j}. Set a unique \"key\" value on all iterated child elements.`;\n          }\n        }\n      });\n    } // preparing next value\n\n\n    j += 1;\n    value = next.value;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!isUndefined(iterationError)) {\n      logError(iterationError, vmBeingRendered);\n    }\n  }\n\n  return list;\n}\n/**\n * [f]lattening\n */\n\n\nfunction f(items) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert.isTrue(isArray$1(items), 'flattening api can only work with arrays.');\n  }\n\n  const len = items.length;\n  const flattened = []; // TODO [#1276]: compiler should give us some sort of indicator when a vnodes collection is dynamic\n\n  sc(flattened);\n\n  for (let j = 0; j < len; j += 1) {\n    const item = items[j];\n\n    if (isArray$1(item)) {\n      ArrayPush.apply(flattened, item);\n    } else {\n      ArrayPush.call(flattened, item);\n    }\n  }\n\n  return flattened;\n} // [t]ext node\n\n\nfunction t(text) {\n  const data = EmptyObject;\n  let sel, children, key, elm;\n  return {\n    sel,\n    data,\n    children,\n    text,\n    elm,\n    key,\n    hook: TextHook,\n    owner: getVMBeingRendered()\n  };\n} // [d]ynamic value to produce a text vnode\n\n\nfunction d(value) {\n  if (value == null) {\n    return null;\n  }\n\n  return t(value);\n} // [b]ind function\n\n\nfunction b(fn) {\n  const vmBeingRendered = getVMBeingRendered();\n\n  if (isNull(vmBeingRendered)) {\n    throw new Error();\n  }\n\n  const vm = vmBeingRendered;\n  return function (event) {\n    invokeEventListener(vm, fn, vm.component, event);\n  };\n} // [k]ey function\n\n\nfunction k(compilerKey, obj) {\n  switch (typeof obj) {\n    case 'number':\n    case 'string':\n      return compilerKey + ':' + obj;\n\n    case 'object':\n      if (process.env.NODE_ENV !== 'production') {\n        assert.fail(`Invalid key value \"${obj}\" in ${getVMBeingRendered()}. Key must be a string or number.`);\n      }\n\n  }\n} // [g]lobal [id] function\n\n\nfunction gid(id) {\n  const vmBeingRendered = getVMBeingRendered();\n\n  if (isUndefined(id) || id === '') {\n    if (process.env.NODE_ENV !== 'production') {\n      logError(`Invalid id value \"${id}\". The id attribute must contain a non-empty string.`, vmBeingRendered);\n    }\n\n    return id;\n  } // We remove attributes when they are assigned a value of null\n\n\n  if (isNull(id)) {\n    return null;\n  }\n\n  return `${id}-${vmBeingRendered.idx}`;\n} // [f]ragment [id] function\n\n\nfunction fid(url) {\n  const vmBeingRendered = getVMBeingRendered();\n\n  if (isUndefined(url) || url === '') {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isUndefined(url)) {\n        logError(`Undefined url value for \"href\" or \"xlink:href\" attribute. Expected a non-empty string.`, vmBeingRendered);\n      }\n    }\n\n    return url;\n  } // We remove attributes when they are assigned a value of null\n\n\n  if (isNull(url)) {\n    return null;\n  } // Apply transformation only for fragment-only-urls\n\n\n  if (/^#/.test(url)) {\n    return `${url}-${vmBeingRendered.idx}`;\n  }\n\n  return url;\n}\n/**\n * Map to store an index value assigned to any dynamic component reference ingested\n * by dc() api. This allows us to generate a unique unique per template per dynamic\n * component reference to avoid diffing algo mismatches.\n */\n\n\nconst DynamicImportedComponentMap = new Map();\nlet dynamicImportedComponentCounter = 0;\n/**\n * create a dynamic component via `<x-foo lwc:dynamic={Ctor}>`\n */\n\nfunction dc(sel, Ctor, data, children) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert.isTrue(isString(sel), `dc() 1st argument sel must be a string.`);\n    assert.isTrue(isObject$1(data), `dc() 3nd argument data must be an object.`);\n    assert.isTrue(arguments.length === 3 || isArray$1(children), `dc() 4nd argument data must be an array.`);\n  } // null or undefined values should produce a null value in the VNodes\n\n\n  if (Ctor == null) {\n    return null;\n  }\n\n  if (!isComponentConstructor(Ctor)) {\n    throw new Error(`Invalid LWC Constructor ${toString(Ctor)} for custom element <${sel}>.`);\n  }\n\n  let idx = DynamicImportedComponentMap.get(Ctor);\n\n  if (isUndefined(idx)) {\n    idx = dynamicImportedComponentCounter++;\n    DynamicImportedComponentMap.set(Ctor, idx);\n  } // the new vnode key is a mix of idx and compiler key, this is required by the diffing algo\n  // to identify different constructors as vnodes with different keys to avoid reusing the\n  // element used for previous constructors.\n\n\n  data.key = `dc:${idx}:${data.key}`;\n  return c(sel, Ctor, data, children);\n}\n/**\n * slow children collection marking mechanism. this API allows the compiler to signal\n * to the engine that a particular collection of children must be diffed using the slow\n * algo based on keys due to the nature of the list. E.g.:\n *\n *   - slot element's children: the content of the slot has to be dynamic when in synthetic\n *                              shadow mode because the `vnode.children` might be the slotted\n *                              content vs default content, in which case the size and the\n *                              keys are not matching.\n *   - children that contain dynamic components\n *   - children that are produced by iteration\n *\n */\n\n\nfunction sc(vnodes) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert.isTrue(isArray$1(vnodes), 'sc() api can only work with arrays.');\n  } // We have to mark the vnodes collection as dynamic so we can later on\n  // choose to use the snabbdom virtual dom diffing algo instead of our\n  // static dummy algo.\n\n\n  markAsDynamicChildren(vnodes);\n  return vnodes;\n}\n\nvar api$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  h: h,\n  ti: ti,\n  s: s,\n  c: c,\n  i: i,\n  f: f,\n  t: t,\n  d: d,\n  b: b,\n  k: k,\n  gid: gid,\n  fid: fid,\n  dc: dc,\n  sc: sc\n});\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\nconst CachedStyleFragments = create(null);\n\nfunction createStyleElement(styleContent) {\n  const elm = document.createElement('style');\n  elm.type = 'text/css';\n  elm.textContent = styleContent;\n  return elm;\n}\n\nfunction getCachedStyleElement(styleContent) {\n  let fragment = CachedStyleFragments[styleContent];\n\n  if (isUndefined(fragment)) {\n    fragment = document.createDocumentFragment();\n    const styleElm = createStyleElement(styleContent);\n    fragment.appendChild(styleElm);\n    CachedStyleFragments[styleContent] = fragment;\n  }\n\n  return fragment.cloneNode(true).firstChild;\n}\n\nconst globalStyleParent = document.head || document.body || document;\nconst InsertedGlobalStyleContent = create(null);\n\nfunction insertGlobalStyle(styleContent) {\n  // inserts the global style when needed, otherwise does nothing\n  if (isUndefined(InsertedGlobalStyleContent[styleContent])) {\n    InsertedGlobalStyleContent[styleContent] = true;\n    const elm = createStyleElement(styleContent);\n    globalStyleParent.appendChild(elm);\n  }\n}\n\nfunction createStyleVNode(elm) {\n  const vnode = h('style', {\n    key: 'style'\n  }, EmptyArray); // TODO [#1364]: supporting the ability to inject a cloned StyleElement\n  // forcing the diffing algo to use the cloned style for native shadow\n\n  vnode.clonedElement = elm;\n  return vnode;\n}\n/**\n * Reset the styling token applied to the host element.\n */\n\n\nfunction resetStyleAttributes(vm) {\n  const {\n    context,\n    elm\n  } = vm; // Remove the style attribute currently applied to the host element.\n\n  const oldHostAttribute = context.hostAttribute;\n\n  if (!isUndefined(oldHostAttribute)) {\n    removeAttribute.call(elm, oldHostAttribute);\n  } // Reset the scoping attributes associated to the context.\n\n\n  context.hostAttribute = context.shadowAttribute = undefined;\n}\n/**\n * Apply/Update the styling token applied to the host element.\n */\n\n\nfunction applyStyleAttributes(vm, hostAttribute, shadowAttribute) {\n  const {\n    context,\n    elm\n  } = vm; // Remove the style attribute currently applied to the host element.\n\n  setAttribute.call(elm, hostAttribute, '');\n  context.hostAttribute = hostAttribute;\n  context.shadowAttribute = shadowAttribute;\n}\n\nfunction collectStylesheets(stylesheets, hostSelector, shadowSelector, isNative, aggregatorFn) {\n  forEach.call(stylesheets, sheet => {\n    if (isArray$1(sheet)) {\n      collectStylesheets(sheet, hostSelector, shadowSelector, isNative, aggregatorFn);\n    } else {\n      aggregatorFn(sheet(hostSelector, shadowSelector, isNative));\n    }\n  });\n}\n\nfunction evaluateCSS(stylesheets, hostAttribute, shadowAttribute) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert.isTrue(isArray$1(stylesheets), `Invalid stylesheets.`);\n  }\n\n  if (useSyntheticShadow) {\n    const hostSelector = `[${hostAttribute}]`;\n    const shadowSelector = `[${shadowAttribute}]`;\n    collectStylesheets(stylesheets, hostSelector, shadowSelector, false, textContent => {\n      insertGlobalStyle(textContent);\n    });\n    return null;\n  } else {\n    // Native shadow in place, we need to act accordingly by using the `:host` selector, and an\n    // empty shadow selector since it is not really needed.\n    let buffer = '';\n    collectStylesheets(stylesheets, emptyString, emptyString, true, textContent => {\n      buffer += textContent;\n    });\n    return createStyleVNode(getCachedStyleElement(buffer));\n  }\n}\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n\nvar GlobalMeasurementPhase;\n\n(function (GlobalMeasurementPhase) {\n  GlobalMeasurementPhase[\"REHYDRATE\"] = \"lwc-rehydrate\";\n  GlobalMeasurementPhase[\"HYDRATE\"] = \"lwc-hydrate\";\n})(GlobalMeasurementPhase || (GlobalMeasurementPhase = {})); // Even if all the browser the engine supports implements the UserTiming API, we need to guard the measure APIs.\n// JSDom (used in Jest) for example doesn't implement the UserTiming APIs.\n\n\nconst isUserTimingSupported = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';\n\nfunction getMarkName(phase, vm) {\n  // Adding the VM idx to the mark name creates a unique mark name component instance. This is necessary to produce\n  // the right measures for components that are recursive.\n  return `${getComponentTag(vm)} - ${phase} - ${vm.idx}`;\n}\n\nfunction getMeasureName(phase, vm) {\n  return `${getComponentTag(vm)} - ${phase}`;\n}\n\nfunction start(markName) {\n  performance.mark(markName);\n}\n\nfunction end(measureName, markName) {\n  performance.measure(measureName, markName); // Clear the created marks and measure to avoid filling the performance entries buffer.\n  // Note: Even if the entries get deleted, existing PerformanceObservers preserve a copy of those entries.\n\n  performance.clearMarks(markName);\n  performance.clearMarks(measureName);\n}\n\nfunction noop$1() {\n  /* do nothing */\n}\n\nconst startMeasure = !isUserTimingSupported ? noop$1 : function (phase, vm) {\n  const markName = getMarkName(phase, vm);\n  start(markName);\n};\nconst endMeasure = !isUserTimingSupported ? noop$1 : function (phase, vm) {\n  const markName = getMarkName(phase, vm);\n  const measureName = getMeasureName(phase, vm);\n  end(measureName, markName);\n};\nconst startGlobalMeasure = !isUserTimingSupported ? noop$1 : function (phase, vm) {\n  const markName = isUndefined(vm) ? phase : getMarkName(phase, vm);\n  start(markName);\n};\nconst endGlobalMeasure = !isUserTimingSupported ? noop$1 : function (phase, vm) {\n  const markName = isUndefined(vm) ? phase : getMarkName(phase, vm);\n  end(phase, markName);\n};\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\nlet isUpdatingTemplate = false;\nlet vmBeingRendered = null;\n\nfunction getVMBeingRendered() {\n  return vmBeingRendered;\n}\n\nfunction setVMBeingRendered(vm) {\n  vmBeingRendered = vm;\n}\n\nfunction validateSlots(vm, html) {\n  if (process.env.NODE_ENV === 'production') {\n    // this method should never leak to prod\n    throw new ReferenceError();\n  }\n\n  const {\n    cmpSlots\n  } = vm;\n  const {\n    slots = EmptyArray\n  } = html;\n\n  for (const slotName in cmpSlots) {\n    // eslint-disable-next-line lwc-internal/no-production-assert\n    assert.isTrue(isArray$1(cmpSlots[slotName]), `Slots can only be set to an array, instead received ${toString(cmpSlots[slotName])} for slot \"${slotName}\" in ${vm}.`);\n\n    if (slotName !== '' && ArrayIndexOf.call(slots, slotName) === -1) {\n      // TODO [#1297]: this should never really happen because the compiler should always validate\n      // eslint-disable-next-line lwc-internal/no-production-assert\n      logError(`Ignoring unknown provided slot name \"${slotName}\" in ${vm}. Check for a typo on the slot attribute.`, vm);\n    }\n  }\n}\n\nfunction evaluateTemplate(vm, html) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert.isTrue(isFunction(html), `evaluateTemplate() second argument must be an imported template instead of ${toString(html)}`);\n  }\n\n  const isUpdatingTemplateInception = isUpdatingTemplate;\n  const vmOfTemplateBeingUpdatedInception = vmBeingRendered;\n  let vnodes = [];\n  runWithBoundaryProtection(vm, vm.owner, () => {\n    // pre\n    vmBeingRendered = vm;\n\n    if (process.env.NODE_ENV !== 'production') {\n      startMeasure('render', vm);\n    }\n  }, () => {\n    // job\n    const {\n      component,\n      context,\n      cmpSlots,\n      cmpTemplate,\n      tro\n    } = vm;\n    tro.observe(() => {\n      // Reset the cache memoizer for template when needed.\n      if (html !== cmpTemplate) {\n        // Perf opt: do not reset the shadow root during the first rendering (there is\n        // nothing to reset).\n        if (!isNull(cmpTemplate)) {\n          // It is important to reset the content to avoid reusing similar elements\n          // generated from a different template, because they could have similar IDs,\n          // and snabbdom just rely on the IDs.\n          resetShadowRoot(vm);\n        } // Check that the template was built by the compiler.\n\n\n        if (!isTemplateRegistered(html)) {\n          throw new TypeError(`Invalid template returned by the render() method on ${vm}. It must return an imported template (e.g.: \\`import html from \"./${vm.def.name}.html\"\\`), instead, it has returned: ${toString(html)}.`);\n        }\n\n        vm.cmpTemplate = html; // Populate context with template information\n\n        context.tplCache = create(null);\n        resetStyleAttributes(vm);\n        const {\n          stylesheets,\n          stylesheetTokens\n        } = html;\n\n        if (isUndefined(stylesheets) || stylesheets.length === 0) {\n          context.styleVNode = null;\n        } else if (!isUndefined(stylesheetTokens)) {\n          const {\n            hostAttribute,\n            shadowAttribute\n          } = stylesheetTokens;\n          applyStyleAttributes(vm, hostAttribute, shadowAttribute); // Caching style vnode so it can be reused on every render\n\n          context.styleVNode = evaluateCSS(stylesheets, hostAttribute, shadowAttribute);\n        }\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        // validating slots in every rendering since the allocated content might change over time\n        validateSlots(vm, html);\n      } // right before producing the vnodes, we clear up all internal references\n      // to custom elements from the template.\n\n\n      vm.velements = []; // Set the global flag that template is being updated\n\n      isUpdatingTemplate = true;\n      vnodes = html.call(undefined, api$1, component, cmpSlots, context.tplCache);\n      const {\n        styleVNode\n      } = context;\n\n      if (!isNull(styleVNode)) {\n        ArrayUnshift$1.call(vnodes, styleVNode);\n      }\n    });\n  }, () => {\n    // post\n    isUpdatingTemplate = isUpdatingTemplateInception;\n    vmBeingRendered = vmOfTemplateBeingUpdatedInception;\n\n    if (process.env.NODE_ENV !== 'production') {\n      endMeasure('render', vm);\n    }\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert.invariant(isArray$1(vnodes), `Compiler should produce html functions that always return an array.`);\n  }\n\n  return vnodes;\n}\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n\nlet isInvokingRender = false;\nlet vmBeingConstructed = null;\n\nfunction isBeingConstructed(vm) {\n  return vmBeingConstructed === vm;\n}\n\nconst noop$2 = () => void 0;\n\nfunction invokeComponentCallback(vm, fn, args) {\n  const {\n    component,\n    callHook,\n    owner\n  } = vm;\n  let result;\n  runWithBoundaryProtection(vm, owner, noop$2, () => {\n    // job\n    result = callHook(component, fn, args);\n  }, noop$2);\n  return result;\n}\n\nfunction invokeComponentConstructor(vm, Ctor) {\n  const vmBeingConstructedInception = vmBeingConstructed;\n  let error;\n\n  if (process.env.NODE_ENV !== 'production') {\n    startMeasure('constructor', vm);\n  }\n\n  vmBeingConstructed = vm;\n  /**\n   * Constructors don't need to be wrapped with a boundary because for root elements\n   * it should throw, while elements from template are already wrapped by a boundary\n   * associated to the diffing algo.\n   */\n\n  try {\n    // job\n    const result = new Ctor(); // Check indirectly if the constructor result is an instance of LightningElement. Using\n    // the \"instanceof\" operator would not work here since Locker Service provides its own\n    // implementation of LightningElement, so we indirectly check if the base constructor is\n    // invoked by accessing the component on the vm.\n\n    if (vmBeingConstructed.component !== result) {\n      throw new TypeError('Invalid component constructor, the class should extend LightningElement.');\n    }\n  } catch (e) {\n    error = Object(e);\n  } finally {\n    if (process.env.NODE_ENV !== 'production') {\n      endMeasure('constructor', vm);\n    }\n\n    vmBeingConstructed = vmBeingConstructedInception;\n\n    if (!isUndefined(error)) {\n      error.wcStack = getErrorComponentStack(vm); // re-throwing the original error annotated after restoring the context\n\n      throw error; // eslint-disable-line no-unsafe-finally\n    }\n  }\n}\n\nfunction invokeComponentRenderMethod(vm) {\n  const {\n    def: {\n      render\n    },\n    callHook,\n    component,\n    owner\n  } = vm;\n  const isRenderBeingInvokedInception = isInvokingRender;\n  const vmBeingRenderedInception = getVMBeingRendered();\n  let html;\n  let renderInvocationSuccessful = false;\n  runWithBoundaryProtection(vm, owner, () => {\n    // pre\n    isInvokingRender = true;\n    setVMBeingRendered(vm);\n  }, () => {\n    // job\n    vm.tro.observe(() => {\n      html = callHook(component, render);\n      renderInvocationSuccessful = true;\n    });\n  }, () => {\n    // post\n    isInvokingRender = isRenderBeingInvokedInception;\n    setVMBeingRendered(vmBeingRenderedInception);\n  }); // If render() invocation failed, process errorCallback in boundary and return an empty template\n\n  return renderInvocationSuccessful ? evaluateTemplate(vm, html) : [];\n}\n\nfunction invokeComponentRenderedCallback(vm) {\n  const {\n    def: {\n      renderedCallback\n    },\n    component,\n    callHook,\n    owner\n  } = vm;\n\n  if (!isUndefined(renderedCallback)) {\n    runWithBoundaryProtection(vm, owner, () => {\n      if (process.env.NODE_ENV !== 'production') {\n        startMeasure('renderedCallback', vm);\n      }\n    }, () => {\n      // job\n      callHook(component, renderedCallback);\n    }, () => {\n      // post\n      if (process.env.NODE_ENV !== 'production') {\n        endMeasure('renderedCallback', vm);\n      }\n    });\n  }\n}\n\nfunction invokeEventListener(vm, fn, thisValue, event) {\n  const {\n    callHook,\n    owner\n  } = vm;\n  runWithBoundaryProtection(vm, owner, noop$2, () => {\n    // job\n    if (process.env.NODE_ENV !== 'production') {\n      assert.isTrue(isFunction(fn), `Invalid event handler for event '${event.type}' on ${vm}.`);\n    }\n\n    callHook(thisValue, fn, [event]);\n  }, noop$2);\n}\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n\nconst signedComponentToMetaMap = new Map();\n/**\n * INTERNAL: This function can only be invoked by compiled code. The compiler\n * will prevent this function from being imported by userland code.\n */\n\nfunction registerComponent(Ctor, {\n  name,\n  tmpl: template\n}) {\n  signedComponentToMetaMap.set(Ctor, {\n    name,\n    template\n  }); // chaining this method as a way to wrap existing\n  // assignment of component constructor easily, without too much transformation\n\n  return Ctor;\n}\n\nfunction getComponentRegisteredMeta(Ctor) {\n  return signedComponentToMetaMap.get(Ctor);\n}\n\nfunction createComponent(vm, Ctor) {\n  // create the component instance\n  invokeComponentConstructor(vm, Ctor);\n\n  if (isUndefined(vm.component)) {\n    throw new ReferenceError(`Invalid construction for ${Ctor}, you must extend LightningElement.`);\n  }\n}\n\nfunction getTemplateReactiveObserver(vm) {\n  return new ReactiveObserver(() => {\n    const {\n      isDirty\n    } = vm;\n\n    if (isFalse$1(isDirty)) {\n      markComponentAsDirty(vm);\n      scheduleRehydration(vm);\n    }\n  });\n}\n\nfunction renderComponent(vm) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert.invariant(vm.isDirty, `${vm} is not dirty.`);\n  }\n\n  vm.tro.reset();\n  const vnodes = invokeComponentRenderMethod(vm);\n  vm.isDirty = false;\n  vm.isScheduled = false;\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert.invariant(isArray$1(vnodes), `${vm}.render() should always return an array of vnodes instead of ${vnodes}`);\n  }\n\n  return vnodes;\n}\n\nfunction markComponentAsDirty(vm) {\n  if (process.env.NODE_ENV !== 'production') {\n    const vmBeingRendered = getVMBeingRendered();\n    assert.isFalse(vm.isDirty, `markComponentAsDirty() for ${vm} should not be called when the component is already dirty.`);\n    assert.isFalse(isInvokingRender, `markComponentAsDirty() for ${vm} cannot be called during rendering of ${vmBeingRendered}.`);\n    assert.isFalse(isUpdatingTemplate, `markComponentAsDirty() for ${vm} cannot be called while updating template of ${vmBeingRendered}.`);\n  }\n\n  vm.isDirty = true;\n}\n\nconst cmpEventListenerMap = new WeakMap();\n\nfunction getWrappedComponentsListener(vm, listener) {\n  if (!isFunction(listener)) {\n    throw new TypeError(); // avoiding problems with non-valid listeners\n  }\n\n  let wrappedListener = cmpEventListenerMap.get(listener);\n\n  if (isUndefined(wrappedListener)) {\n    wrappedListener = function (event) {\n      invokeEventListener(vm, listener, undefined, event);\n    };\n\n    cmpEventListenerMap.set(listener, wrappedListener);\n  }\n\n  return wrappedListener;\n}\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n\nconst Services = create(null);\nconst hooks = ['rendered', 'connected', 'disconnected'];\n/**\n * EXPERIMENTAL: This function allows for the registration of \"services\"\n * in LWC by exposing hooks into the component life-cycle. This API is\n * subject to change or being removed.\n */\n\nfunction register(service) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert.isTrue(isObject$1(service), `Invalid service declaration, ${service}: service must be an object`);\n  }\n\n  for (let i = 0; i < hooks.length; ++i) {\n    const hookName = hooks[i];\n\n    if (hookName in service) {\n      let l = Services[hookName];\n\n      if (isUndefined(l)) {\n        Services[hookName] = l = [];\n      }\n\n      ArrayPush.call(l, service[hookName]);\n    }\n  }\n}\n\nfunction invokeServiceHook(vm, cbs) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert.isTrue(isArray$1(cbs) && cbs.length > 0, `Optimize invokeServiceHook() to be invoked only when needed`);\n  }\n\n  const {\n    component,\n    def,\n    context\n  } = vm;\n\n  for (let i = 0, len = cbs.length; i < len; ++i) {\n    cbs[i].call(undefined, component, {}, def, context);\n  }\n}\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n\nvar VMState;\n\n(function (VMState) {\n  VMState[VMState[\"created\"] = 0] = \"created\";\n  VMState[VMState[\"connected\"] = 1] = \"connected\";\n  VMState[VMState[\"disconnected\"] = 2] = \"disconnected\";\n})(VMState || (VMState = {}));\n\nlet idx = 0;\n/** The internal slot used to associate different objects the engine manipulates with the VM */\n\nconst ViewModelReflection = createHiddenField('ViewModel', 'engine');\n\nfunction callHook(cmp, fn, args = []) {\n  return fn.apply(cmp, args);\n}\n\nfunction setHook(cmp, prop, newValue) {\n  cmp[prop] = newValue;\n}\n\nfunction getHook(cmp, prop) {\n  return cmp[prop];\n}\n\nfunction rerenderVM(vm) {\n  rehydrate(vm);\n}\n\nfunction connectRootElement(elm) {\n  const vm = getAssociatedVM(elm);\n  startGlobalMeasure(GlobalMeasurementPhase.HYDRATE, vm); // Usually means moving the element from one place to another, which is observable via\n  // life-cycle hooks.\n\n  if (vm.state === VMState.connected) {\n    disconnectRootElement(elm);\n  }\n\n  runConnectedCallback(vm);\n  rehydrate(vm);\n  endGlobalMeasure(GlobalMeasurementPhase.HYDRATE, vm);\n}\n\nfunction disconnectRootElement(elm) {\n  const vm = getAssociatedVM(elm);\n  resetComponentStateWhenRemoved(vm);\n}\n\nfunction appendVM(vm) {\n  rehydrate(vm);\n} // just in case the component comes back, with this we guarantee re-rendering it\n// while preventing any attempt to rehydration until after reinsertion.\n\n\nfunction resetComponentStateWhenRemoved(vm) {\n  const {\n    state\n  } = vm;\n\n  if (state !== VMState.disconnected) {\n    const {\n      oar,\n      tro\n    } = vm; // Making sure that any observing record will not trigger the rehydrated on this vm\n\n    tro.reset(); // Making sure that any observing accessor record will not trigger the setter to be reinvoked\n\n    for (const key in oar) {\n      oar[key].reset();\n    }\n\n    runDisconnectedCallback(vm); // Spec: https://dom.spec.whatwg.org/#concept-node-remove (step 14-15)\n\n    runShadowChildNodesDisconnectedCallback(vm);\n    runLightChildNodesDisconnectedCallback(vm);\n  }\n} // this method is triggered by the diffing algo only when a vnode from the\n// old vnode.children is removed from the DOM.\n\n\nfunction removeVM(vm) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert.isTrue(vm.state === VMState.connected || vm.state === VMState.disconnected, `${vm} must have been connected.`);\n  }\n\n  resetComponentStateWhenRemoved(vm);\n}\n\nfunction createVM(elm, def, options) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert.invariant(elm instanceof HTMLElement, `VM creation requires a DOM element instead of ${elm}.`);\n  }\n\n  const vm = {\n    elm,\n    def,\n    idx: idx++,\n    state: VMState.created,\n    isScheduled: false,\n    isDirty: true,\n    tagName: options.tagName,\n    mode: options.mode,\n    owner: options.owner,\n    children: EmptyArray,\n    aChildren: EmptyArray,\n    velements: EmptyArray,\n    cmpProps: create(null),\n    cmpFields: create(null),\n    cmpSlots: create(null),\n    oar: create(null),\n    cmpTemplate: null,\n    context: {\n      hostAttribute: undefined,\n      shadowAttribute: undefined,\n      styleVNode: null,\n      tplCache: EmptyObject,\n      wiredConnecting: EmptyArray,\n      wiredDisconnecting: EmptyArray\n    },\n    tro: null,\n    component: null,\n    cmpRoot: null,\n    callHook,\n    setHook,\n    getHook\n  };\n  vm.tro = getTemplateReactiveObserver(vm);\n\n  if (process.env.NODE_ENV !== 'production') {\n    vm.toString = () => {\n      return `[object:vm ${def.name} (${vm.idx})]`;\n    };\n  } // Create component instance associated to the vm and the element.\n\n\n  createComponent(vm, def.ctor); // Initializing the wire decorator per instance only when really needed\n\n  if (hasWireAdapters(vm)) {\n    installWireAdapters(vm);\n  }\n\n  return vm;\n}\n\nfunction assertIsVM(obj) {\n  if (isNull(obj) || !isObject$1(obj) || !('cmpRoot' in obj)) {\n    throw new TypeError(`${obj} is not a VM.`);\n  }\n}\n\nfunction associateVM(obj, vm) {\n  setHiddenField(obj, ViewModelReflection, vm);\n}\n\nfunction getAssociatedVM(obj) {\n  const vm = getHiddenField(obj, ViewModelReflection);\n\n  if (process.env.NODE_ENV !== 'production') {\n    assertIsVM(vm);\n  }\n\n  return vm;\n}\n\nfunction getAssociatedVMIfPresent(obj) {\n  const maybeVm = getHiddenField(obj, ViewModelReflection);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!isUndefined(maybeVm)) {\n      assertIsVM(maybeVm);\n    }\n  }\n\n  return maybeVm;\n}\n\nfunction rehydrate(vm) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert.isTrue(vm.elm instanceof HTMLElement, `rehydration can only happen after ${vm} was patched the first time.`);\n  }\n\n  if (isTrue$1(vm.isDirty)) {\n    const children = renderComponent(vm);\n    patchShadowRoot(vm, children);\n  }\n}\n\nfunction patchShadowRoot(vm, newCh) {\n  const {\n    cmpRoot,\n    children: oldCh\n  } = vm;\n  vm.children = newCh; // caching the new children collection\n\n  if (newCh.length > 0 || oldCh.length > 0) {\n    // patch function mutates vnodes by adding the element reference,\n    // however, if patching fails it contains partial changes.\n    if (oldCh !== newCh) {\n      const fn = hasDynamicChildren(newCh) ? updateDynamicChildren : updateStaticChildren;\n      runWithBoundaryProtection(vm, vm, () => {\n        // pre\n        if (process.env.NODE_ENV !== 'production') {\n          startMeasure('patch', vm);\n        }\n      }, () => {\n        // job\n        fn(cmpRoot, oldCh, newCh);\n      }, () => {\n        // post\n        if (process.env.NODE_ENV !== 'production') {\n          endMeasure('patch', vm);\n        }\n      });\n    }\n  }\n\n  if (vm.state === VMState.connected) {\n    // If the element is connected, that means connectedCallback was already issued, and\n    // any successive rendering should finish with the call to renderedCallback, otherwise\n    // the connectedCallback will take care of calling it in the right order at the end of\n    // the current rehydration process.\n    runRenderedCallback(vm);\n  }\n}\n\nfunction runRenderedCallback(vm) {\n  const {\n    rendered\n  } = Services;\n\n  if (rendered) {\n    invokeServiceHook(vm, rendered);\n  }\n\n  invokeComponentRenderedCallback(vm);\n}\n\nlet rehydrateQueue = [];\n\nfunction flushRehydrationQueue() {\n  startGlobalMeasure(GlobalMeasurementPhase.REHYDRATE);\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert.invariant(rehydrateQueue.length, `If rehydrateQueue was scheduled, it is because there must be at least one VM on this pending queue instead of ${rehydrateQueue}.`);\n  }\n\n  const vms = rehydrateQueue.sort((a, b) => a.idx - b.idx);\n  rehydrateQueue = []; // reset to a new queue\n\n  for (let i = 0, len = vms.length; i < len; i += 1) {\n    const vm = vms[i];\n\n    try {\n      rehydrate(vm);\n    } catch (error) {\n      if (i + 1 < len) {\n        // pieces of the queue are still pending to be rehydrated, those should have priority\n        if (rehydrateQueue.length === 0) {\n          addCallbackToNextTick(flushRehydrationQueue);\n        }\n\n        ArrayUnshift$1.apply(rehydrateQueue, ArraySlice$1.call(vms, i + 1));\n      } // we need to end the measure before throwing.\n\n\n      endGlobalMeasure(GlobalMeasurementPhase.REHYDRATE); // re-throwing the original error will break the current tick, but since the next tick is\n      // already scheduled, it should continue patching the rest.\n\n      throw error; // eslint-disable-line no-unsafe-finally\n    }\n  }\n\n  endGlobalMeasure(GlobalMeasurementPhase.REHYDRATE);\n}\n\nfunction runConnectedCallback(vm) {\n  const {\n    state\n  } = vm;\n\n  if (state === VMState.connected) {\n    return; // nothing to do since it was already connected\n  }\n\n  vm.state = VMState.connected; // reporting connection\n\n  const {\n    connected\n  } = Services;\n\n  if (connected) {\n    invokeServiceHook(vm, connected);\n  }\n\n  if (hasWireAdapters(vm)) {\n    connectWireAdapters(vm);\n  }\n\n  const {\n    connectedCallback\n  } = vm.def;\n\n  if (!isUndefined(connectedCallback)) {\n    if (process.env.NODE_ENV !== 'production') {\n      startMeasure('connectedCallback', vm);\n    }\n\n    invokeComponentCallback(vm, connectedCallback);\n\n    if (process.env.NODE_ENV !== 'production') {\n      endMeasure('connectedCallback', vm);\n    }\n  }\n}\n\nfunction hasWireAdapters(vm) {\n  return getOwnPropertyNames(vm.def.wire).length > 0;\n}\n\nfunction runDisconnectedCallback(vm) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert.isTrue(vm.state !== VMState.disconnected, `${vm} must be inserted.`);\n  }\n\n  if (isFalse$1(vm.isDirty)) {\n    // this guarantees that if the component is reused/reinserted,\n    // it will be re-rendered because we are disconnecting the reactivity\n    // linking, so mutations are not automatically reflected on the state\n    // of disconnected components.\n    vm.isDirty = true;\n  }\n\n  vm.state = VMState.disconnected; // reporting disconnection\n\n  const {\n    disconnected\n  } = Services;\n\n  if (disconnected) {\n    invokeServiceHook(vm, disconnected);\n  }\n\n  if (hasWireAdapters(vm)) {\n    disconnectWireAdapters(vm);\n  }\n\n  const {\n    disconnectedCallback\n  } = vm.def;\n\n  if (!isUndefined(disconnectedCallback)) {\n    if (process.env.NODE_ENV !== 'production') {\n      startMeasure('disconnectedCallback', vm);\n    }\n\n    invokeComponentCallback(vm, disconnectedCallback);\n\n    if (process.env.NODE_ENV !== 'production') {\n      endMeasure('disconnectedCallback', vm);\n    }\n  }\n}\n\nfunction runShadowChildNodesDisconnectedCallback(vm) {\n  const {\n    velements: vCustomElementCollection\n  } = vm; // Reporting disconnection for every child in inverse order since they are\n  // inserted in reserved order.\n\n  for (let i = vCustomElementCollection.length - 1; i >= 0; i -= 1) {\n    const {\n      elm\n    } = vCustomElementCollection[i]; // There are two cases where the element could be undefined:\n    // * when there is an error during the construction phase, and an error\n    //   boundary picks it, there is a possibility that the VCustomElement\n    //   is not properly initialized, and therefore is should be ignored.\n    // * when slotted custom element is not used by the element where it is\n    //   slotted into it, as  a result, the custom element was never\n    //   initialized.\n\n    if (!isUndefined(elm)) {\n      const childVM = getAssociatedVMIfPresent(elm); // The VM associated with the element might be associated undefined\n      // in the case where the VM failed in the middle of its creation,\n      // eg: constructor throwing before invoking super().\n\n      if (!isUndefined(childVM)) {\n        resetComponentStateWhenRemoved(childVM);\n      }\n    }\n  }\n}\n\nfunction runLightChildNodesDisconnectedCallback(vm) {\n  const {\n    aChildren: adoptedChildren\n  } = vm;\n  recursivelyDisconnectChildren(adoptedChildren);\n}\n/**\n * The recursion doesn't need to be a complete traversal of the vnode graph,\n * instead it can be partial, when a custom element vnode is found, we don't\n * need to continue into its children because by attempting to disconnect the\n * custom element itself will trigger the removal of anything slotted or anything\n * defined on its shadow.\n */\n\n\nfunction recursivelyDisconnectChildren(vnodes) {\n  for (let i = 0, len = vnodes.length; i < len; i += 1) {\n    const vnode = vnodes[i];\n\n    if (!isNull(vnode) && isArray$1(vnode.children) && !isUndefined(vnode.elm)) {\n      // vnode is a VElement with children\n      if (isUndefined(vnode.ctor)) {\n        // it is a VElement, just keep looking (recursively)\n        recursivelyDisconnectChildren(vnode.children);\n      } else {\n        // it is a VCustomElement, disconnect it and ignore its children\n        resetComponentStateWhenRemoved(getAssociatedVM(vnode.elm));\n      }\n    }\n  }\n} // This is a super optimized mechanism to remove the content of the shadowRoot without having to go\n// into snabbdom. Especially useful when the reset is a consequence of an error, in which case the\n// children VNodes might not be representing the current state of the DOM\n\n\nfunction resetShadowRoot(vm) {\n  const {\n    children,\n    cmpRoot\n  } = vm;\n\n  for (let i = 0, len = children.length; i < len; i++) {\n    const child = children[i];\n\n    if (!isNull(child) && !isUndefined(child.elm)) {\n      cmpRoot.removeChild(child.elm);\n    }\n  }\n\n  vm.children = EmptyArray;\n  runShadowChildNodesDisconnectedCallback(vm);\n  vm.velements = EmptyArray;\n}\n\nfunction scheduleRehydration(vm) {\n  if (!vm.isScheduled) {\n    vm.isScheduled = true;\n\n    if (rehydrateQueue.length === 0) {\n      addCallbackToNextTick(flushRehydrationQueue);\n    }\n\n    ArrayPush.call(rehydrateQueue, vm);\n  }\n}\n\nfunction getErrorBoundaryVM(vm) {\n  let currentVm = vm;\n\n  while (!isNull(currentVm)) {\n    if (!isUndefined(currentVm.def.errorCallback)) {\n      return currentVm;\n    }\n\n    currentVm = currentVm.owner;\n  }\n} // slow path routine\n// NOTE: we should probably more this routine to the synthetic shadow folder\n// and get the allocation to be cached by in the elm instead of in the VM\n\n\nfunction allocateInSlot(vm, children) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert.invariant(isObject$1(vm.cmpSlots), `When doing manual allocation, there must be a cmpSlots object available.`);\n  }\n\n  const {\n    cmpSlots: oldSlots\n  } = vm;\n  const cmpSlots = vm.cmpSlots = create(null);\n\n  for (let i = 0, len = children.length; i < len; i += 1) {\n    const vnode = children[i];\n\n    if (isNull(vnode)) {\n      continue;\n    }\n\n    const {\n      data\n    } = vnode;\n    const slotName = data.attrs && data.attrs.slot || '';\n    const vnodes = cmpSlots[slotName] = cmpSlots[slotName] || []; // re-keying the vnodes is necessary to avoid conflicts with default content for the slot\n    // which might have similar keys. Each vnode will always have a key that\n    // starts with a numeric character from compiler. In this case, we add a unique\n    // notation for slotted vnodes keys, e.g.: `@foo:1:1`\n\n    vnode.key = `@${slotName}:${vnode.key}`;\n    ArrayPush.call(vnodes, vnode);\n  }\n\n  if (isFalse$1(vm.isDirty)) {\n    // We need to determine if the old allocation is really different from the new one\n    // and mark the vm as dirty\n    const oldKeys = keys(oldSlots);\n\n    if (oldKeys.length !== keys(cmpSlots).length) {\n      markComponentAsDirty(vm);\n      return;\n    }\n\n    for (let i = 0, len = oldKeys.length; i < len; i += 1) {\n      const key = oldKeys[i];\n\n      if (isUndefined(cmpSlots[key]) || oldSlots[key].length !== cmpSlots[key].length) {\n        markComponentAsDirty(vm);\n        return;\n      }\n\n      const oldVNodes = oldSlots[key];\n      const vnodes = cmpSlots[key];\n\n      for (let j = 0, a = cmpSlots[key].length; j < a; j += 1) {\n        if (oldVNodes[j] !== vnodes[j]) {\n          markComponentAsDirty(vm);\n          return;\n        }\n      }\n    }\n  }\n}\n\nfunction runWithBoundaryProtection(vm, owner, pre, job, post) {\n  let error;\n  pre();\n\n  try {\n    job();\n  } catch (e) {\n    error = Object(e);\n  } finally {\n    post();\n\n    if (!isUndefined(error)) {\n      error.wcStack = error.wcStack || getErrorComponentStack(vm);\n      const errorBoundaryVm = isNull(owner) ? undefined : getErrorBoundaryVM(owner);\n\n      if (isUndefined(errorBoundaryVm)) {\n        throw error; // eslint-disable-line no-unsafe-finally\n      }\n\n      resetShadowRoot(vm); // remove offenders\n\n      if (process.env.NODE_ENV !== 'production') {\n        startMeasure('errorCallback', errorBoundaryVm);\n      } // error boundaries must have an ErrorCallback\n\n\n      const errorCallback = errorBoundaryVm.def.errorCallback;\n      invokeComponentCallback(errorBoundaryVm, errorCallback, [error, error.wcStack]);\n\n      if (process.env.NODE_ENV !== 'production') {\n        endMeasure('errorCallback', errorBoundaryVm);\n      }\n    }\n  }\n}\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n\nconst DeprecatedWiredElementHost = '$$DeprecatedWiredElementHostKey$$';\nconst DeprecatedWiredParamsMeta = '$$DeprecatedWiredParamsMetaKey$$';\nconst WireMetaMap = new Map();\n\nfunction noop$3() {}\n\nfunction createFieldDataCallback(vm, name) {\n  const {\n    cmpFields\n  } = vm;\n  return value => {\n    if (value !== vm.cmpFields[name]) {\n      // storing the value in the underlying storage\n      cmpFields[name] = value;\n      componentValueMutated(vm, name);\n    }\n  };\n}\n\nfunction createMethodDataCallback(vm, method) {\n  return value => {\n    // dispatching new value into the wired method\n    invokeComponentCallback(vm, method, [value]);\n  };\n}\n\nfunction createConfigWatcher(vm, wireDef, callbackWhenConfigIsReady) {\n  const {\n    component\n  } = vm;\n  const {\n    configCallback\n  } = wireDef;\n  let hasPendingConfig = false; // creating the reactive observer for reactive params when needed\n\n  const ro = new ReactiveObserver(() => {\n    if (hasPendingConfig === false) {\n      hasPendingConfig = true; // collect new config in the micro-task\n\n      Promise.resolve().then(() => {\n        hasPendingConfig = false; // resetting current reactive params\n\n        ro.reset(); // dispatching a new config due to a change in the configuration\n\n        callback();\n      });\n    }\n  });\n\n  const callback = () => {\n    let config;\n    ro.observe(() => config = configCallback(component)); // eslint-disable-next-line lwc-internal/no-invalid-todo\n    // TODO: dev-mode validation of config based on the adapter.configSchema\n    // @ts-ignore it is assigned in the observe() callback\n\n    callbackWhenConfigIsReady(config);\n  };\n\n  return callback;\n}\n\nfunction createContextWatcher(vm, wireDef, callbackWhenContextIsReady) {\n  const {\n    adapter\n  } = wireDef;\n  const adapterContextToken = getAdapterToken(adapter);\n\n  if (isUndefined(adapterContextToken)) {\n    return; // no provider found, nothing to be done\n  }\n\n  const {\n    elm,\n    context: {\n      wiredConnecting,\n      wiredDisconnecting\n    }\n  } = vm; // waiting for the component to be connected to formally request the context via the token\n\n  ArrayPush.call(wiredConnecting, () => {\n    // This event is responsible for connecting the host element with another\n    // element in the composed path that is providing contextual data. The provider\n    // must be listening for a special dom event with the name corresponding to the value of\n    // `adapterContextToken`, which will remain secret and internal to this file only to\n    // guarantee that the linkage can be forged.\n    const internalDomEvent = new CustomEvent(adapterContextToken, {\n      bubbles: true,\n      composed: true,\n\n      detail(newContext, disconnectCallback) {\n        // adds this callback into the disconnect bucket so it gets disconnected from parent\n        // the the element hosting the wire is disconnected\n        ArrayPush.call(wiredDisconnecting, disconnectCallback); // eslint-disable-next-line lwc-internal/no-invalid-todo\n        // TODO: dev-mode validation of config based on the adapter.contextSchema\n\n        callbackWhenContextIsReady(newContext);\n      }\n\n    });\n    dispatchEvent.call(elm, internalDomEvent);\n  });\n}\n\nfunction createConnector(vm, name, wireDef) {\n  const {\n    method,\n    adapter,\n    configCallback,\n    dynamic\n  } = wireDef;\n  const hasDynamicParams = dynamic.length > 0;\n  const {\n    component\n  } = vm;\n  const dataCallback = isUndefined(method) ? createFieldDataCallback(vm, name) : createMethodDataCallback(vm, method);\n  let context;\n  let connector; // Workaround to pass the component element associated to this wire adapter instance.\n\n  defineProperty(dataCallback, DeprecatedWiredElementHost, {\n    value: vm.elm\n  });\n  defineProperty(dataCallback, DeprecatedWiredParamsMeta, {\n    value: dynamic\n  });\n  runWithBoundaryProtection(vm, vm, noop$3, () => {\n    // job\n    connector = new adapter(dataCallback);\n  }, noop$3);\n\n  const updateConnectorConfig = config => {\n    // every time the config is recomputed due to tracking,\n    // this callback will be invoked with the new computed config\n    runWithBoundaryProtection(vm, vm, noop$3, () => {\n      // job\n      connector.update(config, context);\n    }, noop$3);\n  }; // Computes the current wire config and calls the update method on the wire adapter.\n  // This initial implementation may change depending on the specific wire instance, if it has params, we will need\n  // to observe changes in the next tick.\n\n\n  let computeConfigAndUpdate = () => {\n    updateConnectorConfig(configCallback(component));\n  };\n\n  if (hasDynamicParams) {\n    // This wire has dynamic parameters: we wait for the component instance is created and its values set\n    // in order to call the update(config) method.\n    Promise.resolve().then(() => {\n      computeConfigAndUpdate = createConfigWatcher(vm, wireDef, updateConnectorConfig);\n      computeConfigAndUpdate();\n    });\n  } else {\n    computeConfigAndUpdate();\n  } // if the adapter needs contextualization, we need to watch for new context and push it alongside the config\n\n\n  if (!isUndefined(adapter.contextSchema)) {\n    createContextWatcher(vm, wireDef, newContext => {\n      // every time the context is pushed into this component,\n      // this callback will be invoked with the new computed context\n      if (context !== newContext) {\n        context = newContext; // Note: when new context arrives, the config will be recomputed and pushed along side the new\n        // context, this is to preserve the identity characteristics, config should not have identity\n        // (ever), while context can have identity\n\n        computeConfigAndUpdate();\n      }\n    });\n  } // @ts-ignore the boundary protection executes sync, connector is always defined\n\n\n  return connector;\n}\n\nconst AdapterToTokenMap = new Map();\n\nfunction getAdapterToken(adapter) {\n  return AdapterToTokenMap.get(adapter);\n}\n\nfunction setAdapterToken(adapter, token) {\n  AdapterToTokenMap.set(adapter, token);\n}\n\nfunction storeWiredMethodMeta(descriptor, adapter, configCallback, dynamic) {\n  // support for callable adapters\n  if (adapter.adapter) {\n    adapter = adapter.adapter;\n  }\n\n  const method = descriptor.value;\n  const def = {\n    adapter,\n    method,\n    configCallback,\n    dynamic\n  };\n  WireMetaMap.set(descriptor, def);\n}\n\nfunction storeWiredFieldMeta(descriptor, adapter, configCallback, dynamic) {\n  // support for callable adapters\n  if (adapter.adapter) {\n    adapter = adapter.adapter;\n  }\n\n  const def = {\n    adapter,\n    configCallback,\n    dynamic\n  };\n  WireMetaMap.set(descriptor, def);\n}\n\nfunction installWireAdapters(vm) {\n  const {\n    context,\n    def: {\n      wire\n    }\n  } = vm;\n  const wiredConnecting = context.wiredConnecting = [];\n  const wiredDisconnecting = context.wiredDisconnecting = [];\n\n  for (const fieldNameOrMethod in wire) {\n    const descriptor = wire[fieldNameOrMethod];\n    const wireDef = WireMetaMap.get(descriptor);\n\n    if (process.env.NODE_ENV !== 'production') {\n      assert.invariant(wireDef, `Internal Error: invalid wire definition found.`);\n    }\n\n    if (!isUndefined(wireDef)) {\n      const adapterInstance = createConnector(vm, fieldNameOrMethod, wireDef);\n      ArrayPush.call(wiredConnecting, () => adapterInstance.connect());\n      ArrayPush.call(wiredDisconnecting, () => adapterInstance.disconnect());\n    }\n  }\n}\n\nfunction connectWireAdapters(vm) {\n  const {\n    wiredConnecting\n  } = vm.context;\n\n  for (let i = 0, len = wiredConnecting.length; i < len; i += 1) {\n    wiredConnecting[i]();\n  }\n}\n\nfunction disconnectWireAdapters(vm) {\n  const {\n    wiredDisconnecting\n  } = vm.context;\n  runWithBoundaryProtection(vm, vm, noop$3, () => {\n    // job\n    for (let i = 0, len = wiredDisconnecting.length; i < len; i += 1) {\n      wiredDisconnecting[i]();\n    }\n  }, noop$3);\n}\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n\nfunction createContextProvider(adapter) {\n  let adapterContextToken = getAdapterToken(adapter);\n\n  if (!isUndefined(adapterContextToken)) {\n    throw new Error(`Adapter already have a context provider.`);\n  }\n\n  adapterContextToken = guid();\n  setAdapterToken(adapter, adapterContextToken);\n  const providers = [];\n  return (elm, options) => {\n    if (ArrayIndexOf.call(providers, elm) !== -1) {\n      throw new Error(`Adapter was already installed on ${elm}.`);\n    }\n\n    providers.push(elm);\n    const {\n      consumerConnectedCallback,\n      consumerDisconnectedCallback\n    } = options;\n    elm.addEventListener(adapterContextToken, evt => {\n      const {\n        detail\n      } = evt;\n      const consumer = {\n        provide(newContext) {\n          detail(newContext, disconnectCallback);\n        }\n\n      };\n\n      const disconnectCallback = () => {\n        if (!isUndefined(consumerDisconnectedCallback)) {\n          consumerDisconnectedCallback(consumer);\n        }\n      };\n\n      consumerConnectedCallback(consumer);\n      evt.stopImmediatePropagation();\n    });\n  };\n}\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n/**\n * EXPERIMENTAL: This function allows you to create a reactive readonly\n * membrane around any object value. This API is subject to change or\n * being removed.\n */\n\n\nfunction readonly(obj) {\n  if (process.env.NODE_ENV !== 'production') {\n    // TODO [#1292]: Remove the readonly decorator\n    if (arguments.length !== 1) {\n      assert.fail('@readonly cannot be used as a decorator just yet, use it as a function with one argument to produce a readonly version of the provided value.');\n    }\n  }\n\n  return reactiveMembrane.getReadOnlyProxy(obj);\n}\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n/**\n * This function builds a Web Component class from a LWC constructor so it can be\n * registered as a new element via customElements.define() at any given time.\n *\n * @deprecated since version 1.3.11\n *\n * @example\n * ```\n * import { buildCustomElementConstructor } from 'lwc';\n * import Foo from 'ns/foo';\n * const WC = buildCustomElementConstructor(Foo);\n * customElements.define('x-foo', WC);\n * const elm = document.createElement('x-foo');\n * ```\n */\n\n\nfunction deprecatedBuildCustomElementConstructor(Ctor) {\n  if (process.env.NODE_ENV !== 'production') {\n    /* eslint-disable-next-line no-console */\n    console.warn('Deprecated function called: \"buildCustomElementConstructor\" function is deprecated and it will be removed.' + `Use \"${Ctor.name}.CustomElementConstructor\" static property of the component constructor to access the corresponding custom element constructor instead.`);\n  }\n\n  return Ctor.CustomElementConstructor;\n}\n\nfunction buildCustomElementConstructor(Ctor) {\n  var _a;\n\n  const def = getComponentInternalDef(Ctor); // generating the hash table for attributes to avoid duplicate fields and facilitate validation\n  // and false positives in case of inheritance.\n\n  const attributeToPropMap = create(null);\n\n  for (const propName in def.props) {\n    attributeToPropMap[getAttrNameFromPropName(propName)] = propName;\n  }\n\n  return _a = class extends def.bridge {\n    constructor() {\n      super();\n      createVM(this, def, {\n        mode: 'open',\n        owner: null,\n        tagName: this.tagName\n      });\n    }\n\n    connectedCallback() {\n      connectRootElement(this);\n    }\n\n    disconnectedCallback() {\n      disconnectRootElement(this);\n    }\n\n    attributeChangedCallback(attrName, oldValue, newValue) {\n      if (oldValue === newValue) {\n        // Ignore same values.\n        return;\n      }\n\n      const propName = attributeToPropMap[attrName];\n\n      if (isUndefined(propName)) {\n        // Ignore unknown attributes.\n        return;\n      }\n\n      if (!isAttributeLocked(this, attrName)) {\n        // Ignore changes triggered by the engine itself during:\n        // * diffing when public props are attempting to reflect to the DOM\n        // * component via `this.setAttribute()`, should never update the prop\n        // Both cases, the setAttribute call is always wrapped by the unlocking of the\n        // attribute to be changed\n        return;\n      } // Reflect attribute change to the corresponding property when changed from outside.\n\n\n      this[propName] = newValue;\n    }\n\n  }, // Specify attributes for which we want to reflect changes back to their corresponding\n  // properties via attributeChangedCallback.\n  _a.observedAttributes = keys(attributeToPropMap), _a;\n}\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n\nconst ConnectingSlot = createHiddenField('connecting', 'engine');\nconst DisconnectingSlot = createHiddenField('disconnecting', 'engine');\n\nfunction callNodeSlot(node, slot) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert.isTrue(node, `callNodeSlot() should not be called for a non-object`);\n  }\n\n  const fn = getHiddenField(node, slot);\n\n  if (!isUndefined(fn)) {\n    fn(node);\n  }\n\n  return node; // for convenience\n} // Monkey patching Node methods to be able to detect the insertions and removal of root elements\n// created via createElement.\n\n\nconst {\n  appendChild,\n  insertBefore,\n  removeChild,\n  replaceChild\n} = Node.prototype;\nassign(Node.prototype, {\n  appendChild(newChild) {\n    const appendedNode = appendChild.call(this, newChild);\n    return callNodeSlot(appendedNode, ConnectingSlot);\n  },\n\n  insertBefore(newChild, referenceNode) {\n    const insertedNode = insertBefore.call(this, newChild, referenceNode);\n    return callNodeSlot(insertedNode, ConnectingSlot);\n  },\n\n  removeChild(oldChild) {\n    const removedNode = removeChild.call(this, oldChild);\n    return callNodeSlot(removedNode, DisconnectingSlot);\n  },\n\n  replaceChild(newChild, oldChild) {\n    const replacedNode = replaceChild.call(this, newChild, oldChild);\n    callNodeSlot(replacedNode, DisconnectingSlot);\n    callNodeSlot(newChild, ConnectingSlot);\n    return replacedNode;\n  }\n\n});\n/**\n * EXPERIMENTAL: This function is almost identical to document.createElement with the slightly\n * difference that in the options, you can pass the `is` property set to a Constructor instead of\n * just a string value. The intent is to allow the creation of an element controlled by LWC without\n * having to register the element as a custom element.\n *\n * @example\n * ```\n * const el = createElement('x-foo', { is: FooCtor });\n * ```\n */\n\nfunction createElement(sel, options) {\n  if (!isObject$1(options) || isNull(options)) {\n    throw new TypeError(`\"createElement\" function expects an object as second parameter but received \"${toString(options)}\".`);\n  }\n\n  const Ctor = options.is;\n\n  if (!isFunction(Ctor)) {\n    throw new TypeError(`\"createElement\" function expects an \"is\" option with a valid component constructor.`);\n  }\n\n  const element = document.createElement(sel); // There is a possibility that a custom element is registered under tagName, in which case, the\n  // initialization is already carry on, and there is nothing else to do here.\n\n  if (!isUndefined(getAssociatedVMIfPresent(element))) {\n    return element;\n  }\n\n  const def = getComponentInternalDef(Ctor);\n  setElementProto(element, def);\n  createVM(element, def, {\n    tagName: sel,\n    mode: options.mode !== 'closed' ? 'open' : 'closed',\n    owner: null\n  });\n  setHiddenField(element, ConnectingSlot, connectRootElement);\n  setHiddenField(element, DisconnectingSlot, disconnectRootElement);\n  return element;\n}\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n/**\n * EXPERIMENTAL: This function provides access to the component constructor, given an HTMLElement.\n * This API is subject to change or being removed.\n */\n\n\nfunction getComponentConstructor(elm) {\n  let ctor = null;\n\n  if (elm instanceof HTMLElement) {\n    const vm = getAssociatedVMIfPresent(elm);\n\n    if (!isUndefined(vm)) {\n      ctor = vm.def.ctor;\n    }\n  }\n\n  return ctor;\n}\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n/**\n * EXPERIMENTAL: This function detects whether or not a Node is controlled by a LWC template. This\n * API is subject to change or being removed.\n */\n\n\nfunction isNodeFromTemplate(node) {\n  if (isFalse$1(node instanceof Node)) {\n    return false;\n  } // TODO [#1250]: skipping the shadowRoot instances itself makes no sense, we need to revisit\n  // this with locker\n\n\n  if (node instanceof ShadowRoot) {\n    return false;\n  }\n\n  if (useSyntheticShadow) {\n    // TODO [#1252]: old behavior that is still used by some pieces of the platform,\n    // specifically, nodes inserted manually on places where `lwc:dom=\"manual\"` directive is not\n    // used, will be considered global elements.\n    if (isUndefined(node.$shadowResolver$)) {\n      return false;\n    }\n  }\n\n  const root = node.getRootNode();\n  return root instanceof ShadowRoot;\n}\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n\nconst ComponentConstructorToCustomElementConstructorMap = new Map();\n\nfunction getCustomElementConstructor(Ctor) {\n  if (Ctor === BaseLightningElement) {\n    throw new TypeError(`Invalid Constructor. LightningElement base class can't be claimed as a custom element.`);\n  }\n\n  let ce = ComponentConstructorToCustomElementConstructorMap.get(Ctor);\n\n  if (isUndefined(ce)) {\n    ce = buildCustomElementConstructor(Ctor);\n    ComponentConstructorToCustomElementConstructorMap.set(Ctor, ce);\n  }\n\n  return ce;\n}\n/**\n * This static getter builds a Web Component class from a LWC constructor so it can be registered\n * as a new element via customElements.define() at any given time. E.g.:\n *\n *      import Foo from 'ns/foo';\n *      customElements.define('x-foo', Foo.CustomElementConstructor);\n *      const elm = document.createElement('x-foo');\n *\n */\n\n\ndefineProperty(BaseLightningElement, 'CustomElementConstructor', {\n  get() {\n    return getCustomElementConstructor(this);\n  }\n\n});\nfreeze(BaseLightningElement);\nseal(BaseLightningElement.prototype);\n/* version: 1.7.1 */\n\nexport { BaseLightningElement as LightningElement, api, deprecatedBuildCustomElementConstructor as buildCustomElementConstructor, createContextProvider, createElement, getComponentConstructor, getComponentDef, isComponentConstructor, isNodeFromTemplate, readonly, register, registerComponent, registerDecorators, registerTemplate, sanitizeAttribute, setFeatureFlag, setFeatureFlagForTest, track, unwrap$1 as unwrap, wire };\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\nvar nodejsCustomInspectSymbol = typeof Symbol === 'function' && typeof Symbol.for === 'function' ? Symbol.for('nodejs.util.inspect.custom') : undefined;\nexport default nodejsCustomInspectSymbol;\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport nodejsCustomInspectSymbol from \"./nodejsCustomInspectSymbol.mjs\";\nvar MAX_ARRAY_LENGTH = 10;\nvar MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\n\nexport default function inspect(value) {\n  return formatValue(value, []);\n}\n\nfunction formatValue(value, seenValues) {\n  switch (_typeof(value)) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? \"[function \".concat(value.name, \"]\") : '[function]';\n\n    case 'object':\n      if (value === null) {\n        return 'null';\n      }\n\n      return formatObjectValue(value, seenValues);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (previouslySeenValues.indexOf(value) !== -1) {\n    return '[Circular]';\n  }\n\n  var seenValues = [].concat(previouslySeenValues, [value]);\n  var customInspectFn = getCustomFn(value);\n\n  if (customInspectFn !== undefined) {\n    // $FlowFixMe(>=0.90.0)\n    var customValue = customInspectFn.call(value); // check for infinite recursion\n\n    if (customValue !== value) {\n      return typeof customValue === 'string' ? customValue : formatValue(customValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n\n  return formatObject(value, seenValues);\n}\n\nfunction formatObject(object, seenValues) {\n  var keys = Object.keys(object);\n\n  if (keys.length === 0) {\n    return '{}';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n\n  var properties = keys.map(function (key) {\n    var value = formatValue(object[key], seenValues);\n    return key + ': ' + value;\n  });\n  return '{ ' + properties.join(', ') + ' }';\n}\n\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n\n  var len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  var remaining = array.length - len;\n  var items = [];\n\n  for (var i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(\"... \".concat(remaining, \" more items\"));\n  }\n\n  return '[' + items.join(', ') + ']';\n}\n\nfunction getCustomFn(object) {\n  var customInspectFn = object[String(nodejsCustomInspectSymbol)];\n\n  if (typeof customInspectFn === 'function') {\n    return customInspectFn;\n  }\n\n  if (typeof object.inspect === 'function') {\n    return object.inspect;\n  }\n}\n\nfunction getObjectTag(object) {\n  var tag = Object.prototype.toString.call(object).replace(/^\\[object /, '').replace(/]$/, '');\n\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    var name = object.constructor.name;\n\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n\n  return tag;\n}\n","import invariant from \"./invariant.mjs\";\nimport nodejsCustomInspectSymbol from \"./nodejsCustomInspectSymbol.mjs\";\n/**\n * The `defineInspect()` function defines `inspect()` prototype method as alias of `toJSON`\n */\n\nexport default function defineInspect(classObject) {\n  var fn = classObject.prototype.toJSON;\n  typeof fn === 'function' || invariant(0);\n  classObject.prototype.inspect = fn; // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\n  if (nodejsCustomInspectSymbol) {\n    classObject.prototype[nodejsCustomInspectSymbol] = fn;\n  }\n}\n","export default function invariant(condition, message) {\n  var booleanCondition = Boolean(condition); // istanbul ignore else (See transformation done in './resources/inlineInvariant.js')\n\n  if (!booleanCondition) {\n    throw new Error(message != null ? message : 'Unexpected invariant triggered.');\n  }\n}\n","import defineInspect from \"../jsutils/defineInspect.mjs\";\n\n/**\n * Contains a range of UTF-8 character offsets and token references that\n * identify the region of the source from which the AST derived.\n */\nexport var Location = /*#__PURE__*/function () {\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The Token at which this Node begins.\n   */\n\n  /**\n   * The Token at which this Node ends.\n   */\n\n  /**\n   * The Source document the AST represents.\n   */\n  function Location(startToken, endToken, source) {\n    this.start = startToken.start;\n    this.end = endToken.end;\n    this.startToken = startToken;\n    this.endToken = endToken;\n    this.source = source;\n  }\n\n  var _proto = Location.prototype;\n\n  _proto.toJSON = function toJSON() {\n    return {\n      start: this.start,\n      end: this.end\n    };\n  };\n\n  return Location;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(Location);\n/**\n * Represents a range of characters represented by a lexical token\n * within a Source.\n */\n\nexport var Token = /*#__PURE__*/function () {\n  /**\n   * The kind of Token.\n   */\n\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The 1-indexed line number on which this Token appears.\n   */\n\n  /**\n   * The 1-indexed column number at which this Token begins.\n   */\n\n  /**\n   * For non-punctuation tokens, represents the interpreted value of the token.\n   */\n\n  /**\n   * Tokens exist as nodes in a double-linked-list amongst all tokens\n   * including ignored tokens. <SOF> is always the first node and <EOF>\n   * the last.\n   */\n  function Token(kind, start, end, line, column, prev, value) {\n    this.kind = kind;\n    this.start = start;\n    this.end = end;\n    this.line = line;\n    this.column = column;\n    this.value = value;\n    this.prev = prev;\n    this.next = null;\n  }\n\n  var _proto2 = Token.prototype;\n\n  _proto2.toJSON = function toJSON() {\n    return {\n      kind: this.kind,\n      value: this.value,\n      line: this.line,\n      column: this.column\n    };\n  };\n\n  return Token;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(Token);\n/**\n * @internal\n */\n\nexport function isNode(maybeNode) {\n  return maybeNode != null && typeof maybeNode.kind === 'string';\n}\n/**\n * The list of all possible AST node types.\n */\n","import inspect from \"../jsutils/inspect.mjs\";\nimport { isNode } from \"./ast.mjs\";\n/**\n * A visitor is provided to visit, it contains the collection of\n * relevant functions to be called during the visitor's traversal.\n */\n\nexport var QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: ['name', 'variableDefinitions', 'directives', 'selectionSet'],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: ['name', // Note: fragment variable definitions are experimental and may be changed\n  // or removed in the future.\n  'variableDefinitions', 'typeCondition', 'directives', 'selectionSet'],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['description', 'directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: ['description', 'name', 'type', 'defaultValue', 'directives'],\n  InterfaceTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields']\n};\nexport var BREAK = Object.freeze({});\n/**\n * visit() will walk through an AST using a depth first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n *     const editedAST = visit(ast, {\n *       enter(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: skip visiting this node\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       },\n *       leave(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: no action\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       }\n *     });\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to four permutations of\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node a specific kind.\n *\n *     visit(ast, {\n *       Kind(node) {\n *         // enter the \"Kind\" node\n *       }\n *     })\n *\n * 2) Named visitors that trigger upon entering and leaving a node of\n *    a specific kind.\n *\n *     visit(ast, {\n *       Kind: {\n *         enter(node) {\n *           // enter the \"Kind\" node\n *         }\n *         leave(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n *     visit(ast, {\n *       enter(node) {\n *         // enter any node\n *       },\n *       leave(node) {\n *         // leave any node\n *       }\n *     })\n *\n * 4) Parallel visitors for entering and leaving nodes of a specific kind.\n *\n *     visit(ast, {\n *       enter: {\n *         Kind(node) {\n *           // enter the \"Kind\" node\n *         }\n *       },\n *       leave: {\n *         Kind(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n */\n\nexport function visit(root, visitor) {\n  var visitorKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : QueryDocumentKeys;\n\n  /* eslint-disable no-undef-init */\n  var stack = undefined;\n  var inArray = Array.isArray(root);\n  var keys = [root];\n  var index = -1;\n  var edits = [];\n  var node = undefined;\n  var key = undefined;\n  var parent = undefined;\n  var path = [];\n  var ancestors = [];\n  var newRoot = root;\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    var isLeaving = index === keys.length;\n    var isEdited = isLeaving && edits.length !== 0;\n\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n        } else {\n          var clone = {};\n\n          for (var _i2 = 0, _Object$keys2 = Object.keys(node); _i2 < _Object$keys2.length; _i2++) {\n            var k = _Object$keys2[_i2];\n            clone[k] = node[k];\n          }\n\n          node = clone;\n        }\n\n        var editOffset = 0;\n\n        for (var ii = 0; ii < edits.length; ii++) {\n          var editKey = edits[ii][0];\n          var editValue = edits[ii][1];\n\n          if (inArray) {\n            editKey -= editOffset;\n          }\n\n          if (inArray && editValue === null) {\n            node.splice(editKey, 1);\n            editOffset++;\n          } else {\n            node[editKey] = editValue;\n          }\n        }\n      }\n\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else {\n      key = parent ? inArray ? index : keys[index] : undefined;\n      node = parent ? parent[key] : newRoot;\n\n      if (node === null || node === undefined) {\n        continue;\n      }\n\n      if (parent) {\n        path.push(key);\n      }\n    }\n\n    var result = void 0;\n\n    if (!Array.isArray(node)) {\n      if (!isNode(node)) {\n        throw new Error(\"Invalid AST Node: \".concat(inspect(node), \".\"));\n      }\n\n      var visitFn = getVisitFn(visitor, node.kind, isLeaving);\n\n      if (visitFn) {\n        result = visitFn.call(visitor, node, key, parent, path, ancestors);\n\n        if (result === BREAK) {\n          break;\n        }\n\n        if (result === false) {\n          if (!isLeaving) {\n            path.pop();\n            continue;\n          }\n        } else if (result !== undefined) {\n          edits.push([key, result]);\n\n          if (!isLeaving) {\n            if (isNode(result)) {\n              node = result;\n            } else {\n              path.pop();\n              continue;\n            }\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      var _visitorKeys$node$kin;\n\n      stack = {\n        inArray: inArray,\n        index: index,\n        keys: keys,\n        edits: edits,\n        prev: stack\n      };\n      inArray = Array.isArray(node);\n      keys = inArray ? node : (_visitorKeys$node$kin = visitorKeys[node.kind]) !== null && _visitorKeys$node$kin !== void 0 ? _visitorKeys$node$kin : [];\n      index = -1;\n      edits = [];\n\n      if (parent) {\n        ancestors.push(parent);\n      }\n\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    newRoot = edits[edits.length - 1][1];\n  }\n\n  return newRoot;\n}\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\n\nexport function visitInParallel(visitors) {\n  var skipping = new Array(visitors.length);\n  return {\n    enter: function enter(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (skipping[i] == null) {\n          var fn = getVisitFn(visitors[i], node.kind,\n          /* isLeaving */\n          false);\n\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      }\n    },\n    leave: function leave(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (skipping[i] == null) {\n          var fn = getVisitFn(visitors[i], node.kind,\n          /* isLeaving */\n          true);\n\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          }\n        } else if (skipping[i] === node) {\n          skipping[i] = null;\n        }\n      }\n    }\n  };\n}\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n */\n\nexport function getVisitFn(visitor, kind, isLeaving) {\n  var kindVisitor = visitor[kind];\n\n  if (kindVisitor) {\n    if (!isLeaving && typeof kindVisitor === 'function') {\n      // { Kind() {} }\n      return kindVisitor;\n    }\n\n    var kindSpecificVisitor = isLeaving ? kindVisitor.leave : kindVisitor.enter;\n\n    if (typeof kindSpecificVisitor === 'function') {\n      // { Kind: { enter() {}, leave() {} } }\n      return kindSpecificVisitor;\n    }\n  } else {\n    var specificVisitor = isLeaving ? visitor.leave : visitor.enter;\n\n    if (specificVisitor) {\n      if (typeof specificVisitor === 'function') {\n        // { enter() {}, leave() {} }\n        return specificVisitor;\n      }\n\n      var specificKindVisitor = specificVisitor[kind];\n\n      if (typeof specificKindVisitor === 'function') {\n        // { enter: { Kind() {} }, leave: { Kind() {} } }\n        return specificKindVisitor;\n      }\n    }\n  }\n}\n","import { __extends } from 'tslib';\n\nvar genericMessage = \"Invariant Violation\";\r\nvar _a = Object.setPrototypeOf, setPrototypeOf = _a === void 0 ? function (obj, proto) {\r\n    obj.__proto__ = proto;\r\n    return obj;\r\n} : _a;\r\nvar InvariantError = /** @class */ (function (_super) {\r\n    __extends(InvariantError, _super);\r\n    function InvariantError(message) {\r\n        if (message === void 0) { message = genericMessage; }\r\n        var _this = _super.call(this, typeof message === \"number\"\r\n            ? genericMessage + \": \" + message + \" (see https://github.com/apollographql/invariant-packages)\"\r\n            : message) || this;\r\n        _this.framesToPop = 1;\r\n        _this.name = genericMessage;\r\n        setPrototypeOf(_this, InvariantError.prototype);\r\n        return _this;\r\n    }\r\n    return InvariantError;\r\n}(Error));\r\nfunction invariant(condition, message) {\r\n    if (!condition) {\r\n        throw new InvariantError(message);\r\n    }\r\n}\r\nfunction wrapConsoleMethod(method) {\r\n    return function () {\r\n        return console[method].apply(console, arguments);\r\n    };\r\n}\r\n(function (invariant) {\r\n    invariant.warn = wrapConsoleMethod(\"warn\");\r\n    invariant.error = wrapConsoleMethod(\"error\");\r\n})(invariant || (invariant = {}));\r\n// Code that uses ts-invariant with rollup-plugin-invariant may want to\r\n// import this process stub to avoid errors evaluating process.env.NODE_ENV.\r\n// However, because most ESM-to-CJS compilers will rewrite the process import\r\n// as tsInvariant.process, which prevents proper replacement by minifiers, we\r\n// also attempt to define the stub globally when it is not already defined.\r\nvar processStub = { env: {} };\r\nif (typeof process === \"object\") {\r\n    processStub = process;\r\n}\r\nelse\r\n    try {\r\n        // Using Function to evaluate this assignment in global scope also escapes\r\n        // the strict mode of the current module, thereby allowing the assignment.\r\n        // Inspired by https://github.com/facebook/regenerator/pull/369.\r\n        Function(\"stub\", \"process = stub\")(processStub);\r\n    }\r\n    catch (atLeastWeTried) {\r\n        // The assignment can fail if a Content Security Policy heavy-handedly\r\n        // forbids Function usage. In those environments, developers should take\r\n        // extra care to replace process.env.NODE_ENV in their production builds,\r\n        // or define an appropriate global.process polyfill.\r\n    }\r\nvar invariant$1 = invariant;\n\nexport default invariant$1;\nexport { InvariantError, invariant, processStub as process };\n//# sourceMappingURL=invariant.esm.js.map\n","export default void 0","'use strict';\n\nmodule.exports = function (data, opts) {\n    if (!opts) opts = {};\n    if (typeof opts === 'function') opts = { cmp: opts };\n    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;\n\n    var cmp = opts.cmp && (function (f) {\n        return function (node) {\n            return function (a, b) {\n                var aobj = { key: a, value: node[a] };\n                var bobj = { key: b, value: node[b] };\n                return f(aobj, bobj);\n            };\n        };\n    })(opts.cmp);\n\n    var seen = [];\n    return (function stringify (node) {\n        if (node && node.toJSON && typeof node.toJSON === 'function') {\n            node = node.toJSON();\n        }\n\n        if (node === undefined) return;\n        if (typeof node == 'number') return isFinite(node) ? '' + node : 'null';\n        if (typeof node !== 'object') return JSON.stringify(node);\n\n        var i, out;\n        if (Array.isArray(node)) {\n            out = '[';\n            for (i = 0; i < node.length; i++) {\n                if (i) out += ',';\n                out += stringify(node[i]) || 'null';\n            }\n            return out + ']';\n        }\n\n        if (node === null) return 'null';\n\n        if (seen.indexOf(node) !== -1) {\n            if (cycles) return JSON.stringify('__cycle__');\n            throw new TypeError('Converting circular structure to JSON');\n        }\n\n        var seenIndex = seen.push(node) - 1;\n        var keys = Object.keys(node).sort(cmp && cmp(node));\n        out = '';\n        for (i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            var value = stringify(node[key]);\n\n            if (!value) continue;\n            if (out) out += ',';\n            out += JSON.stringify(key) + ':' + value;\n        }\n        seen.splice(seenIndex, 1);\n        return '{' + out + '}';\n    })(data);\n};\n","var _a = Object.prototype, toString = _a.toString, hasOwnProperty = _a.hasOwnProperty;\r\nvar previousComparisons = new Map();\r\n/**\r\n * Performs a deep equality check on two JavaScript values, tolerating cycles.\r\n */\r\nfunction equal(a, b) {\r\n    try {\r\n        return check(a, b);\r\n    }\r\n    finally {\r\n        previousComparisons.clear();\r\n    }\r\n}\r\nfunction check(a, b) {\r\n    // If the two values are strictly equal, our job is easy.\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    // Object.prototype.toString returns a representation of the runtime type of\r\n    // the given value that is considerably more precise than typeof.\r\n    var aTag = toString.call(a);\r\n    var bTag = toString.call(b);\r\n    // If the runtime types of a and b are different, they could maybe be equal\r\n    // under some interpretation of equality, but for simplicity and performance\r\n    // we just return false instead.\r\n    if (aTag !== bTag) {\r\n        return false;\r\n    }\r\n    switch (aTag) {\r\n        case '[object Array]':\r\n            // Arrays are a lot like other objects, but we can cheaply compare their\r\n            // lengths as a short-cut before comparing their elements.\r\n            if (a.length !== b.length)\r\n                return false;\r\n        // Fall through to object case...\r\n        case '[object Object]': {\r\n            if (previouslyCompared(a, b))\r\n                return true;\r\n            var aKeys = Object.keys(a);\r\n            var bKeys = Object.keys(b);\r\n            // If `a` and `b` have a different number of enumerable keys, they\r\n            // must be different.\r\n            var keyCount = aKeys.length;\r\n            if (keyCount !== bKeys.length)\r\n                return false;\r\n            // Now make sure they have the same keys.\r\n            for (var k = 0; k < keyCount; ++k) {\r\n                if (!hasOwnProperty.call(b, aKeys[k])) {\r\n                    return false;\r\n                }\r\n            }\r\n            // Finally, check deep equality of all child properties.\r\n            for (var k = 0; k < keyCount; ++k) {\r\n                var key = aKeys[k];\r\n                if (!check(a[key], b[key])) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        case '[object Error]':\r\n            return a.name === b.name && a.message === b.message;\r\n        case '[object Number]':\r\n            // Handle NaN, which is !== itself.\r\n            if (a !== a)\r\n                return b !== b;\r\n        // Fall through to shared +a === +b case...\r\n        case '[object Boolean]':\r\n        case '[object Date]':\r\n            return +a === +b;\r\n        case '[object RegExp]':\r\n        case '[object String]':\r\n            return a == \"\" + b;\r\n        case '[object Map]':\r\n        case '[object Set]': {\r\n            if (a.size !== b.size)\r\n                return false;\r\n            if (previouslyCompared(a, b))\r\n                return true;\r\n            var aIterator = a.entries();\r\n            var isMap = aTag === '[object Map]';\r\n            while (true) {\r\n                var info = aIterator.next();\r\n                if (info.done)\r\n                    break;\r\n                // If a instanceof Set, aValue === aKey.\r\n                var _a = info.value, aKey = _a[0], aValue = _a[1];\r\n                // So this works the same way for both Set and Map.\r\n                if (!b.has(aKey)) {\r\n                    return false;\r\n                }\r\n                // However, we care about deep equality of values only when dealing\r\n                // with Map structures.\r\n                if (isMap && !check(aValue, b.get(aKey))) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n    // Otherwise the values are not equal.\r\n    return false;\r\n}\r\nfunction previouslyCompared(a, b) {\r\n    // Though cyclic references can make an object graph appear infinite from the\r\n    // perspective of a depth-first traversal, the graph still contains a finite\r\n    // number of distinct object references. We use the previousComparisons cache\r\n    // to avoid comparing the same pair of object references more than once, which\r\n    // guarantees termination (even if we end up comparing every object in one\r\n    // graph to every object in the other graph, which is extremely unlikely),\r\n    // while still allowing weird isomorphic structures (like rings with different\r\n    // lengths) a chance to pass the equality test.\r\n    var bSet = previousComparisons.get(a);\r\n    if (bSet) {\r\n        // Return true here because we can be sure false will be returned somewhere\r\n        // else if the objects are not equivalent.\r\n        if (bSet.has(b))\r\n            return true;\r\n    }\r\n    else {\r\n        previousComparisons.set(a, bSet = new Set);\r\n    }\r\n    bSet.add(b);\r\n    return false;\r\n}\n\nexport default equal;\nexport { equal };\n//# sourceMappingURL=equality.esm.js.map\n","import { visit } from 'graphql/language/visitor';\nimport { InvariantError, invariant } from 'ts-invariant';\nimport { __assign, __spreadArrays } from 'tslib';\nimport stringify from 'fast-json-stable-stringify';\nexport { equal as isEqual } from '@wry/equality';\n\nfunction isScalarValue(value) {\n    return ['StringValue', 'BooleanValue', 'EnumValue'].indexOf(value.kind) > -1;\n}\nfunction isNumberValue(value) {\n    return ['IntValue', 'FloatValue'].indexOf(value.kind) > -1;\n}\nfunction isStringValue(value) {\n    return value.kind === 'StringValue';\n}\nfunction isBooleanValue(value) {\n    return value.kind === 'BooleanValue';\n}\nfunction isIntValue(value) {\n    return value.kind === 'IntValue';\n}\nfunction isFloatValue(value) {\n    return value.kind === 'FloatValue';\n}\nfunction isVariable(value) {\n    return value.kind === 'Variable';\n}\nfunction isObjectValue(value) {\n    return value.kind === 'ObjectValue';\n}\nfunction isListValue(value) {\n    return value.kind === 'ListValue';\n}\nfunction isEnumValue(value) {\n    return value.kind === 'EnumValue';\n}\nfunction isNullValue(value) {\n    return value.kind === 'NullValue';\n}\nfunction valueToObjectRepresentation(argObj, name, value, variables) {\n    if (isIntValue(value) || isFloatValue(value)) {\n        argObj[name.value] = Number(value.value);\n    }\n    else if (isBooleanValue(value) || isStringValue(value)) {\n        argObj[name.value] = value.value;\n    }\n    else if (isObjectValue(value)) {\n        var nestedArgObj_1 = {};\n        value.fields.map(function (obj) {\n            return valueToObjectRepresentation(nestedArgObj_1, obj.name, obj.value, variables);\n        });\n        argObj[name.value] = nestedArgObj_1;\n    }\n    else if (isVariable(value)) {\n        var variableValue = (variables || {})[value.name.value];\n        argObj[name.value] = variableValue;\n    }\n    else if (isListValue(value)) {\n        argObj[name.value] = value.values.map(function (listValue) {\n            var nestedArgArrayObj = {};\n            valueToObjectRepresentation(nestedArgArrayObj, name, listValue, variables);\n            return nestedArgArrayObj[name.value];\n        });\n    }\n    else if (isEnumValue(value)) {\n        argObj[name.value] = value.value;\n    }\n    else if (isNullValue(value)) {\n        argObj[name.value] = null;\n    }\n    else {\n        throw process.env.NODE_ENV === \"production\" ? new InvariantError(17) : new InvariantError(\"The inline argument \\\"\" + name.value + \"\\\" of kind \\\"\" + value.kind + \"\\\"\" +\n            'is not supported. Use variables instead of inline arguments to ' +\n            'overcome this limitation.');\n    }\n}\nfunction storeKeyNameFromField(field, variables) {\n    var directivesObj = null;\n    if (field.directives) {\n        directivesObj = {};\n        field.directives.forEach(function (directive) {\n            directivesObj[directive.name.value] = {};\n            if (directive.arguments) {\n                directive.arguments.forEach(function (_a) {\n                    var name = _a.name, value = _a.value;\n                    return valueToObjectRepresentation(directivesObj[directive.name.value], name, value, variables);\n                });\n            }\n        });\n    }\n    var argObj = null;\n    if (field.arguments && field.arguments.length) {\n        argObj = {};\n        field.arguments.forEach(function (_a) {\n            var name = _a.name, value = _a.value;\n            return valueToObjectRepresentation(argObj, name, value, variables);\n        });\n    }\n    return getStoreKeyName(field.name.value, argObj, directivesObj);\n}\nvar KNOWN_DIRECTIVES = [\n    'connection',\n    'include',\n    'skip',\n    'client',\n    'rest',\n    'export',\n];\nfunction getStoreKeyName(fieldName, args, directives) {\n    if (directives &&\n        directives['connection'] &&\n        directives['connection']['key']) {\n        if (directives['connection']['filter'] &&\n            directives['connection']['filter'].length > 0) {\n            var filterKeys = directives['connection']['filter']\n                ? directives['connection']['filter']\n                : [];\n            filterKeys.sort();\n            var queryArgs_1 = args;\n            var filteredArgs_1 = {};\n            filterKeys.forEach(function (key) {\n                filteredArgs_1[key] = queryArgs_1[key];\n            });\n            return directives['connection']['key'] + \"(\" + JSON.stringify(filteredArgs_1) + \")\";\n        }\n        else {\n            return directives['connection']['key'];\n        }\n    }\n    var completeFieldName = fieldName;\n    if (args) {\n        var stringifiedArgs = stringify(args);\n        completeFieldName += \"(\" + stringifiedArgs + \")\";\n    }\n    if (directives) {\n        Object.keys(directives).forEach(function (key) {\n            if (KNOWN_DIRECTIVES.indexOf(key) !== -1)\n                return;\n            if (directives[key] && Object.keys(directives[key]).length) {\n                completeFieldName += \"@\" + key + \"(\" + JSON.stringify(directives[key]) + \")\";\n            }\n            else {\n                completeFieldName += \"@\" + key;\n            }\n        });\n    }\n    return completeFieldName;\n}\nfunction argumentsObjectFromField(field, variables) {\n    if (field.arguments && field.arguments.length) {\n        var argObj_1 = {};\n        field.arguments.forEach(function (_a) {\n            var name = _a.name, value = _a.value;\n            return valueToObjectRepresentation(argObj_1, name, value, variables);\n        });\n        return argObj_1;\n    }\n    return null;\n}\nfunction resultKeyNameFromField(field) {\n    return field.alias ? field.alias.value : field.name.value;\n}\nfunction isField(selection) {\n    return selection.kind === 'Field';\n}\nfunction isInlineFragment(selection) {\n    return selection.kind === 'InlineFragment';\n}\nfunction isIdValue(idObject) {\n    return idObject &&\n        idObject.type === 'id' &&\n        typeof idObject.generated === 'boolean';\n}\nfunction toIdValue(idConfig, generated) {\n    if (generated === void 0) { generated = false; }\n    return __assign({ type: 'id', generated: generated }, (typeof idConfig === 'string'\n        ? { id: idConfig, typename: undefined }\n        : idConfig));\n}\nfunction isJsonValue(jsonObject) {\n    return (jsonObject != null &&\n        typeof jsonObject === 'object' &&\n        jsonObject.type === 'json');\n}\nfunction defaultValueFromVariable(node) {\n    throw process.env.NODE_ENV === \"production\" ? new InvariantError(18) : new InvariantError(\"Variable nodes are not supported by valueFromNode\");\n}\nfunction valueFromNode(node, onVariable) {\n    if (onVariable === void 0) { onVariable = defaultValueFromVariable; }\n    switch (node.kind) {\n        case 'Variable':\n            return onVariable(node);\n        case 'NullValue':\n            return null;\n        case 'IntValue':\n            return parseInt(node.value, 10);\n        case 'FloatValue':\n            return parseFloat(node.value);\n        case 'ListValue':\n            return node.values.map(function (v) { return valueFromNode(v, onVariable); });\n        case 'ObjectValue': {\n            var value = {};\n            for (var _i = 0, _a = node.fields; _i < _a.length; _i++) {\n                var field = _a[_i];\n                value[field.name.value] = valueFromNode(field.value, onVariable);\n            }\n            return value;\n        }\n        default:\n            return node.value;\n    }\n}\n\nfunction getDirectiveInfoFromField(field, variables) {\n    if (field.directives && field.directives.length) {\n        var directiveObj_1 = {};\n        field.directives.forEach(function (directive) {\n            directiveObj_1[directive.name.value] = argumentsObjectFromField(directive, variables);\n        });\n        return directiveObj_1;\n    }\n    return null;\n}\nfunction shouldInclude(selection, variables) {\n    if (variables === void 0) { variables = {}; }\n    return getInclusionDirectives(selection.directives).every(function (_a) {\n        var directive = _a.directive, ifArgument = _a.ifArgument;\n        var evaledValue = false;\n        if (ifArgument.value.kind === 'Variable') {\n            evaledValue = variables[ifArgument.value.name.value];\n            process.env.NODE_ENV === \"production\" ? invariant(evaledValue !== void 0, 13) : invariant(evaledValue !== void 0, \"Invalid variable referenced in @\" + directive.name.value + \" directive.\");\n        }\n        else {\n            evaledValue = ifArgument.value.value;\n        }\n        return directive.name.value === 'skip' ? !evaledValue : evaledValue;\n    });\n}\nfunction getDirectiveNames(doc) {\n    var names = [];\n    visit(doc, {\n        Directive: function (node) {\n            names.push(node.name.value);\n        },\n    });\n    return names;\n}\nfunction hasDirectives(names, doc) {\n    return getDirectiveNames(doc).some(function (name) { return names.indexOf(name) > -1; });\n}\nfunction hasClientExports(document) {\n    return (document &&\n        hasDirectives(['client'], document) &&\n        hasDirectives(['export'], document));\n}\nfunction isInclusionDirective(_a) {\n    var value = _a.name.value;\n    return value === 'skip' || value === 'include';\n}\nfunction getInclusionDirectives(directives) {\n    return directives ? directives.filter(isInclusionDirective).map(function (directive) {\n        var directiveArguments = directive.arguments;\n        var directiveName = directive.name.value;\n        process.env.NODE_ENV === \"production\" ? invariant(directiveArguments && directiveArguments.length === 1, 14) : invariant(directiveArguments && directiveArguments.length === 1, \"Incorrect number of arguments for the @\" + directiveName + \" directive.\");\n        var ifArgument = directiveArguments[0];\n        process.env.NODE_ENV === \"production\" ? invariant(ifArgument.name && ifArgument.name.value === 'if', 15) : invariant(ifArgument.name && ifArgument.name.value === 'if', \"Invalid argument for the @\" + directiveName + \" directive.\");\n        var ifValue = ifArgument.value;\n        process.env.NODE_ENV === \"production\" ? invariant(ifValue &&\n            (ifValue.kind === 'Variable' || ifValue.kind === 'BooleanValue'), 16) : invariant(ifValue &&\n            (ifValue.kind === 'Variable' || ifValue.kind === 'BooleanValue'), \"Argument for the @\" + directiveName + \" directive must be a variable or a boolean value.\");\n        return { directive: directive, ifArgument: ifArgument };\n    }) : [];\n}\n\nfunction getFragmentQueryDocument(document, fragmentName) {\n    var actualFragmentName = fragmentName;\n    var fragments = [];\n    document.definitions.forEach(function (definition) {\n        if (definition.kind === 'OperationDefinition') {\n            throw process.env.NODE_ENV === \"production\" ? new InvariantError(11) : new InvariantError(\"Found a \" + definition.operation + \" operation\" + (definition.name ? \" named '\" + definition.name.value + \"'\" : '') + \". \" +\n                'No operations are allowed when using a fragment as a query. Only fragments are allowed.');\n        }\n        if (definition.kind === 'FragmentDefinition') {\n            fragments.push(definition);\n        }\n    });\n    if (typeof actualFragmentName === 'undefined') {\n        process.env.NODE_ENV === \"production\" ? invariant(fragments.length === 1, 12) : invariant(fragments.length === 1, \"Found \" + fragments.length + \" fragments. `fragmentName` must be provided when there is not exactly 1 fragment.\");\n        actualFragmentName = fragments[0].name.value;\n    }\n    var query = __assign(__assign({}, document), { definitions: __spreadArrays([\n            {\n                kind: 'OperationDefinition',\n                operation: 'query',\n                selectionSet: {\n                    kind: 'SelectionSet',\n                    selections: [\n                        {\n                            kind: 'FragmentSpread',\n                            name: {\n                                kind: 'Name',\n                                value: actualFragmentName,\n                            },\n                        },\n                    ],\n                },\n            }\n        ], document.definitions) });\n    return query;\n}\n\nfunction assign(target) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    sources.forEach(function (source) {\n        if (typeof source === 'undefined' || source === null) {\n            return;\n        }\n        Object.keys(source).forEach(function (key) {\n            target[key] = source[key];\n        });\n    });\n    return target;\n}\n\nfunction getMutationDefinition(doc) {\n    checkDocument(doc);\n    var mutationDef = doc.definitions.filter(function (definition) {\n        return definition.kind === 'OperationDefinition' &&\n            definition.operation === 'mutation';\n    })[0];\n    process.env.NODE_ENV === \"production\" ? invariant(mutationDef, 1) : invariant(mutationDef, 'Must contain a mutation definition.');\n    return mutationDef;\n}\nfunction checkDocument(doc) {\n    process.env.NODE_ENV === \"production\" ? invariant(doc && doc.kind === 'Document', 2) : invariant(doc && doc.kind === 'Document', \"Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \\\"gql\\\" tag? http://docs.apollostack.com/apollo-client/core.html#gql\");\n    var operations = doc.definitions\n        .filter(function (d) { return d.kind !== 'FragmentDefinition'; })\n        .map(function (definition) {\n        if (definition.kind !== 'OperationDefinition') {\n            throw process.env.NODE_ENV === \"production\" ? new InvariantError(3) : new InvariantError(\"Schema type definitions not allowed in queries. Found: \\\"\" + definition.kind + \"\\\"\");\n        }\n        return definition;\n    });\n    process.env.NODE_ENV === \"production\" ? invariant(operations.length <= 1, 4) : invariant(operations.length <= 1, \"Ambiguous GraphQL document: contains \" + operations.length + \" operations\");\n    return doc;\n}\nfunction getOperationDefinition(doc) {\n    checkDocument(doc);\n    return doc.definitions.filter(function (definition) { return definition.kind === 'OperationDefinition'; })[0];\n}\nfunction getOperationDefinitionOrDie(document) {\n    var def = getOperationDefinition(document);\n    process.env.NODE_ENV === \"production\" ? invariant(def, 5) : invariant(def, \"GraphQL document is missing an operation\");\n    return def;\n}\nfunction getOperationName(doc) {\n    return (doc.definitions\n        .filter(function (definition) {\n        return definition.kind === 'OperationDefinition' && definition.name;\n    })\n        .map(function (x) { return x.name.value; })[0] || null);\n}\nfunction getFragmentDefinitions(doc) {\n    return doc.definitions.filter(function (definition) { return definition.kind === 'FragmentDefinition'; });\n}\nfunction getQueryDefinition(doc) {\n    var queryDef = getOperationDefinition(doc);\n    process.env.NODE_ENV === \"production\" ? invariant(queryDef && queryDef.operation === 'query', 6) : invariant(queryDef && queryDef.operation === 'query', 'Must contain a query definition.');\n    return queryDef;\n}\nfunction getFragmentDefinition(doc) {\n    process.env.NODE_ENV === \"production\" ? invariant(doc.kind === 'Document', 7) : invariant(doc.kind === 'Document', \"Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \\\"gql\\\" tag? http://docs.apollostack.com/apollo-client/core.html#gql\");\n    process.env.NODE_ENV === \"production\" ? invariant(doc.definitions.length <= 1, 8) : invariant(doc.definitions.length <= 1, 'Fragment must have exactly one definition.');\n    var fragmentDef = doc.definitions[0];\n    process.env.NODE_ENV === \"production\" ? invariant(fragmentDef.kind === 'FragmentDefinition', 9) : invariant(fragmentDef.kind === 'FragmentDefinition', 'Must be a fragment definition.');\n    return fragmentDef;\n}\nfunction getMainDefinition(queryDoc) {\n    checkDocument(queryDoc);\n    var fragmentDefinition;\n    for (var _i = 0, _a = queryDoc.definitions; _i < _a.length; _i++) {\n        var definition = _a[_i];\n        if (definition.kind === 'OperationDefinition') {\n            var operation = definition.operation;\n            if (operation === 'query' ||\n                operation === 'mutation' ||\n                operation === 'subscription') {\n                return definition;\n            }\n        }\n        if (definition.kind === 'FragmentDefinition' && !fragmentDefinition) {\n            fragmentDefinition = definition;\n        }\n    }\n    if (fragmentDefinition) {\n        return fragmentDefinition;\n    }\n    throw process.env.NODE_ENV === \"production\" ? new InvariantError(10) : new InvariantError('Expected a parsed GraphQL query with a query, mutation, subscription, or a fragment.');\n}\nfunction createFragmentMap(fragments) {\n    if (fragments === void 0) { fragments = []; }\n    var symTable = {};\n    fragments.forEach(function (fragment) {\n        symTable[fragment.name.value] = fragment;\n    });\n    return symTable;\n}\nfunction getDefaultValues(definition) {\n    if (definition &&\n        definition.variableDefinitions &&\n        definition.variableDefinitions.length) {\n        var defaultValues = definition.variableDefinitions\n            .filter(function (_a) {\n            var defaultValue = _a.defaultValue;\n            return defaultValue;\n        })\n            .map(function (_a) {\n            var variable = _a.variable, defaultValue = _a.defaultValue;\n            var defaultValueObj = {};\n            valueToObjectRepresentation(defaultValueObj, variable.name, defaultValue);\n            return defaultValueObj;\n        });\n        return assign.apply(void 0, __spreadArrays([{}], defaultValues));\n    }\n    return {};\n}\nfunction variablesInOperation(operation) {\n    var names = new Set();\n    if (operation.variableDefinitions) {\n        for (var _i = 0, _a = operation.variableDefinitions; _i < _a.length; _i++) {\n            var definition = _a[_i];\n            names.add(definition.variable.name.value);\n        }\n    }\n    return names;\n}\n\nfunction filterInPlace(array, test, context) {\n    var target = 0;\n    array.forEach(function (elem, i) {\n        if (test.call(this, elem, i, array)) {\n            array[target++] = elem;\n        }\n    }, context);\n    array.length = target;\n    return array;\n}\n\nvar TYPENAME_FIELD = {\n    kind: 'Field',\n    name: {\n        kind: 'Name',\n        value: '__typename',\n    },\n};\nfunction isEmpty(op, fragments) {\n    return op.selectionSet.selections.every(function (selection) {\n        return selection.kind === 'FragmentSpread' &&\n            isEmpty(fragments[selection.name.value], fragments);\n    });\n}\nfunction nullIfDocIsEmpty(doc) {\n    return isEmpty(getOperationDefinition(doc) || getFragmentDefinition(doc), createFragmentMap(getFragmentDefinitions(doc)))\n        ? null\n        : doc;\n}\nfunction getDirectiveMatcher(directives) {\n    return function directiveMatcher(directive) {\n        return directives.some(function (dir) {\n            return (dir.name && dir.name === directive.name.value) ||\n                (dir.test && dir.test(directive));\n        });\n    };\n}\nfunction removeDirectivesFromDocument(directives, doc) {\n    var variablesInUse = Object.create(null);\n    var variablesToRemove = [];\n    var fragmentSpreadsInUse = Object.create(null);\n    var fragmentSpreadsToRemove = [];\n    var modifiedDoc = nullIfDocIsEmpty(visit(doc, {\n        Variable: {\n            enter: function (node, _key, parent) {\n                if (parent.kind !== 'VariableDefinition') {\n                    variablesInUse[node.name.value] = true;\n                }\n            },\n        },\n        Field: {\n            enter: function (node) {\n                if (directives && node.directives) {\n                    var shouldRemoveField = directives.some(function (directive) { return directive.remove; });\n                    if (shouldRemoveField &&\n                        node.directives &&\n                        node.directives.some(getDirectiveMatcher(directives))) {\n                        if (node.arguments) {\n                            node.arguments.forEach(function (arg) {\n                                if (arg.value.kind === 'Variable') {\n                                    variablesToRemove.push({\n                                        name: arg.value.name.value,\n                                    });\n                                }\n                            });\n                        }\n                        if (node.selectionSet) {\n                            getAllFragmentSpreadsFromSelectionSet(node.selectionSet).forEach(function (frag) {\n                                fragmentSpreadsToRemove.push({\n                                    name: frag.name.value,\n                                });\n                            });\n                        }\n                        return null;\n                    }\n                }\n            },\n        },\n        FragmentSpread: {\n            enter: function (node) {\n                fragmentSpreadsInUse[node.name.value] = true;\n            },\n        },\n        Directive: {\n            enter: function (node) {\n                if (getDirectiveMatcher(directives)(node)) {\n                    return null;\n                }\n            },\n        },\n    }));\n    if (modifiedDoc &&\n        filterInPlace(variablesToRemove, function (v) { return !variablesInUse[v.name]; }).length) {\n        modifiedDoc = removeArgumentsFromDocument(variablesToRemove, modifiedDoc);\n    }\n    if (modifiedDoc &&\n        filterInPlace(fragmentSpreadsToRemove, function (fs) { return !fragmentSpreadsInUse[fs.name]; })\n            .length) {\n        modifiedDoc = removeFragmentSpreadFromDocument(fragmentSpreadsToRemove, modifiedDoc);\n    }\n    return modifiedDoc;\n}\nfunction addTypenameToDocument(doc) {\n    return visit(checkDocument(doc), {\n        SelectionSet: {\n            enter: function (node, _key, parent) {\n                if (parent &&\n                    parent.kind === 'OperationDefinition') {\n                    return;\n                }\n                var selections = node.selections;\n                if (!selections) {\n                    return;\n                }\n                var skip = selections.some(function (selection) {\n                    return (isField(selection) &&\n                        (selection.name.value === '__typename' ||\n                            selection.name.value.lastIndexOf('__', 0) === 0));\n                });\n                if (skip) {\n                    return;\n                }\n                var field = parent;\n                if (isField(field) &&\n                    field.directives &&\n                    field.directives.some(function (d) { return d.name.value === 'export'; })) {\n                    return;\n                }\n                return __assign(__assign({}, node), { selections: __spreadArrays(selections, [TYPENAME_FIELD]) });\n            },\n        },\n    });\n}\nvar connectionRemoveConfig = {\n    test: function (directive) {\n        var willRemove = directive.name.value === 'connection';\n        if (willRemove) {\n            if (!directive.arguments ||\n                !directive.arguments.some(function (arg) { return arg.name.value === 'key'; })) {\n                process.env.NODE_ENV === \"production\" || invariant.warn('Removing an @connection directive even though it does not have a key. ' +\n                    'You may want to use the key parameter to specify a store key.');\n            }\n        }\n        return willRemove;\n    },\n};\nfunction removeConnectionDirectiveFromDocument(doc) {\n    return removeDirectivesFromDocument([connectionRemoveConfig], checkDocument(doc));\n}\nfunction hasDirectivesInSelectionSet(directives, selectionSet, nestedCheck) {\n    if (nestedCheck === void 0) { nestedCheck = true; }\n    return (selectionSet &&\n        selectionSet.selections &&\n        selectionSet.selections.some(function (selection) {\n            return hasDirectivesInSelection(directives, selection, nestedCheck);\n        }));\n}\nfunction hasDirectivesInSelection(directives, selection, nestedCheck) {\n    if (nestedCheck === void 0) { nestedCheck = true; }\n    if (!isField(selection)) {\n        return true;\n    }\n    if (!selection.directives) {\n        return false;\n    }\n    return (selection.directives.some(getDirectiveMatcher(directives)) ||\n        (nestedCheck &&\n            hasDirectivesInSelectionSet(directives, selection.selectionSet, nestedCheck)));\n}\nfunction getDirectivesFromDocument(directives, doc) {\n    checkDocument(doc);\n    var parentPath;\n    return nullIfDocIsEmpty(visit(doc, {\n        SelectionSet: {\n            enter: function (node, _key, _parent, path) {\n                var currentPath = path.join('-');\n                if (!parentPath ||\n                    currentPath === parentPath ||\n                    !currentPath.startsWith(parentPath)) {\n                    if (node.selections) {\n                        var selectionsWithDirectives = node.selections.filter(function (selection) { return hasDirectivesInSelection(directives, selection); });\n                        if (hasDirectivesInSelectionSet(directives, node, false)) {\n                            parentPath = currentPath;\n                        }\n                        return __assign(__assign({}, node), { selections: selectionsWithDirectives });\n                    }\n                    else {\n                        return null;\n                    }\n                }\n            },\n        },\n    }));\n}\nfunction getArgumentMatcher(config) {\n    return function argumentMatcher(argument) {\n        return config.some(function (aConfig) {\n            return argument.value &&\n                argument.value.kind === 'Variable' &&\n                argument.value.name &&\n                (aConfig.name === argument.value.name.value ||\n                    (aConfig.test && aConfig.test(argument)));\n        });\n    };\n}\nfunction removeArgumentsFromDocument(config, doc) {\n    var argMatcher = getArgumentMatcher(config);\n    return nullIfDocIsEmpty(visit(doc, {\n        OperationDefinition: {\n            enter: function (node) {\n                return __assign(__assign({}, node), { variableDefinitions: node.variableDefinitions.filter(function (varDef) {\n                        return !config.some(function (arg) { return arg.name === varDef.variable.name.value; });\n                    }) });\n            },\n        },\n        Field: {\n            enter: function (node) {\n                var shouldRemoveField = config.some(function (argConfig) { return argConfig.remove; });\n                if (shouldRemoveField) {\n                    var argMatchCount_1 = 0;\n                    node.arguments.forEach(function (arg) {\n                        if (argMatcher(arg)) {\n                            argMatchCount_1 += 1;\n                        }\n                    });\n                    if (argMatchCount_1 === 1) {\n                        return null;\n                    }\n                }\n            },\n        },\n        Argument: {\n            enter: function (node) {\n                if (argMatcher(node)) {\n                    return null;\n                }\n            },\n        },\n    }));\n}\nfunction removeFragmentSpreadFromDocument(config, doc) {\n    function enter(node) {\n        if (config.some(function (def) { return def.name === node.name.value; })) {\n            return null;\n        }\n    }\n    return nullIfDocIsEmpty(visit(doc, {\n        FragmentSpread: { enter: enter },\n        FragmentDefinition: { enter: enter },\n    }));\n}\nfunction getAllFragmentSpreadsFromSelectionSet(selectionSet) {\n    var allFragments = [];\n    selectionSet.selections.forEach(function (selection) {\n        if ((isField(selection) || isInlineFragment(selection)) &&\n            selection.selectionSet) {\n            getAllFragmentSpreadsFromSelectionSet(selection.selectionSet).forEach(function (frag) { return allFragments.push(frag); });\n        }\n        else if (selection.kind === 'FragmentSpread') {\n            allFragments.push(selection);\n        }\n    });\n    return allFragments;\n}\nfunction buildQueryFromSelectionSet(document) {\n    var definition = getMainDefinition(document);\n    var definitionOperation = definition.operation;\n    if (definitionOperation === 'query') {\n        return document;\n    }\n    var modifiedDoc = visit(document, {\n        OperationDefinition: {\n            enter: function (node) {\n                return __assign(__assign({}, node), { operation: 'query' });\n            },\n        },\n    });\n    return modifiedDoc;\n}\nfunction removeClientSetsFromDocument(document) {\n    checkDocument(document);\n    var modifiedDoc = removeDirectivesFromDocument([\n        {\n            test: function (directive) { return directive.name.value === 'client'; },\n            remove: true,\n        },\n    ], document);\n    if (modifiedDoc) {\n        modifiedDoc = visit(modifiedDoc, {\n            FragmentDefinition: {\n                enter: function (node) {\n                    if (node.selectionSet) {\n                        var isTypenameOnly = node.selectionSet.selections.every(function (selection) {\n                            return isField(selection) && selection.name.value === '__typename';\n                        });\n                        if (isTypenameOnly) {\n                            return null;\n                        }\n                    }\n                },\n            },\n        });\n    }\n    return modifiedDoc;\n}\n\nvar canUseWeakMap = typeof WeakMap === 'function' && !(typeof navigator === 'object' &&\n    navigator.product === 'ReactNative');\n\nvar toString = Object.prototype.toString;\nfunction cloneDeep(value) {\n    return cloneDeepHelper(value, new Map());\n}\nfunction cloneDeepHelper(val, seen) {\n    switch (toString.call(val)) {\n        case \"[object Array]\": {\n            if (seen.has(val))\n                return seen.get(val);\n            var copy_1 = val.slice(0);\n            seen.set(val, copy_1);\n            copy_1.forEach(function (child, i) {\n                copy_1[i] = cloneDeepHelper(child, seen);\n            });\n            return copy_1;\n        }\n        case \"[object Object]\": {\n            if (seen.has(val))\n                return seen.get(val);\n            var copy_2 = Object.create(Object.getPrototypeOf(val));\n            seen.set(val, copy_2);\n            Object.keys(val).forEach(function (key) {\n                copy_2[key] = cloneDeepHelper(val[key], seen);\n            });\n            return copy_2;\n        }\n        default:\n            return val;\n    }\n}\n\nfunction getEnv() {\n    if (typeof process !== 'undefined' && process.env.NODE_ENV) {\n        return process.env.NODE_ENV;\n    }\n    return 'development';\n}\nfunction isEnv(env) {\n    return getEnv() === env;\n}\nfunction isProduction() {\n    return isEnv('production') === true;\n}\nfunction isDevelopment() {\n    return isEnv('development') === true;\n}\nfunction isTest() {\n    return isEnv('test') === true;\n}\n\nfunction tryFunctionOrLogError(f) {\n    try {\n        return f();\n    }\n    catch (e) {\n        if (console.error) {\n            console.error(e);\n        }\n    }\n}\nfunction graphQLResultHasError(result) {\n    return result.errors && result.errors.length;\n}\n\nfunction deepFreeze(o) {\n    Object.freeze(o);\n    Object.getOwnPropertyNames(o).forEach(function (prop) {\n        if (o[prop] !== null &&\n            (typeof o[prop] === 'object' || typeof o[prop] === 'function') &&\n            !Object.isFrozen(o[prop])) {\n            deepFreeze(o[prop]);\n        }\n    });\n    return o;\n}\nfunction maybeDeepFreeze(obj) {\n    if (isDevelopment() || isTest()) {\n        var symbolIsPolyfilled = typeof Symbol === 'function' && typeof Symbol('') === 'string';\n        if (!symbolIsPolyfilled) {\n            return deepFreeze(obj);\n        }\n    }\n    return obj;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction mergeDeep() {\n    var sources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sources[_i] = arguments[_i];\n    }\n    return mergeDeepArray(sources);\n}\nfunction mergeDeepArray(sources) {\n    var target = sources[0] || {};\n    var count = sources.length;\n    if (count > 1) {\n        var pastCopies = [];\n        target = shallowCopyForMerge(target, pastCopies);\n        for (var i = 1; i < count; ++i) {\n            target = mergeHelper(target, sources[i], pastCopies);\n        }\n    }\n    return target;\n}\nfunction isObject(obj) {\n    return obj !== null && typeof obj === 'object';\n}\nfunction mergeHelper(target, source, pastCopies) {\n    if (isObject(source) && isObject(target)) {\n        if (Object.isExtensible && !Object.isExtensible(target)) {\n            target = shallowCopyForMerge(target, pastCopies);\n        }\n        Object.keys(source).forEach(function (sourceKey) {\n            var sourceValue = source[sourceKey];\n            if (hasOwnProperty.call(target, sourceKey)) {\n                var targetValue = target[sourceKey];\n                if (sourceValue !== targetValue) {\n                    target[sourceKey] = mergeHelper(shallowCopyForMerge(targetValue, pastCopies), sourceValue, pastCopies);\n                }\n            }\n            else {\n                target[sourceKey] = sourceValue;\n            }\n        });\n        return target;\n    }\n    return source;\n}\nfunction shallowCopyForMerge(value, pastCopies) {\n    if (value !== null &&\n        typeof value === 'object' &&\n        pastCopies.indexOf(value) < 0) {\n        if (Array.isArray(value)) {\n            value = value.slice(0);\n        }\n        else {\n            value = __assign({ __proto__: Object.getPrototypeOf(value) }, value);\n        }\n        pastCopies.push(value);\n    }\n    return value;\n}\n\nvar haveWarned = Object.create({});\nfunction warnOnceInDevelopment(msg, type) {\n    if (type === void 0) { type = 'warn'; }\n    if (!isProduction() && !haveWarned[msg]) {\n        if (!isTest()) {\n            haveWarned[msg] = true;\n        }\n        if (type === 'error') {\n            console.error(msg);\n        }\n        else {\n            console.warn(msg);\n        }\n    }\n}\n\nfunction stripSymbols(data) {\n    return JSON.parse(JSON.stringify(data));\n}\n\nexport { addTypenameToDocument, argumentsObjectFromField, assign, buildQueryFromSelectionSet, canUseWeakMap, checkDocument, cloneDeep, createFragmentMap, getDefaultValues, getDirectiveInfoFromField, getDirectiveNames, getDirectivesFromDocument, getEnv, getFragmentDefinition, getFragmentDefinitions, getFragmentQueryDocument, getInclusionDirectives, getMainDefinition, getMutationDefinition, getOperationDefinition, getOperationDefinitionOrDie, getOperationName, getQueryDefinition, getStoreKeyName, graphQLResultHasError, hasClientExports, hasDirectives, isDevelopment, isEnv, isField, isIdValue, isInlineFragment, isJsonValue, isNumberValue, isProduction, isScalarValue, isTest, maybeDeepFreeze, mergeDeep, mergeDeepArray, removeArgumentsFromDocument, removeClientSetsFromDocument, removeConnectionDirectiveFromDocument, removeDirectivesFromDocument, removeFragmentSpreadFromDocument, resultKeyNameFromField, shouldInclude, storeKeyNameFromField, stripSymbols, toIdValue, tryFunctionOrLogError, valueFromNode, valueToObjectRepresentation, variablesInOperation, warnOnceInDevelopment };\n//# sourceMappingURL=bundle.esm.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Observable = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n// === Symbol Support ===\nvar hasSymbols = function () {\n  return typeof Symbol === 'function';\n};\n\nvar hasSymbol = function (name) {\n  return hasSymbols() && Boolean(Symbol[name]);\n};\n\nvar getSymbol = function (name) {\n  return hasSymbol(name) ? Symbol[name] : '@@' + name;\n};\n\nif (hasSymbols() && !hasSymbol('observable')) {\n  Symbol.observable = Symbol('observable');\n}\n\nvar SymbolIterator = getSymbol('iterator');\nvar SymbolObservable = getSymbol('observable');\nvar SymbolSpecies = getSymbol('species'); // === Abstract Operations ===\n\nfunction getMethod(obj, key) {\n  var value = obj[key];\n  if (value == null) return undefined;\n  if (typeof value !== 'function') throw new TypeError(value + ' is not a function');\n  return value;\n}\n\nfunction getSpecies(obj) {\n  var ctor = obj.constructor;\n\n  if (ctor !== undefined) {\n    ctor = ctor[SymbolSpecies];\n\n    if (ctor === null) {\n      ctor = undefined;\n    }\n  }\n\n  return ctor !== undefined ? ctor : Observable;\n}\n\nfunction isObservable(x) {\n  return x instanceof Observable; // SPEC: Brand check\n}\n\nfunction hostReportError(e) {\n  if (hostReportError.log) {\n    hostReportError.log(e);\n  } else {\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nfunction enqueue(fn) {\n  Promise.resolve().then(function () {\n    try {\n      fn();\n    } catch (e) {\n      hostReportError(e);\n    }\n  });\n}\n\nfunction cleanupSubscription(subscription) {\n  var cleanup = subscription._cleanup;\n  if (cleanup === undefined) return;\n  subscription._cleanup = undefined;\n\n  if (!cleanup) {\n    return;\n  }\n\n  try {\n    if (typeof cleanup === 'function') {\n      cleanup();\n    } else {\n      var unsubscribe = getMethod(cleanup, 'unsubscribe');\n\n      if (unsubscribe) {\n        unsubscribe.call(cleanup);\n      }\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n}\n\nfunction closeSubscription(subscription) {\n  subscription._observer = undefined;\n  subscription._queue = undefined;\n  subscription._state = 'closed';\n}\n\nfunction flushSubscription(subscription) {\n  var queue = subscription._queue;\n\n  if (!queue) {\n    return;\n  }\n\n  subscription._queue = undefined;\n  subscription._state = 'ready';\n\n  for (var i = 0; i < queue.length; ++i) {\n    notifySubscription(subscription, queue[i].type, queue[i].value);\n    if (subscription._state === 'closed') break;\n  }\n}\n\nfunction notifySubscription(subscription, type, value) {\n  subscription._state = 'running';\n  var observer = subscription._observer;\n\n  try {\n    var m = getMethod(observer, type);\n\n    switch (type) {\n      case 'next':\n        if (m) m.call(observer, value);\n        break;\n\n      case 'error':\n        closeSubscription(subscription);\n        if (m) m.call(observer, value);else throw value;\n        break;\n\n      case 'complete':\n        closeSubscription(subscription);\n        if (m) m.call(observer);\n        break;\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n\n  if (subscription._state === 'closed') cleanupSubscription(subscription);else if (subscription._state === 'running') subscription._state = 'ready';\n}\n\nfunction onNotify(subscription, type, value) {\n  if (subscription._state === 'closed') return;\n\n  if (subscription._state === 'buffering') {\n    subscription._queue.push({\n      type: type,\n      value: value\n    });\n\n    return;\n  }\n\n  if (subscription._state !== 'ready') {\n    subscription._state = 'buffering';\n    subscription._queue = [{\n      type: type,\n      value: value\n    }];\n    enqueue(function () {\n      return flushSubscription(subscription);\n    });\n    return;\n  }\n\n  notifySubscription(subscription, type, value);\n}\n\nvar Subscription =\n/*#__PURE__*/\nfunction () {\n  function Subscription(observer, subscriber) {\n    _classCallCheck(this, Subscription);\n\n    // ASSERT: observer is an object\n    // ASSERT: subscriber is callable\n    this._cleanup = undefined;\n    this._observer = observer;\n    this._queue = undefined;\n    this._state = 'initializing';\n    var subscriptionObserver = new SubscriptionObserver(this);\n\n    try {\n      this._cleanup = subscriber.call(undefined, subscriptionObserver);\n    } catch (e) {\n      subscriptionObserver.error(e);\n    }\n\n    if (this._state === 'initializing') this._state = 'ready';\n  }\n\n  _createClass(Subscription, [{\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      if (this._state !== 'closed') {\n        closeSubscription(this);\n        cleanupSubscription(this);\n      }\n    }\n  }, {\n    key: \"closed\",\n    get: function () {\n      return this._state === 'closed';\n    }\n  }]);\n\n  return Subscription;\n}();\n\nvar SubscriptionObserver =\n/*#__PURE__*/\nfunction () {\n  function SubscriptionObserver(subscription) {\n    _classCallCheck(this, SubscriptionObserver);\n\n    this._subscription = subscription;\n  }\n\n  _createClass(SubscriptionObserver, [{\n    key: \"next\",\n    value: function next(value) {\n      onNotify(this._subscription, 'next', value);\n    }\n  }, {\n    key: \"error\",\n    value: function error(value) {\n      onNotify(this._subscription, 'error', value);\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      onNotify(this._subscription, 'complete');\n    }\n  }, {\n    key: \"closed\",\n    get: function () {\n      return this._subscription._state === 'closed';\n    }\n  }]);\n\n  return SubscriptionObserver;\n}();\n\nvar Observable =\n/*#__PURE__*/\nfunction () {\n  function Observable(subscriber) {\n    _classCallCheck(this, Observable);\n\n    if (!(this instanceof Observable)) throw new TypeError('Observable cannot be called as a function');\n    if (typeof subscriber !== 'function') throw new TypeError('Observable initializer must be a function');\n    this._subscriber = subscriber;\n  }\n\n  _createClass(Observable, [{\n    key: \"subscribe\",\n    value: function subscribe(observer) {\n      if (typeof observer !== 'object' || observer === null) {\n        observer = {\n          next: observer,\n          error: arguments[1],\n          complete: arguments[2]\n        };\n      }\n\n      return new Subscription(observer, this._subscriber);\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(fn) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        if (typeof fn !== 'function') {\n          reject(new TypeError(fn + ' is not a function'));\n          return;\n        }\n\n        function done() {\n          subscription.unsubscribe();\n          resolve();\n        }\n\n        var subscription = _this.subscribe({\n          next: function (value) {\n            try {\n              fn(value, done);\n            } catch (e) {\n              reject(e);\n              subscription.unsubscribe();\n            }\n          },\n          error: reject,\n          complete: resolve\n        });\n      });\n    }\n  }, {\n    key: \"map\",\n    value: function map(fn) {\n      var _this2 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        return _this2.subscribe({\n          next: function (value) {\n            try {\n              value = fn(value);\n            } catch (e) {\n              return observer.error(e);\n            }\n\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"filter\",\n    value: function filter(fn) {\n      var _this3 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        return _this3.subscribe({\n          next: function (value) {\n            try {\n              if (!fn(value)) return;\n            } catch (e) {\n              return observer.error(e);\n            }\n\n            observer.next(value);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"reduce\",\n    value: function reduce(fn) {\n      var _this4 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      var hasSeed = arguments.length > 1;\n      var hasValue = false;\n      var seed = arguments[1];\n      var acc = seed;\n      return new C(function (observer) {\n        return _this4.subscribe({\n          next: function (value) {\n            var first = !hasValue;\n            hasValue = true;\n\n            if (!first || hasSeed) {\n              try {\n                acc = fn(acc, value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            } else {\n              acc = value;\n            }\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            if (!hasValue && !hasSeed) return observer.error(new TypeError('Cannot reduce an empty sequence'));\n            observer.next(acc);\n            observer.complete();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"concat\",\n    value: function concat() {\n      var _this5 = this;\n\n      for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n        sources[_key] = arguments[_key];\n      }\n\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        var subscription;\n        var index = 0;\n\n        function startNext(next) {\n          subscription = next.subscribe({\n            next: function (v) {\n              observer.next(v);\n            },\n            error: function (e) {\n              observer.error(e);\n            },\n            complete: function () {\n              if (index === sources.length) {\n                subscription = undefined;\n                observer.complete();\n              } else {\n                startNext(C.from(sources[index++]));\n              }\n            }\n          });\n        }\n\n        startNext(_this5);\n        return function () {\n          if (subscription) {\n            subscription.unsubscribe();\n            subscription = undefined;\n          }\n        };\n      });\n    }\n  }, {\n    key: \"flatMap\",\n    value: function flatMap(fn) {\n      var _this6 = this;\n\n      if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n      var C = getSpecies(this);\n      return new C(function (observer) {\n        var subscriptions = [];\n\n        var outer = _this6.subscribe({\n          next: function (value) {\n            if (fn) {\n              try {\n                value = fn(value);\n              } catch (e) {\n                return observer.error(e);\n              }\n            }\n\n            var inner = C.from(value).subscribe({\n              next: function (value) {\n                observer.next(value);\n              },\n              error: function (e) {\n                observer.error(e);\n              },\n              complete: function () {\n                var i = subscriptions.indexOf(inner);\n                if (i >= 0) subscriptions.splice(i, 1);\n                completeIfDone();\n              }\n            });\n            subscriptions.push(inner);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            completeIfDone();\n          }\n        });\n\n        function completeIfDone() {\n          if (outer.closed && subscriptions.length === 0) observer.complete();\n        }\n\n        return function () {\n          subscriptions.forEach(function (s) {\n            return s.unsubscribe();\n          });\n          outer.unsubscribe();\n        };\n      });\n    }\n  }, {\n    key: SymbolObservable,\n    value: function () {\n      return this;\n    }\n  }], [{\n    key: \"from\",\n    value: function from(x) {\n      var C = typeof this === 'function' ? this : Observable;\n      if (x == null) throw new TypeError(x + ' is not an object');\n      var method = getMethod(x, SymbolObservable);\n\n      if (method) {\n        var observable = method.call(x);\n        if (Object(observable) !== observable) throw new TypeError(observable + ' is not an object');\n        if (isObservable(observable) && observable.constructor === C) return observable;\n        return new C(function (observer) {\n          return observable.subscribe(observer);\n        });\n      }\n\n      if (hasSymbol('iterator')) {\n        method = getMethod(x, SymbolIterator);\n\n        if (method) {\n          return new C(function (observer) {\n            enqueue(function () {\n              if (observer.closed) return;\n              var _iteratorNormalCompletion = true;\n              var _didIteratorError = false;\n              var _iteratorError = undefined;\n\n              try {\n                for (var _iterator = method.call(x)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                  var _item = _step.value;\n                  observer.next(_item);\n                  if (observer.closed) return;\n                }\n              } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                  }\n                } finally {\n                  if (_didIteratorError) {\n                    throw _iteratorError;\n                  }\n                }\n              }\n\n              observer.complete();\n            });\n          });\n        }\n      }\n\n      if (Array.isArray(x)) {\n        return new C(function (observer) {\n          enqueue(function () {\n            if (observer.closed) return;\n\n            for (var i = 0; i < x.length; ++i) {\n              observer.next(x[i]);\n              if (observer.closed) return;\n            }\n\n            observer.complete();\n          });\n        });\n      }\n\n      throw new TypeError(x + ' is not observable');\n    }\n  }, {\n    key: \"of\",\n    value: function of() {\n      for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        items[_key2] = arguments[_key2];\n      }\n\n      var C = typeof this === 'function' ? this : Observable;\n      return new C(function (observer) {\n        enqueue(function () {\n          if (observer.closed) return;\n\n          for (var i = 0; i < items.length; ++i) {\n            observer.next(items[i]);\n            if (observer.closed) return;\n          }\n\n          observer.complete();\n        });\n      });\n    }\n  }, {\n    key: SymbolSpecies,\n    get: function () {\n      return this;\n    }\n  }]);\n\n  return Observable;\n}();\n\nexports.Observable = Observable;\n\nif (hasSymbols()) {\n  Object.defineProperty(Observable, Symbol('extensions'), {\n    value: {\n      symbol: SymbolObservable,\n      hostReportError: hostReportError\n    },\n    configurable: true\n  });\n}","module.exports = require('./lib/Observable.js').Observable;\n","import Observable from 'zen-observable-ts';\nexport { default as Observable } from 'zen-observable-ts';\nimport { invariant, InvariantError } from 'ts-invariant';\nimport { __extends, __assign } from 'tslib';\nimport { getOperationName } from 'apollo-utilities';\nexport { getOperationName } from 'apollo-utilities';\n\nfunction validateOperation(operation) {\n    var OPERATION_FIELDS = [\n        'query',\n        'operationName',\n        'variables',\n        'extensions',\n        'context',\n    ];\n    for (var _i = 0, _a = Object.keys(operation); _i < _a.length; _i++) {\n        var key = _a[_i];\n        if (OPERATION_FIELDS.indexOf(key) < 0) {\n            throw process.env.NODE_ENV === \"production\" ? new InvariantError(2) : new InvariantError(\"illegal argument: \" + key);\n        }\n    }\n    return operation;\n}\nvar LinkError = (function (_super) {\n    __extends(LinkError, _super);\n    function LinkError(message, link) {\n        var _this = _super.call(this, message) || this;\n        _this.link = link;\n        return _this;\n    }\n    return LinkError;\n}(Error));\nfunction isTerminating(link) {\n    return link.request.length <= 1;\n}\nfunction toPromise(observable) {\n    var completed = false;\n    return new Promise(function (resolve, reject) {\n        observable.subscribe({\n            next: function (data) {\n                if (completed) {\n                    process.env.NODE_ENV === \"production\" || invariant.warn(\"Promise Wrapper does not support multiple results from Observable\");\n                }\n                else {\n                    completed = true;\n                    resolve(data);\n                }\n            },\n            error: reject,\n        });\n    });\n}\nvar makePromise = toPromise;\nfunction fromPromise(promise) {\n    return new Observable(function (observer) {\n        promise\n            .then(function (value) {\n            observer.next(value);\n            observer.complete();\n        })\n            .catch(observer.error.bind(observer));\n    });\n}\nfunction fromError(errorValue) {\n    return new Observable(function (observer) {\n        observer.error(errorValue);\n    });\n}\nfunction transformOperation(operation) {\n    var transformedOperation = {\n        variables: operation.variables || {},\n        extensions: operation.extensions || {},\n        operationName: operation.operationName,\n        query: operation.query,\n    };\n    if (!transformedOperation.operationName) {\n        transformedOperation.operationName =\n            typeof transformedOperation.query !== 'string'\n                ? getOperationName(transformedOperation.query)\n                : '';\n    }\n    return transformedOperation;\n}\nfunction createOperation(starting, operation) {\n    var context = __assign({}, starting);\n    var setContext = function (next) {\n        if (typeof next === 'function') {\n            context = __assign({}, context, next(context));\n        }\n        else {\n            context = __assign({}, context, next);\n        }\n    };\n    var getContext = function () { return (__assign({}, context)); };\n    Object.defineProperty(operation, 'setContext', {\n        enumerable: false,\n        value: setContext,\n    });\n    Object.defineProperty(operation, 'getContext', {\n        enumerable: false,\n        value: getContext,\n    });\n    Object.defineProperty(operation, 'toKey', {\n        enumerable: false,\n        value: function () { return getKey(operation); },\n    });\n    return operation;\n}\nfunction getKey(operation) {\n    var query = operation.query, variables = operation.variables, operationName = operation.operationName;\n    return JSON.stringify([operationName, query, variables]);\n}\n\nfunction passthrough(op, forward) {\n    return forward ? forward(op) : Observable.of();\n}\nfunction toLink(handler) {\n    return typeof handler === 'function' ? new ApolloLink(handler) : handler;\n}\nfunction empty() {\n    return new ApolloLink(function () { return Observable.of(); });\n}\nfunction from(links) {\n    if (links.length === 0)\n        return empty();\n    return links.map(toLink).reduce(function (x, y) { return x.concat(y); });\n}\nfunction split(test, left, right) {\n    var leftLink = toLink(left);\n    var rightLink = toLink(right || new ApolloLink(passthrough));\n    if (isTerminating(leftLink) && isTerminating(rightLink)) {\n        return new ApolloLink(function (operation) {\n            return test(operation)\n                ? leftLink.request(operation) || Observable.of()\n                : rightLink.request(operation) || Observable.of();\n        });\n    }\n    else {\n        return new ApolloLink(function (operation, forward) {\n            return test(operation)\n                ? leftLink.request(operation, forward) || Observable.of()\n                : rightLink.request(operation, forward) || Observable.of();\n        });\n    }\n}\nvar concat = function (first, second) {\n    var firstLink = toLink(first);\n    if (isTerminating(firstLink)) {\n        process.env.NODE_ENV === \"production\" || invariant.warn(new LinkError(\"You are calling concat on a terminating link, which will have no effect\", firstLink));\n        return firstLink;\n    }\n    var nextLink = toLink(second);\n    if (isTerminating(nextLink)) {\n        return new ApolloLink(function (operation) {\n            return firstLink.request(operation, function (op) { return nextLink.request(op) || Observable.of(); }) || Observable.of();\n        });\n    }\n    else {\n        return new ApolloLink(function (operation, forward) {\n            return (firstLink.request(operation, function (op) {\n                return nextLink.request(op, forward) || Observable.of();\n            }) || Observable.of());\n        });\n    }\n};\nvar ApolloLink = (function () {\n    function ApolloLink(request) {\n        if (request)\n            this.request = request;\n    }\n    ApolloLink.prototype.split = function (test, left, right) {\n        return this.concat(split(test, left, right || new ApolloLink(passthrough)));\n    };\n    ApolloLink.prototype.concat = function (next) {\n        return concat(this, next);\n    };\n    ApolloLink.prototype.request = function (operation, forward) {\n        throw process.env.NODE_ENV === \"production\" ? new InvariantError(1) : new InvariantError('request is not implemented');\n    };\n    ApolloLink.empty = empty;\n    ApolloLink.from = from;\n    ApolloLink.split = split;\n    ApolloLink.execute = execute;\n    return ApolloLink;\n}());\nfunction execute(link, operation) {\n    return (link.request(createOperation(operation.context, transformOperation(validateOperation(operation)))) || Observable.of());\n}\n\nexport { ApolloLink, concat, createOperation, empty, execute, from, fromError, fromPromise, makePromise, split, toPromise };\n//# sourceMappingURL=bundle.esm.js.map\n","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","import { __extends, __assign, __awaiter, __generator } from 'tslib';\nimport { getOperationDefinition, isEqual, tryFunctionOrLogError, cloneDeep, mergeDeep, hasDirectives, removeClientSetsFromDocument, buildQueryFromSelectionSet, getMainDefinition, getFragmentDefinitions, createFragmentMap, mergeDeepArray, resultKeyNameFromField, argumentsObjectFromField, shouldInclude, isField, isInlineFragment, canUseWeakMap, graphQLResultHasError, removeConnectionDirectiveFromDocument, hasClientExports, getDefaultValues, getOperationName } from 'apollo-utilities';\nimport { Observable as Observable$1, execute, ApolloLink } from 'apollo-link';\nimport $$observable from 'symbol-observable';\nimport { InvariantError, invariant } from 'ts-invariant';\nimport { visit, BREAK } from 'graphql/language/visitor';\n\nvar NetworkStatus;\n(function (NetworkStatus) {\n    NetworkStatus[NetworkStatus[\"loading\"] = 1] = \"loading\";\n    NetworkStatus[NetworkStatus[\"setVariables\"] = 2] = \"setVariables\";\n    NetworkStatus[NetworkStatus[\"fetchMore\"] = 3] = \"fetchMore\";\n    NetworkStatus[NetworkStatus[\"refetch\"] = 4] = \"refetch\";\n    NetworkStatus[NetworkStatus[\"poll\"] = 6] = \"poll\";\n    NetworkStatus[NetworkStatus[\"ready\"] = 7] = \"ready\";\n    NetworkStatus[NetworkStatus[\"error\"] = 8] = \"error\";\n})(NetworkStatus || (NetworkStatus = {}));\nfunction isNetworkRequestInFlight(networkStatus) {\n    return networkStatus < 7;\n}\n\nvar Observable = (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Observable.prototype[$$observable] = function () {\n        return this;\n    };\n    Observable.prototype['@@observable'] = function () {\n        return this;\n    };\n    return Observable;\n}(Observable$1));\n\nfunction isNonEmptyArray(value) {\n    return Array.isArray(value) && value.length > 0;\n}\n\nfunction isApolloError(err) {\n    return err.hasOwnProperty('graphQLErrors');\n}\nvar generateErrorMessage = function (err) {\n    var message = '';\n    if (isNonEmptyArray(err.graphQLErrors)) {\n        err.graphQLErrors.forEach(function (graphQLError) {\n            var errorMessage = graphQLError\n                ? graphQLError.message\n                : 'Error message not found.';\n            message += \"GraphQL error: \" + errorMessage + \"\\n\";\n        });\n    }\n    if (err.networkError) {\n        message += 'Network error: ' + err.networkError.message + '\\n';\n    }\n    message = message.replace(/\\n$/, '');\n    return message;\n};\nvar ApolloError = (function (_super) {\n    __extends(ApolloError, _super);\n    function ApolloError(_a) {\n        var graphQLErrors = _a.graphQLErrors, networkError = _a.networkError, errorMessage = _a.errorMessage, extraInfo = _a.extraInfo;\n        var _this = _super.call(this, errorMessage) || this;\n        _this.graphQLErrors = graphQLErrors || [];\n        _this.networkError = networkError || null;\n        if (!errorMessage) {\n            _this.message = generateErrorMessage(_this);\n        }\n        else {\n            _this.message = errorMessage;\n        }\n        _this.extraInfo = extraInfo;\n        _this.__proto__ = ApolloError.prototype;\n        return _this;\n    }\n    return ApolloError;\n}(Error));\n\nvar FetchType;\n(function (FetchType) {\n    FetchType[FetchType[\"normal\"] = 1] = \"normal\";\n    FetchType[FetchType[\"refetch\"] = 2] = \"refetch\";\n    FetchType[FetchType[\"poll\"] = 3] = \"poll\";\n})(FetchType || (FetchType = {}));\n\nvar hasError = function (storeValue, policy) {\n    if (policy === void 0) { policy = 'none'; }\n    return storeValue && (storeValue.networkError ||\n        (policy === 'none' && isNonEmptyArray(storeValue.graphQLErrors)));\n};\nvar ObservableQuery = (function (_super) {\n    __extends(ObservableQuery, _super);\n    function ObservableQuery(_a) {\n        var queryManager = _a.queryManager, options = _a.options, _b = _a.shouldSubscribe, shouldSubscribe = _b === void 0 ? true : _b;\n        var _this = _super.call(this, function (observer) {\n            return _this.onSubscribe(observer);\n        }) || this;\n        _this.observers = new Set();\n        _this.subscriptions = new Set();\n        _this.isTornDown = false;\n        _this.options = options;\n        _this.variables = options.variables || {};\n        _this.queryId = queryManager.generateQueryId();\n        _this.shouldSubscribe = shouldSubscribe;\n        var opDef = getOperationDefinition(options.query);\n        _this.queryName = opDef && opDef.name && opDef.name.value;\n        _this.queryManager = queryManager;\n        return _this;\n    }\n    ObservableQuery.prototype.result = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var observer = {\n                next: function (result) {\n                    resolve(result);\n                    _this.observers.delete(observer);\n                    if (!_this.observers.size) {\n                        _this.queryManager.removeQuery(_this.queryId);\n                    }\n                    setTimeout(function () {\n                        subscription.unsubscribe();\n                    }, 0);\n                },\n                error: reject,\n            };\n            var subscription = _this.subscribe(observer);\n        });\n    };\n    ObservableQuery.prototype.currentResult = function () {\n        var result = this.getCurrentResult();\n        if (result.data === undefined) {\n            result.data = {};\n        }\n        return result;\n    };\n    ObservableQuery.prototype.getCurrentResult = function () {\n        if (this.isTornDown) {\n            var lastResult = this.lastResult;\n            return {\n                data: !this.lastError && lastResult && lastResult.data || void 0,\n                error: this.lastError,\n                loading: false,\n                networkStatus: NetworkStatus.error,\n            };\n        }\n        var _a = this.queryManager.getCurrentQueryResult(this), data = _a.data, partial = _a.partial;\n        var queryStoreValue = this.queryManager.queryStore.get(this.queryId);\n        var result;\n        var fetchPolicy = this.options.fetchPolicy;\n        var isNetworkFetchPolicy = fetchPolicy === 'network-only' ||\n            fetchPolicy === 'no-cache';\n        if (queryStoreValue) {\n            var networkStatus = queryStoreValue.networkStatus;\n            if (hasError(queryStoreValue, this.options.errorPolicy)) {\n                return {\n                    data: void 0,\n                    loading: false,\n                    networkStatus: networkStatus,\n                    error: new ApolloError({\n                        graphQLErrors: queryStoreValue.graphQLErrors,\n                        networkError: queryStoreValue.networkError,\n                    }),\n                };\n            }\n            if (queryStoreValue.variables) {\n                this.options.variables = __assign(__assign({}, this.options.variables), queryStoreValue.variables);\n                this.variables = this.options.variables;\n            }\n            result = {\n                data: data,\n                loading: isNetworkRequestInFlight(networkStatus),\n                networkStatus: networkStatus,\n            };\n            if (queryStoreValue.graphQLErrors && this.options.errorPolicy === 'all') {\n                result.errors = queryStoreValue.graphQLErrors;\n            }\n        }\n        else {\n            var loading = isNetworkFetchPolicy ||\n                (partial && fetchPolicy !== 'cache-only');\n            result = {\n                data: data,\n                loading: loading,\n                networkStatus: loading ? NetworkStatus.loading : NetworkStatus.ready,\n            };\n        }\n        if (!partial) {\n            this.updateLastResult(__assign(__assign({}, result), { stale: false }));\n        }\n        return __assign(__assign({}, result), { partial: partial });\n    };\n    ObservableQuery.prototype.isDifferentFromLastResult = function (newResult) {\n        var snapshot = this.lastResultSnapshot;\n        return !(snapshot &&\n            newResult &&\n            snapshot.networkStatus === newResult.networkStatus &&\n            snapshot.stale === newResult.stale &&\n            isEqual(snapshot.data, newResult.data));\n    };\n    ObservableQuery.prototype.getLastResult = function () {\n        return this.lastResult;\n    };\n    ObservableQuery.prototype.getLastError = function () {\n        return this.lastError;\n    };\n    ObservableQuery.prototype.resetLastResults = function () {\n        delete this.lastResult;\n        delete this.lastResultSnapshot;\n        delete this.lastError;\n        this.isTornDown = false;\n    };\n    ObservableQuery.prototype.resetQueryStoreErrors = function () {\n        var queryStore = this.queryManager.queryStore.get(this.queryId);\n        if (queryStore) {\n            queryStore.networkError = null;\n            queryStore.graphQLErrors = [];\n        }\n    };\n    ObservableQuery.prototype.refetch = function (variables) {\n        var fetchPolicy = this.options.fetchPolicy;\n        if (fetchPolicy === 'cache-only') {\n            return Promise.reject(process.env.NODE_ENV === \"production\" ? new InvariantError(1) : new InvariantError('cache-only fetchPolicy option should not be used together with query refetch.'));\n        }\n        if (fetchPolicy !== 'no-cache' &&\n            fetchPolicy !== 'cache-and-network') {\n            fetchPolicy = 'network-only';\n        }\n        if (!isEqual(this.variables, variables)) {\n            this.variables = __assign(__assign({}, this.variables), variables);\n        }\n        if (!isEqual(this.options.variables, this.variables)) {\n            this.options.variables = __assign(__assign({}, this.options.variables), this.variables);\n        }\n        return this.queryManager.fetchQuery(this.queryId, __assign(__assign({}, this.options), { fetchPolicy: fetchPolicy }), FetchType.refetch);\n    };\n    ObservableQuery.prototype.fetchMore = function (fetchMoreOptions) {\n        var _this = this;\n        process.env.NODE_ENV === \"production\" ? invariant(fetchMoreOptions.updateQuery, 2) : invariant(fetchMoreOptions.updateQuery, 'updateQuery option is required. This function defines how to update the query data with the new results.');\n        var combinedOptions = __assign(__assign({}, (fetchMoreOptions.query ? fetchMoreOptions : __assign(__assign(__assign({}, this.options), fetchMoreOptions), { variables: __assign(__assign({}, this.variables), fetchMoreOptions.variables) }))), { fetchPolicy: 'network-only' });\n        var qid = this.queryManager.generateQueryId();\n        return this.queryManager\n            .fetchQuery(qid, combinedOptions, FetchType.normal, this.queryId)\n            .then(function (fetchMoreResult) {\n            _this.updateQuery(function (previousResult) {\n                return fetchMoreOptions.updateQuery(previousResult, {\n                    fetchMoreResult: fetchMoreResult.data,\n                    variables: combinedOptions.variables,\n                });\n            });\n            _this.queryManager.stopQuery(qid);\n            return fetchMoreResult;\n        }, function (error) {\n            _this.queryManager.stopQuery(qid);\n            throw error;\n        });\n    };\n    ObservableQuery.prototype.subscribeToMore = function (options) {\n        var _this = this;\n        var subscription = this.queryManager\n            .startGraphQLSubscription({\n            query: options.document,\n            variables: options.variables,\n        })\n            .subscribe({\n            next: function (subscriptionData) {\n                var updateQuery = options.updateQuery;\n                if (updateQuery) {\n                    _this.updateQuery(function (previous, _a) {\n                        var variables = _a.variables;\n                        return updateQuery(previous, {\n                            subscriptionData: subscriptionData,\n                            variables: variables,\n                        });\n                    });\n                }\n            },\n            error: function (err) {\n                if (options.onError) {\n                    options.onError(err);\n                    return;\n                }\n                process.env.NODE_ENV === \"production\" || invariant.error('Unhandled GraphQL subscription error', err);\n            },\n        });\n        this.subscriptions.add(subscription);\n        return function () {\n            if (_this.subscriptions.delete(subscription)) {\n                subscription.unsubscribe();\n            }\n        };\n    };\n    ObservableQuery.prototype.setOptions = function (opts) {\n        var oldFetchPolicy = this.options.fetchPolicy;\n        this.options = __assign(__assign({}, this.options), opts);\n        if (opts.pollInterval) {\n            this.startPolling(opts.pollInterval);\n        }\n        else if (opts.pollInterval === 0) {\n            this.stopPolling();\n        }\n        var fetchPolicy = opts.fetchPolicy;\n        return this.setVariables(this.options.variables, oldFetchPolicy !== fetchPolicy && (oldFetchPolicy === 'cache-only' ||\n            oldFetchPolicy === 'standby' ||\n            fetchPolicy === 'network-only'), opts.fetchResults);\n    };\n    ObservableQuery.prototype.setVariables = function (variables, tryFetch, fetchResults) {\n        if (tryFetch === void 0) { tryFetch = false; }\n        if (fetchResults === void 0) { fetchResults = true; }\n        this.isTornDown = false;\n        variables = variables || this.variables;\n        if (!tryFetch && isEqual(variables, this.variables)) {\n            return this.observers.size && fetchResults\n                ? this.result()\n                : Promise.resolve();\n        }\n        this.variables = this.options.variables = variables;\n        if (!this.observers.size) {\n            return Promise.resolve();\n        }\n        return this.queryManager.fetchQuery(this.queryId, this.options);\n    };\n    ObservableQuery.prototype.updateQuery = function (mapFn) {\n        var queryManager = this.queryManager;\n        var _a = queryManager.getQueryWithPreviousResult(this.queryId), previousResult = _a.previousResult, variables = _a.variables, document = _a.document;\n        var newResult = tryFunctionOrLogError(function () {\n            return mapFn(previousResult, { variables: variables });\n        });\n        if (newResult) {\n            queryManager.dataStore.markUpdateQueryResult(document, variables, newResult);\n            queryManager.broadcastQueries();\n        }\n    };\n    ObservableQuery.prototype.stopPolling = function () {\n        this.queryManager.stopPollingQuery(this.queryId);\n        this.options.pollInterval = undefined;\n    };\n    ObservableQuery.prototype.startPolling = function (pollInterval) {\n        assertNotCacheFirstOrOnly(this);\n        this.options.pollInterval = pollInterval;\n        this.queryManager.startPollingQuery(this.options, this.queryId);\n    };\n    ObservableQuery.prototype.updateLastResult = function (newResult) {\n        var previousResult = this.lastResult;\n        this.lastResult = newResult;\n        this.lastResultSnapshot = this.queryManager.assumeImmutableResults\n            ? newResult\n            : cloneDeep(newResult);\n        return previousResult;\n    };\n    ObservableQuery.prototype.onSubscribe = function (observer) {\n        var _this = this;\n        try {\n            var subObserver = observer._subscription._observer;\n            if (subObserver && !subObserver.error) {\n                subObserver.error = defaultSubscriptionObserverErrorCallback;\n            }\n        }\n        catch (_a) { }\n        var first = !this.observers.size;\n        this.observers.add(observer);\n        if (observer.next && this.lastResult)\n            observer.next(this.lastResult);\n        if (observer.error && this.lastError)\n            observer.error(this.lastError);\n        if (first) {\n            this.setUpQuery();\n        }\n        return function () {\n            if (_this.observers.delete(observer) && !_this.observers.size) {\n                _this.tearDownQuery();\n            }\n        };\n    };\n    ObservableQuery.prototype.setUpQuery = function () {\n        var _this = this;\n        var _a = this, queryManager = _a.queryManager, queryId = _a.queryId;\n        if (this.shouldSubscribe) {\n            queryManager.addObservableQuery(queryId, this);\n        }\n        if (this.options.pollInterval) {\n            assertNotCacheFirstOrOnly(this);\n            queryManager.startPollingQuery(this.options, queryId);\n        }\n        var onError = function (error) {\n            _this.updateLastResult(__assign(__assign({}, _this.lastResult), { errors: error.graphQLErrors, networkStatus: NetworkStatus.error, loading: false }));\n            iterateObserversSafely(_this.observers, 'error', _this.lastError = error);\n        };\n        queryManager.observeQuery(queryId, this.options, {\n            next: function (result) {\n                if (_this.lastError || _this.isDifferentFromLastResult(result)) {\n                    var previousResult_1 = _this.updateLastResult(result);\n                    var _a = _this.options, query_1 = _a.query, variables = _a.variables, fetchPolicy_1 = _a.fetchPolicy;\n                    if (queryManager.transform(query_1).hasClientExports) {\n                        queryManager.getLocalState().addExportedVariables(query_1, variables).then(function (variables) {\n                            var previousVariables = _this.variables;\n                            _this.variables = _this.options.variables = variables;\n                            if (!result.loading &&\n                                previousResult_1 &&\n                                fetchPolicy_1 !== 'cache-only' &&\n                                queryManager.transform(query_1).serverQuery &&\n                                !isEqual(previousVariables, variables)) {\n                                _this.refetch();\n                            }\n                            else {\n                                iterateObserversSafely(_this.observers, 'next', result);\n                            }\n                        });\n                    }\n                    else {\n                        iterateObserversSafely(_this.observers, 'next', result);\n                    }\n                }\n            },\n            error: onError,\n        }).catch(onError);\n    };\n    ObservableQuery.prototype.tearDownQuery = function () {\n        var queryManager = this.queryManager;\n        this.isTornDown = true;\n        queryManager.stopPollingQuery(this.queryId);\n        this.subscriptions.forEach(function (sub) { return sub.unsubscribe(); });\n        this.subscriptions.clear();\n        queryManager.removeObservableQuery(this.queryId);\n        queryManager.stopQuery(this.queryId);\n        this.observers.clear();\n    };\n    return ObservableQuery;\n}(Observable));\nfunction defaultSubscriptionObserverErrorCallback(error) {\n    process.env.NODE_ENV === \"production\" || invariant.error('Unhandled error', error.message, error.stack);\n}\nfunction iterateObserversSafely(observers, method, argument) {\n    var observersWithMethod = [];\n    observers.forEach(function (obs) { return obs[method] && observersWithMethod.push(obs); });\n    observersWithMethod.forEach(function (obs) { return obs[method](argument); });\n}\nfunction assertNotCacheFirstOrOnly(obsQuery) {\n    var fetchPolicy = obsQuery.options.fetchPolicy;\n    process.env.NODE_ENV === \"production\" ? invariant(fetchPolicy !== 'cache-first' && fetchPolicy !== 'cache-only', 3) : invariant(fetchPolicy !== 'cache-first' && fetchPolicy !== 'cache-only', 'Queries that specify the cache-first and cache-only fetchPolicies cannot also be polling queries.');\n}\n\nvar MutationStore = (function () {\n    function MutationStore() {\n        this.store = {};\n    }\n    MutationStore.prototype.getStore = function () {\n        return this.store;\n    };\n    MutationStore.prototype.get = function (mutationId) {\n        return this.store[mutationId];\n    };\n    MutationStore.prototype.initMutation = function (mutationId, mutation, variables) {\n        this.store[mutationId] = {\n            mutation: mutation,\n            variables: variables || {},\n            loading: true,\n            error: null,\n        };\n    };\n    MutationStore.prototype.markMutationError = function (mutationId, error) {\n        var mutation = this.store[mutationId];\n        if (mutation) {\n            mutation.loading = false;\n            mutation.error = error;\n        }\n    };\n    MutationStore.prototype.markMutationResult = function (mutationId) {\n        var mutation = this.store[mutationId];\n        if (mutation) {\n            mutation.loading = false;\n            mutation.error = null;\n        }\n    };\n    MutationStore.prototype.reset = function () {\n        this.store = {};\n    };\n    return MutationStore;\n}());\n\nvar QueryStore = (function () {\n    function QueryStore() {\n        this.store = {};\n    }\n    QueryStore.prototype.getStore = function () {\n        return this.store;\n    };\n    QueryStore.prototype.get = function (queryId) {\n        return this.store[queryId];\n    };\n    QueryStore.prototype.initQuery = function (query) {\n        var previousQuery = this.store[query.queryId];\n        process.env.NODE_ENV === \"production\" ? invariant(!previousQuery ||\n            previousQuery.document === query.document ||\n            isEqual(previousQuery.document, query.document), 19) : invariant(!previousQuery ||\n            previousQuery.document === query.document ||\n            isEqual(previousQuery.document, query.document), 'Internal Error: may not update existing query string in store');\n        var isSetVariables = false;\n        var previousVariables = null;\n        if (query.storePreviousVariables &&\n            previousQuery &&\n            previousQuery.networkStatus !== NetworkStatus.loading) {\n            if (!isEqual(previousQuery.variables, query.variables)) {\n                isSetVariables = true;\n                previousVariables = previousQuery.variables;\n            }\n        }\n        var networkStatus;\n        if (isSetVariables) {\n            networkStatus = NetworkStatus.setVariables;\n        }\n        else if (query.isPoll) {\n            networkStatus = NetworkStatus.poll;\n        }\n        else if (query.isRefetch) {\n            networkStatus = NetworkStatus.refetch;\n        }\n        else {\n            networkStatus = NetworkStatus.loading;\n        }\n        var graphQLErrors = [];\n        if (previousQuery && previousQuery.graphQLErrors) {\n            graphQLErrors = previousQuery.graphQLErrors;\n        }\n        this.store[query.queryId] = {\n            document: query.document,\n            variables: query.variables,\n            previousVariables: previousVariables,\n            networkError: null,\n            graphQLErrors: graphQLErrors,\n            networkStatus: networkStatus,\n            metadata: query.metadata,\n        };\n        if (typeof query.fetchMoreForQueryId === 'string' &&\n            this.store[query.fetchMoreForQueryId]) {\n            this.store[query.fetchMoreForQueryId].networkStatus =\n                NetworkStatus.fetchMore;\n        }\n    };\n    QueryStore.prototype.markQueryResult = function (queryId, result, fetchMoreForQueryId) {\n        if (!this.store || !this.store[queryId])\n            return;\n        this.store[queryId].networkError = null;\n        this.store[queryId].graphQLErrors = isNonEmptyArray(result.errors) ? result.errors : [];\n        this.store[queryId].previousVariables = null;\n        this.store[queryId].networkStatus = NetworkStatus.ready;\n        if (typeof fetchMoreForQueryId === 'string' &&\n            this.store[fetchMoreForQueryId]) {\n            this.store[fetchMoreForQueryId].networkStatus = NetworkStatus.ready;\n        }\n    };\n    QueryStore.prototype.markQueryError = function (queryId, error, fetchMoreForQueryId) {\n        if (!this.store || !this.store[queryId])\n            return;\n        this.store[queryId].networkError = error;\n        this.store[queryId].networkStatus = NetworkStatus.error;\n        if (typeof fetchMoreForQueryId === 'string') {\n            this.markQueryResultClient(fetchMoreForQueryId, true);\n        }\n    };\n    QueryStore.prototype.markQueryResultClient = function (queryId, complete) {\n        var storeValue = this.store && this.store[queryId];\n        if (storeValue) {\n            storeValue.networkError = null;\n            storeValue.previousVariables = null;\n            if (complete) {\n                storeValue.networkStatus = NetworkStatus.ready;\n            }\n        }\n    };\n    QueryStore.prototype.stopQuery = function (queryId) {\n        delete this.store[queryId];\n    };\n    QueryStore.prototype.reset = function (observableQueryIds) {\n        var _this = this;\n        Object.keys(this.store).forEach(function (queryId) {\n            if (observableQueryIds.indexOf(queryId) < 0) {\n                _this.stopQuery(queryId);\n            }\n            else {\n                _this.store[queryId].networkStatus = NetworkStatus.loading;\n            }\n        });\n    };\n    return QueryStore;\n}());\n\nfunction capitalizeFirstLetter(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nvar LocalState = (function () {\n    function LocalState(_a) {\n        var cache = _a.cache, client = _a.client, resolvers = _a.resolvers, fragmentMatcher = _a.fragmentMatcher;\n        this.cache = cache;\n        if (client) {\n            this.client = client;\n        }\n        if (resolvers) {\n            this.addResolvers(resolvers);\n        }\n        if (fragmentMatcher) {\n            this.setFragmentMatcher(fragmentMatcher);\n        }\n    }\n    LocalState.prototype.addResolvers = function (resolvers) {\n        var _this = this;\n        this.resolvers = this.resolvers || {};\n        if (Array.isArray(resolvers)) {\n            resolvers.forEach(function (resolverGroup) {\n                _this.resolvers = mergeDeep(_this.resolvers, resolverGroup);\n            });\n        }\n        else {\n            this.resolvers = mergeDeep(this.resolvers, resolvers);\n        }\n    };\n    LocalState.prototype.setResolvers = function (resolvers) {\n        this.resolvers = {};\n        this.addResolvers(resolvers);\n    };\n    LocalState.prototype.getResolvers = function () {\n        return this.resolvers || {};\n    };\n    LocalState.prototype.runResolvers = function (_a) {\n        var document = _a.document, remoteResult = _a.remoteResult, context = _a.context, variables = _a.variables, _b = _a.onlyRunForcedResolvers, onlyRunForcedResolvers = _b === void 0 ? false : _b;\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_c) {\n                if (document) {\n                    return [2, this.resolveDocument(document, remoteResult.data, context, variables, this.fragmentMatcher, onlyRunForcedResolvers).then(function (localResult) { return (__assign(__assign({}, remoteResult), { data: localResult.result })); })];\n                }\n                return [2, remoteResult];\n            });\n        });\n    };\n    LocalState.prototype.setFragmentMatcher = function (fragmentMatcher) {\n        this.fragmentMatcher = fragmentMatcher;\n    };\n    LocalState.prototype.getFragmentMatcher = function () {\n        return this.fragmentMatcher;\n    };\n    LocalState.prototype.clientQuery = function (document) {\n        if (hasDirectives(['client'], document)) {\n            if (this.resolvers) {\n                return document;\n            }\n            process.env.NODE_ENV === \"production\" || invariant.warn('Found @client directives in a query but no ApolloClient resolvers ' +\n                'were specified. This means ApolloClient local resolver handling ' +\n                'has been disabled, and @client directives will be passed through ' +\n                'to your link chain.');\n        }\n        return null;\n    };\n    LocalState.prototype.serverQuery = function (document) {\n        return this.resolvers ? removeClientSetsFromDocument(document) : document;\n    };\n    LocalState.prototype.prepareContext = function (context) {\n        if (context === void 0) { context = {}; }\n        var cache = this.cache;\n        var newContext = __assign(__assign({}, context), { cache: cache, getCacheKey: function (obj) {\n                if (cache.config) {\n                    return cache.config.dataIdFromObject(obj);\n                }\n                else {\n                    process.env.NODE_ENV === \"production\" ? invariant(false, 6) : invariant(false, 'To use context.getCacheKey, you need to use a cache that has ' +\n                        'a configurable dataIdFromObject, like apollo-cache-inmemory.');\n                }\n            } });\n        return newContext;\n    };\n    LocalState.prototype.addExportedVariables = function (document, variables, context) {\n        if (variables === void 0) { variables = {}; }\n        if (context === void 0) { context = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (document) {\n                    return [2, this.resolveDocument(document, this.buildRootValueFromCache(document, variables) || {}, this.prepareContext(context), variables).then(function (data) { return (__assign(__assign({}, variables), data.exportedVariables)); })];\n                }\n                return [2, __assign({}, variables)];\n            });\n        });\n    };\n    LocalState.prototype.shouldForceResolvers = function (document) {\n        var forceResolvers = false;\n        visit(document, {\n            Directive: {\n                enter: function (node) {\n                    if (node.name.value === 'client' && node.arguments) {\n                        forceResolvers = node.arguments.some(function (arg) {\n                            return arg.name.value === 'always' &&\n                                arg.value.kind === 'BooleanValue' &&\n                                arg.value.value === true;\n                        });\n                        if (forceResolvers) {\n                            return BREAK;\n                        }\n                    }\n                },\n            },\n        });\n        return forceResolvers;\n    };\n    LocalState.prototype.buildRootValueFromCache = function (document, variables) {\n        return this.cache.diff({\n            query: buildQueryFromSelectionSet(document),\n            variables: variables,\n            returnPartialData: true,\n            optimistic: false,\n        }).result;\n    };\n    LocalState.prototype.resolveDocument = function (document, rootValue, context, variables, fragmentMatcher, onlyRunForcedResolvers) {\n        if (context === void 0) { context = {}; }\n        if (variables === void 0) { variables = {}; }\n        if (fragmentMatcher === void 0) { fragmentMatcher = function () { return true; }; }\n        if (onlyRunForcedResolvers === void 0) { onlyRunForcedResolvers = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            var mainDefinition, fragments, fragmentMap, definitionOperation, defaultOperationType, _a, cache, client, execContext;\n            return __generator(this, function (_b) {\n                mainDefinition = getMainDefinition(document);\n                fragments = getFragmentDefinitions(document);\n                fragmentMap = createFragmentMap(fragments);\n                definitionOperation = mainDefinition\n                    .operation;\n                defaultOperationType = definitionOperation\n                    ? capitalizeFirstLetter(definitionOperation)\n                    : 'Query';\n                _a = this, cache = _a.cache, client = _a.client;\n                execContext = {\n                    fragmentMap: fragmentMap,\n                    context: __assign(__assign({}, context), { cache: cache,\n                        client: client }),\n                    variables: variables,\n                    fragmentMatcher: fragmentMatcher,\n                    defaultOperationType: defaultOperationType,\n                    exportedVariables: {},\n                    onlyRunForcedResolvers: onlyRunForcedResolvers,\n                };\n                return [2, this.resolveSelectionSet(mainDefinition.selectionSet, rootValue, execContext).then(function (result) { return ({\n                        result: result,\n                        exportedVariables: execContext.exportedVariables,\n                    }); })];\n            });\n        });\n    };\n    LocalState.prototype.resolveSelectionSet = function (selectionSet, rootValue, execContext) {\n        return __awaiter(this, void 0, void 0, function () {\n            var fragmentMap, context, variables, resultsToMerge, execute;\n            var _this = this;\n            return __generator(this, function (_a) {\n                fragmentMap = execContext.fragmentMap, context = execContext.context, variables = execContext.variables;\n                resultsToMerge = [rootValue];\n                execute = function (selection) { return __awaiter(_this, void 0, void 0, function () {\n                    var fragment, typeCondition;\n                    return __generator(this, function (_a) {\n                        if (!shouldInclude(selection, variables)) {\n                            return [2];\n                        }\n                        if (isField(selection)) {\n                            return [2, this.resolveField(selection, rootValue, execContext).then(function (fieldResult) {\n                                    var _a;\n                                    if (typeof fieldResult !== 'undefined') {\n                                        resultsToMerge.push((_a = {},\n                                            _a[resultKeyNameFromField(selection)] = fieldResult,\n                                            _a));\n                                    }\n                                })];\n                        }\n                        if (isInlineFragment(selection)) {\n                            fragment = selection;\n                        }\n                        else {\n                            fragment = fragmentMap[selection.name.value];\n                            process.env.NODE_ENV === \"production\" ? invariant(fragment, 7) : invariant(fragment, \"No fragment named \" + selection.name.value);\n                        }\n                        if (fragment && fragment.typeCondition) {\n                            typeCondition = fragment.typeCondition.name.value;\n                            if (execContext.fragmentMatcher(rootValue, typeCondition, context)) {\n                                return [2, this.resolveSelectionSet(fragment.selectionSet, rootValue, execContext).then(function (fragmentResult) {\n                                        resultsToMerge.push(fragmentResult);\n                                    })];\n                            }\n                        }\n                        return [2];\n                    });\n                }); };\n                return [2, Promise.all(selectionSet.selections.map(execute)).then(function () {\n                        return mergeDeepArray(resultsToMerge);\n                    })];\n            });\n        });\n    };\n    LocalState.prototype.resolveField = function (field, rootValue, execContext) {\n        return __awaiter(this, void 0, void 0, function () {\n            var variables, fieldName, aliasedFieldName, aliasUsed, defaultResult, resultPromise, resolverType, resolverMap, resolve;\n            var _this = this;\n            return __generator(this, function (_a) {\n                variables = execContext.variables;\n                fieldName = field.name.value;\n                aliasedFieldName = resultKeyNameFromField(field);\n                aliasUsed = fieldName !== aliasedFieldName;\n                defaultResult = rootValue[aliasedFieldName] || rootValue[fieldName];\n                resultPromise = Promise.resolve(defaultResult);\n                if (!execContext.onlyRunForcedResolvers ||\n                    this.shouldForceResolvers(field)) {\n                    resolverType = rootValue.__typename || execContext.defaultOperationType;\n                    resolverMap = this.resolvers && this.resolvers[resolverType];\n                    if (resolverMap) {\n                        resolve = resolverMap[aliasUsed ? fieldName : aliasedFieldName];\n                        if (resolve) {\n                            resultPromise = Promise.resolve(resolve(rootValue, argumentsObjectFromField(field, variables), execContext.context, { field: field, fragmentMap: execContext.fragmentMap }));\n                        }\n                    }\n                }\n                return [2, resultPromise.then(function (result) {\n                        if (result === void 0) { result = defaultResult; }\n                        if (field.directives) {\n                            field.directives.forEach(function (directive) {\n                                if (directive.name.value === 'export' && directive.arguments) {\n                                    directive.arguments.forEach(function (arg) {\n                                        if (arg.name.value === 'as' && arg.value.kind === 'StringValue') {\n                                            execContext.exportedVariables[arg.value.value] = result;\n                                        }\n                                    });\n                                }\n                            });\n                        }\n                        if (!field.selectionSet) {\n                            return result;\n                        }\n                        if (result == null) {\n                            return result;\n                        }\n                        if (Array.isArray(result)) {\n                            return _this.resolveSubSelectedArray(field, result, execContext);\n                        }\n                        if (field.selectionSet) {\n                            return _this.resolveSelectionSet(field.selectionSet, result, execContext);\n                        }\n                    })];\n            });\n        });\n    };\n    LocalState.prototype.resolveSubSelectedArray = function (field, result, execContext) {\n        var _this = this;\n        return Promise.all(result.map(function (item) {\n            if (item === null) {\n                return null;\n            }\n            if (Array.isArray(item)) {\n                return _this.resolveSubSelectedArray(field, item, execContext);\n            }\n            if (field.selectionSet) {\n                return _this.resolveSelectionSet(field.selectionSet, item, execContext);\n            }\n        }));\n    };\n    return LocalState;\n}());\n\nfunction multiplex(inner) {\n    var observers = new Set();\n    var sub = null;\n    return new Observable(function (observer) {\n        observers.add(observer);\n        sub = sub || inner.subscribe({\n            next: function (value) {\n                observers.forEach(function (obs) { return obs.next && obs.next(value); });\n            },\n            error: function (error) {\n                observers.forEach(function (obs) { return obs.error && obs.error(error); });\n            },\n            complete: function () {\n                observers.forEach(function (obs) { return obs.complete && obs.complete(); });\n            },\n        });\n        return function () {\n            if (observers.delete(observer) && !observers.size && sub) {\n                sub.unsubscribe();\n                sub = null;\n            }\n        };\n    });\n}\nfunction asyncMap(observable, mapFn) {\n    return new Observable(function (observer) {\n        var next = observer.next, error = observer.error, complete = observer.complete;\n        var activeNextCount = 0;\n        var completed = false;\n        var handler = {\n            next: function (value) {\n                ++activeNextCount;\n                new Promise(function (resolve) {\n                    resolve(mapFn(value));\n                }).then(function (result) {\n                    --activeNextCount;\n                    next && next.call(observer, result);\n                    completed && handler.complete();\n                }, function (e) {\n                    --activeNextCount;\n                    error && error.call(observer, e);\n                });\n            },\n            error: function (e) {\n                error && error.call(observer, e);\n            },\n            complete: function () {\n                completed = true;\n                if (!activeNextCount) {\n                    complete && complete.call(observer);\n                }\n            },\n        };\n        var sub = observable.subscribe(handler);\n        return function () { return sub.unsubscribe(); };\n    });\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar QueryManager = (function () {\n    function QueryManager(_a) {\n        var link = _a.link, _b = _a.queryDeduplication, queryDeduplication = _b === void 0 ? false : _b, store = _a.store, _c = _a.onBroadcast, onBroadcast = _c === void 0 ? function () { return undefined; } : _c, _d = _a.ssrMode, ssrMode = _d === void 0 ? false : _d, _e = _a.clientAwareness, clientAwareness = _e === void 0 ? {} : _e, localState = _a.localState, assumeImmutableResults = _a.assumeImmutableResults;\n        this.mutationStore = new MutationStore();\n        this.queryStore = new QueryStore();\n        this.clientAwareness = {};\n        this.idCounter = 1;\n        this.queries = new Map();\n        this.fetchQueryRejectFns = new Map();\n        this.transformCache = new (canUseWeakMap ? WeakMap : Map)();\n        this.inFlightLinkObservables = new Map();\n        this.pollingInfoByQueryId = new Map();\n        this.link = link;\n        this.queryDeduplication = queryDeduplication;\n        this.dataStore = store;\n        this.onBroadcast = onBroadcast;\n        this.clientAwareness = clientAwareness;\n        this.localState = localState || new LocalState({ cache: store.getCache() });\n        this.ssrMode = ssrMode;\n        this.assumeImmutableResults = !!assumeImmutableResults;\n    }\n    QueryManager.prototype.stop = function () {\n        var _this = this;\n        this.queries.forEach(function (_info, queryId) {\n            _this.stopQueryNoBroadcast(queryId);\n        });\n        this.fetchQueryRejectFns.forEach(function (reject) {\n            reject(process.env.NODE_ENV === \"production\" ? new InvariantError(8) : new InvariantError('QueryManager stopped while query was in flight'));\n        });\n    };\n    QueryManager.prototype.mutate = function (_a) {\n        var mutation = _a.mutation, variables = _a.variables, optimisticResponse = _a.optimisticResponse, updateQueriesByName = _a.updateQueries, _b = _a.refetchQueries, refetchQueries = _b === void 0 ? [] : _b, _c = _a.awaitRefetchQueries, awaitRefetchQueries = _c === void 0 ? false : _c, updateWithProxyFn = _a.update, _d = _a.errorPolicy, errorPolicy = _d === void 0 ? 'none' : _d, fetchPolicy = _a.fetchPolicy, _e = _a.context, context = _e === void 0 ? {} : _e;\n        return __awaiter(this, void 0, void 0, function () {\n            var mutationId, generateUpdateQueriesInfo, self;\n            var _this = this;\n            return __generator(this, function (_f) {\n                switch (_f.label) {\n                    case 0:\n                        process.env.NODE_ENV === \"production\" ? invariant(mutation, 9) : invariant(mutation, 'mutation option is required. You must specify your GraphQL document in the mutation option.');\n                        process.env.NODE_ENV === \"production\" ? invariant(!fetchPolicy || fetchPolicy === 'no-cache', 10) : invariant(!fetchPolicy || fetchPolicy === 'no-cache', \"Mutations only support a 'no-cache' fetchPolicy. If you don't want to disable the cache, remove your fetchPolicy setting to proceed with the default mutation behavior.\");\n                        mutationId = this.generateQueryId();\n                        mutation = this.transform(mutation).document;\n                        this.setQuery(mutationId, function () { return ({ document: mutation }); });\n                        variables = this.getVariables(mutation, variables);\n                        if (!this.transform(mutation).hasClientExports) return [3, 2];\n                        return [4, this.localState.addExportedVariables(mutation, variables, context)];\n                    case 1:\n                        variables = _f.sent();\n                        _f.label = 2;\n                    case 2:\n                        generateUpdateQueriesInfo = function () {\n                            var ret = {};\n                            if (updateQueriesByName) {\n                                _this.queries.forEach(function (_a, queryId) {\n                                    var observableQuery = _a.observableQuery;\n                                    if (observableQuery) {\n                                        var queryName = observableQuery.queryName;\n                                        if (queryName &&\n                                            hasOwnProperty.call(updateQueriesByName, queryName)) {\n                                            ret[queryId] = {\n                                                updater: updateQueriesByName[queryName],\n                                                query: _this.queryStore.get(queryId),\n                                            };\n                                        }\n                                    }\n                                });\n                            }\n                            return ret;\n                        };\n                        this.mutationStore.initMutation(mutationId, mutation, variables);\n                        this.dataStore.markMutationInit({\n                            mutationId: mutationId,\n                            document: mutation,\n                            variables: variables,\n                            updateQueries: generateUpdateQueriesInfo(),\n                            update: updateWithProxyFn,\n                            optimisticResponse: optimisticResponse,\n                        });\n                        this.broadcastQueries();\n                        self = this;\n                        return [2, new Promise(function (resolve, reject) {\n                                var storeResult;\n                                var error;\n                                self.getObservableFromLink(mutation, __assign(__assign({}, context), { optimisticResponse: optimisticResponse }), variables, false).subscribe({\n                                    next: function (result) {\n                                        if (graphQLResultHasError(result) && errorPolicy === 'none') {\n                                            error = new ApolloError({\n                                                graphQLErrors: result.errors,\n                                            });\n                                            return;\n                                        }\n                                        self.mutationStore.markMutationResult(mutationId);\n                                        if (fetchPolicy !== 'no-cache') {\n                                            self.dataStore.markMutationResult({\n                                                mutationId: mutationId,\n                                                result: result,\n                                                document: mutation,\n                                                variables: variables,\n                                                updateQueries: generateUpdateQueriesInfo(),\n                                                update: updateWithProxyFn,\n                                            });\n                                        }\n                                        storeResult = result;\n                                    },\n                                    error: function (err) {\n                                        self.mutationStore.markMutationError(mutationId, err);\n                                        self.dataStore.markMutationComplete({\n                                            mutationId: mutationId,\n                                            optimisticResponse: optimisticResponse,\n                                        });\n                                        self.broadcastQueries();\n                                        self.setQuery(mutationId, function () { return ({ document: null }); });\n                                        reject(new ApolloError({\n                                            networkError: err,\n                                        }));\n                                    },\n                                    complete: function () {\n                                        if (error) {\n                                            self.mutationStore.markMutationError(mutationId, error);\n                                        }\n                                        self.dataStore.markMutationComplete({\n                                            mutationId: mutationId,\n                                            optimisticResponse: optimisticResponse,\n                                        });\n                                        self.broadcastQueries();\n                                        if (error) {\n                                            reject(error);\n                                            return;\n                                        }\n                                        if (typeof refetchQueries === 'function') {\n                                            refetchQueries = refetchQueries(storeResult);\n                                        }\n                                        var refetchQueryPromises = [];\n                                        if (isNonEmptyArray(refetchQueries)) {\n                                            refetchQueries.forEach(function (refetchQuery) {\n                                                if (typeof refetchQuery === 'string') {\n                                                    self.queries.forEach(function (_a) {\n                                                        var observableQuery = _a.observableQuery;\n                                                        if (observableQuery &&\n                                                            observableQuery.queryName === refetchQuery) {\n                                                            refetchQueryPromises.push(observableQuery.refetch());\n                                                        }\n                                                    });\n                                                }\n                                                else {\n                                                    var queryOptions = {\n                                                        query: refetchQuery.query,\n                                                        variables: refetchQuery.variables,\n                                                        fetchPolicy: 'network-only',\n                                                    };\n                                                    if (refetchQuery.context) {\n                                                        queryOptions.context = refetchQuery.context;\n                                                    }\n                                                    refetchQueryPromises.push(self.query(queryOptions));\n                                                }\n                                            });\n                                        }\n                                        Promise.all(awaitRefetchQueries ? refetchQueryPromises : []).then(function () {\n                                            self.setQuery(mutationId, function () { return ({ document: null }); });\n                                            if (errorPolicy === 'ignore' &&\n                                                storeResult &&\n                                                graphQLResultHasError(storeResult)) {\n                                                delete storeResult.errors;\n                                            }\n                                            resolve(storeResult);\n                                        });\n                                    },\n                                });\n                            })];\n                }\n            });\n        });\n    };\n    QueryManager.prototype.fetchQuery = function (queryId, options, fetchType, fetchMoreForQueryId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, metadata, _b, fetchPolicy, _c, context, query, variables, storeResult, isNetworkOnly, needToFetch, _d, complete, result, shouldFetch, requestId, cancel, networkResult;\n            var _this = this;\n            return __generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        _a = options.metadata, metadata = _a === void 0 ? null : _a, _b = options.fetchPolicy, fetchPolicy = _b === void 0 ? 'cache-first' : _b, _c = options.context, context = _c === void 0 ? {} : _c;\n                        query = this.transform(options.query).document;\n                        variables = this.getVariables(query, options.variables);\n                        if (!this.transform(query).hasClientExports) return [3, 2];\n                        return [4, this.localState.addExportedVariables(query, variables, context)];\n                    case 1:\n                        variables = _e.sent();\n                        _e.label = 2;\n                    case 2:\n                        options = __assign(__assign({}, options), { variables: variables });\n                        isNetworkOnly = fetchPolicy === 'network-only' || fetchPolicy === 'no-cache';\n                        needToFetch = isNetworkOnly;\n                        if (!isNetworkOnly) {\n                            _d = this.dataStore.getCache().diff({\n                                query: query,\n                                variables: variables,\n                                returnPartialData: true,\n                                optimistic: false,\n                            }), complete = _d.complete, result = _d.result;\n                            needToFetch = !complete || fetchPolicy === 'cache-and-network';\n                            storeResult = result;\n                        }\n                        shouldFetch = needToFetch && fetchPolicy !== 'cache-only' && fetchPolicy !== 'standby';\n                        if (hasDirectives(['live'], query))\n                            shouldFetch = true;\n                        requestId = this.idCounter++;\n                        cancel = fetchPolicy !== 'no-cache'\n                            ? this.updateQueryWatch(queryId, query, options)\n                            : undefined;\n                        this.setQuery(queryId, function () { return ({\n                            document: query,\n                            lastRequestId: requestId,\n                            invalidated: true,\n                            cancel: cancel,\n                        }); });\n                        this.invalidate(fetchMoreForQueryId);\n                        this.queryStore.initQuery({\n                            queryId: queryId,\n                            document: query,\n                            storePreviousVariables: shouldFetch,\n                            variables: variables,\n                            isPoll: fetchType === FetchType.poll,\n                            isRefetch: fetchType === FetchType.refetch,\n                            metadata: metadata,\n                            fetchMoreForQueryId: fetchMoreForQueryId,\n                        });\n                        this.broadcastQueries();\n                        if (shouldFetch) {\n                            networkResult = this.fetchRequest({\n                                requestId: requestId,\n                                queryId: queryId,\n                                document: query,\n                                options: options,\n                                fetchMoreForQueryId: fetchMoreForQueryId,\n                            }).catch(function (error) {\n                                if (isApolloError(error)) {\n                                    throw error;\n                                }\n                                else {\n                                    if (requestId >= _this.getQuery(queryId).lastRequestId) {\n                                        _this.queryStore.markQueryError(queryId, error, fetchMoreForQueryId);\n                                        _this.invalidate(queryId);\n                                        _this.invalidate(fetchMoreForQueryId);\n                                        _this.broadcastQueries();\n                                    }\n                                    throw new ApolloError({ networkError: error });\n                                }\n                            });\n                            if (fetchPolicy !== 'cache-and-network') {\n                                return [2, networkResult];\n                            }\n                            networkResult.catch(function () { });\n                        }\n                        this.queryStore.markQueryResultClient(queryId, !shouldFetch);\n                        this.invalidate(queryId);\n                        this.invalidate(fetchMoreForQueryId);\n                        if (this.transform(query).hasForcedResolvers) {\n                            return [2, this.localState.runResolvers({\n                                    document: query,\n                                    remoteResult: { data: storeResult },\n                                    context: context,\n                                    variables: variables,\n                                    onlyRunForcedResolvers: true,\n                                }).then(function (result) {\n                                    _this.markQueryResult(queryId, result, options, fetchMoreForQueryId);\n                                    _this.broadcastQueries();\n                                    return result;\n                                })];\n                        }\n                        this.broadcastQueries();\n                        return [2, { data: storeResult }];\n                }\n            });\n        });\n    };\n    QueryManager.prototype.markQueryResult = function (queryId, result, _a, fetchMoreForQueryId) {\n        var fetchPolicy = _a.fetchPolicy, variables = _a.variables, errorPolicy = _a.errorPolicy;\n        if (fetchPolicy === 'no-cache') {\n            this.setQuery(queryId, function () { return ({\n                newData: { result: result.data, complete: true },\n            }); });\n        }\n        else {\n            this.dataStore.markQueryResult(result, this.getQuery(queryId).document, variables, fetchMoreForQueryId, errorPolicy === 'ignore' || errorPolicy === 'all');\n        }\n    };\n    QueryManager.prototype.queryListenerForObserver = function (queryId, options, observer) {\n        var _this = this;\n        function invoke(method, argument) {\n            if (observer[method]) {\n                try {\n                    observer[method](argument);\n                }\n                catch (e) {\n                    process.env.NODE_ENV === \"production\" || invariant.error(e);\n                }\n            }\n            else if (method === 'error') {\n                process.env.NODE_ENV === \"production\" || invariant.error(argument);\n            }\n        }\n        return function (queryStoreValue, newData) {\n            _this.invalidate(queryId, false);\n            if (!queryStoreValue)\n                return;\n            var _a = _this.getQuery(queryId), observableQuery = _a.observableQuery, document = _a.document;\n            var fetchPolicy = observableQuery\n                ? observableQuery.options.fetchPolicy\n                : options.fetchPolicy;\n            if (fetchPolicy === 'standby')\n                return;\n            var loading = isNetworkRequestInFlight(queryStoreValue.networkStatus);\n            var lastResult = observableQuery && observableQuery.getLastResult();\n            var networkStatusChanged = !!(lastResult &&\n                lastResult.networkStatus !== queryStoreValue.networkStatus);\n            var shouldNotifyIfLoading = options.returnPartialData ||\n                (!newData && queryStoreValue.previousVariables) ||\n                (networkStatusChanged && options.notifyOnNetworkStatusChange) ||\n                fetchPolicy === 'cache-only' ||\n                fetchPolicy === 'cache-and-network';\n            if (loading && !shouldNotifyIfLoading) {\n                return;\n            }\n            var hasGraphQLErrors = isNonEmptyArray(queryStoreValue.graphQLErrors);\n            var errorPolicy = observableQuery\n                && observableQuery.options.errorPolicy\n                || options.errorPolicy\n                || 'none';\n            if (errorPolicy === 'none' && hasGraphQLErrors || queryStoreValue.networkError) {\n                return invoke('error', new ApolloError({\n                    graphQLErrors: queryStoreValue.graphQLErrors,\n                    networkError: queryStoreValue.networkError,\n                }));\n            }\n            try {\n                var data = void 0;\n                var isMissing = void 0;\n                if (newData) {\n                    if (fetchPolicy !== 'no-cache' && fetchPolicy !== 'network-only') {\n                        _this.setQuery(queryId, function () { return ({ newData: null }); });\n                    }\n                    data = newData.result;\n                    isMissing = !newData.complete;\n                }\n                else {\n                    var lastError = observableQuery && observableQuery.getLastError();\n                    var errorStatusChanged = errorPolicy !== 'none' &&\n                        (lastError && lastError.graphQLErrors) !==\n                            queryStoreValue.graphQLErrors;\n                    if (lastResult && lastResult.data && !errorStatusChanged) {\n                        data = lastResult.data;\n                        isMissing = false;\n                    }\n                    else {\n                        var diffResult = _this.dataStore.getCache().diff({\n                            query: document,\n                            variables: queryStoreValue.previousVariables ||\n                                queryStoreValue.variables,\n                            returnPartialData: true,\n                            optimistic: true,\n                        });\n                        data = diffResult.result;\n                        isMissing = !diffResult.complete;\n                    }\n                }\n                var stale = isMissing && !(options.returnPartialData ||\n                    fetchPolicy === 'cache-only');\n                var resultFromStore = {\n                    data: stale ? lastResult && lastResult.data : data,\n                    loading: loading,\n                    networkStatus: queryStoreValue.networkStatus,\n                    stale: stale,\n                };\n                if (errorPolicy === 'all' && hasGraphQLErrors) {\n                    resultFromStore.errors = queryStoreValue.graphQLErrors;\n                }\n                invoke('next', resultFromStore);\n            }\n            catch (networkError) {\n                invoke('error', new ApolloError({ networkError: networkError }));\n            }\n        };\n    };\n    QueryManager.prototype.transform = function (document) {\n        var transformCache = this.transformCache;\n        if (!transformCache.has(document)) {\n            var cache = this.dataStore.getCache();\n            var transformed = cache.transformDocument(document);\n            var forLink = removeConnectionDirectiveFromDocument(cache.transformForLink(transformed));\n            var clientQuery = this.localState.clientQuery(transformed);\n            var serverQuery = this.localState.serverQuery(forLink);\n            var cacheEntry_1 = {\n                document: transformed,\n                hasClientExports: hasClientExports(transformed),\n                hasForcedResolvers: this.localState.shouldForceResolvers(transformed),\n                clientQuery: clientQuery,\n                serverQuery: serverQuery,\n                defaultVars: getDefaultValues(getOperationDefinition(transformed)),\n            };\n            var add = function (doc) {\n                if (doc && !transformCache.has(doc)) {\n                    transformCache.set(doc, cacheEntry_1);\n                }\n            };\n            add(document);\n            add(transformed);\n            add(clientQuery);\n            add(serverQuery);\n        }\n        return transformCache.get(document);\n    };\n    QueryManager.prototype.getVariables = function (document, variables) {\n        return __assign(__assign({}, this.transform(document).defaultVars), variables);\n    };\n    QueryManager.prototype.watchQuery = function (options, shouldSubscribe) {\n        if (shouldSubscribe === void 0) { shouldSubscribe = true; }\n        process.env.NODE_ENV === \"production\" ? invariant(options.fetchPolicy !== 'standby', 11) : invariant(options.fetchPolicy !== 'standby', 'client.watchQuery cannot be called with fetchPolicy set to \"standby\"');\n        options.variables = this.getVariables(options.query, options.variables);\n        if (typeof options.notifyOnNetworkStatusChange === 'undefined') {\n            options.notifyOnNetworkStatusChange = false;\n        }\n        var transformedOptions = __assign({}, options);\n        return new ObservableQuery({\n            queryManager: this,\n            options: transformedOptions,\n            shouldSubscribe: shouldSubscribe,\n        });\n    };\n    QueryManager.prototype.query = function (options) {\n        var _this = this;\n        process.env.NODE_ENV === \"production\" ? invariant(options.query, 12) : invariant(options.query, 'query option is required. You must specify your GraphQL document ' +\n            'in the query option.');\n        process.env.NODE_ENV === \"production\" ? invariant(options.query.kind === 'Document', 13) : invariant(options.query.kind === 'Document', 'You must wrap the query string in a \"gql\" tag.');\n        process.env.NODE_ENV === \"production\" ? invariant(!options.returnPartialData, 14) : invariant(!options.returnPartialData, 'returnPartialData option only supported on watchQuery.');\n        process.env.NODE_ENV === \"production\" ? invariant(!options.pollInterval, 15) : invariant(!options.pollInterval, 'pollInterval option only supported on watchQuery.');\n        return new Promise(function (resolve, reject) {\n            var watchedQuery = _this.watchQuery(options, false);\n            _this.fetchQueryRejectFns.set(\"query:\" + watchedQuery.queryId, reject);\n            watchedQuery\n                .result()\n                .then(resolve, reject)\n                .then(function () {\n                return _this.fetchQueryRejectFns.delete(\"query:\" + watchedQuery.queryId);\n            });\n        });\n    };\n    QueryManager.prototype.generateQueryId = function () {\n        return String(this.idCounter++);\n    };\n    QueryManager.prototype.stopQueryInStore = function (queryId) {\n        this.stopQueryInStoreNoBroadcast(queryId);\n        this.broadcastQueries();\n    };\n    QueryManager.prototype.stopQueryInStoreNoBroadcast = function (queryId) {\n        this.stopPollingQuery(queryId);\n        this.queryStore.stopQuery(queryId);\n        this.invalidate(queryId);\n    };\n    QueryManager.prototype.addQueryListener = function (queryId, listener) {\n        this.setQuery(queryId, function (_a) {\n            var listeners = _a.listeners;\n            listeners.add(listener);\n            return { invalidated: false };\n        });\n    };\n    QueryManager.prototype.updateQueryWatch = function (queryId, document, options) {\n        var _this = this;\n        var cancel = this.getQuery(queryId).cancel;\n        if (cancel)\n            cancel();\n        var previousResult = function () {\n            var previousResult = null;\n            var observableQuery = _this.getQuery(queryId).observableQuery;\n            if (observableQuery) {\n                var lastResult = observableQuery.getLastResult();\n                if (lastResult) {\n                    previousResult = lastResult.data;\n                }\n            }\n            return previousResult;\n        };\n        return this.dataStore.getCache().watch({\n            query: document,\n            variables: options.variables,\n            optimistic: true,\n            previousResult: previousResult,\n            callback: function (newData) {\n                _this.setQuery(queryId, function () { return ({ invalidated: true, newData: newData }); });\n            },\n        });\n    };\n    QueryManager.prototype.addObservableQuery = function (queryId, observableQuery) {\n        this.setQuery(queryId, function () { return ({ observableQuery: observableQuery }); });\n    };\n    QueryManager.prototype.removeObservableQuery = function (queryId) {\n        var cancel = this.getQuery(queryId).cancel;\n        this.setQuery(queryId, function () { return ({ observableQuery: null }); });\n        if (cancel)\n            cancel();\n    };\n    QueryManager.prototype.clearStore = function () {\n        this.fetchQueryRejectFns.forEach(function (reject) {\n            reject(process.env.NODE_ENV === \"production\" ? new InvariantError(16) : new InvariantError('Store reset while query was in flight (not completed in link chain)'));\n        });\n        var resetIds = [];\n        this.queries.forEach(function (_a, queryId) {\n            var observableQuery = _a.observableQuery;\n            if (observableQuery)\n                resetIds.push(queryId);\n        });\n        this.queryStore.reset(resetIds);\n        this.mutationStore.reset();\n        return this.dataStore.reset();\n    };\n    QueryManager.prototype.resetStore = function () {\n        var _this = this;\n        return this.clearStore().then(function () {\n            return _this.reFetchObservableQueries();\n        });\n    };\n    QueryManager.prototype.reFetchObservableQueries = function (includeStandby) {\n        var _this = this;\n        if (includeStandby === void 0) { includeStandby = false; }\n        var observableQueryPromises = [];\n        this.queries.forEach(function (_a, queryId) {\n            var observableQuery = _a.observableQuery;\n            if (observableQuery) {\n                var fetchPolicy = observableQuery.options.fetchPolicy;\n                observableQuery.resetLastResults();\n                if (fetchPolicy !== 'cache-only' &&\n                    (includeStandby || fetchPolicy !== 'standby')) {\n                    observableQueryPromises.push(observableQuery.refetch());\n                }\n                _this.setQuery(queryId, function () { return ({ newData: null }); });\n                _this.invalidate(queryId);\n            }\n        });\n        this.broadcastQueries();\n        return Promise.all(observableQueryPromises);\n    };\n    QueryManager.prototype.observeQuery = function (queryId, options, observer) {\n        this.addQueryListener(queryId, this.queryListenerForObserver(queryId, options, observer));\n        return this.fetchQuery(queryId, options);\n    };\n    QueryManager.prototype.startQuery = function (queryId, options, listener) {\n        process.env.NODE_ENV === \"production\" || invariant.warn(\"The QueryManager.startQuery method has been deprecated\");\n        this.addQueryListener(queryId, listener);\n        this.fetchQuery(queryId, options)\n            .catch(function () { return undefined; });\n        return queryId;\n    };\n    QueryManager.prototype.startGraphQLSubscription = function (_a) {\n        var _this = this;\n        var query = _a.query, fetchPolicy = _a.fetchPolicy, variables = _a.variables;\n        query = this.transform(query).document;\n        variables = this.getVariables(query, variables);\n        var makeObservable = function (variables) {\n            return _this.getObservableFromLink(query, {}, variables, false).map(function (result) {\n                if (!fetchPolicy || fetchPolicy !== 'no-cache') {\n                    _this.dataStore.markSubscriptionResult(result, query, variables);\n                    _this.broadcastQueries();\n                }\n                if (graphQLResultHasError(result)) {\n                    throw new ApolloError({\n                        graphQLErrors: result.errors,\n                    });\n                }\n                return result;\n            });\n        };\n        if (this.transform(query).hasClientExports) {\n            var observablePromise_1 = this.localState.addExportedVariables(query, variables).then(makeObservable);\n            return new Observable(function (observer) {\n                var sub = null;\n                observablePromise_1.then(function (observable) { return sub = observable.subscribe(observer); }, observer.error);\n                return function () { return sub && sub.unsubscribe(); };\n            });\n        }\n        return makeObservable(variables);\n    };\n    QueryManager.prototype.stopQuery = function (queryId) {\n        this.stopQueryNoBroadcast(queryId);\n        this.broadcastQueries();\n    };\n    QueryManager.prototype.stopQueryNoBroadcast = function (queryId) {\n        this.stopQueryInStoreNoBroadcast(queryId);\n        this.removeQuery(queryId);\n    };\n    QueryManager.prototype.removeQuery = function (queryId) {\n        this.fetchQueryRejectFns.delete(\"query:\" + queryId);\n        this.fetchQueryRejectFns.delete(\"fetchRequest:\" + queryId);\n        this.getQuery(queryId).subscriptions.forEach(function (x) { return x.unsubscribe(); });\n        this.queries.delete(queryId);\n    };\n    QueryManager.prototype.getCurrentQueryResult = function (observableQuery, optimistic) {\n        if (optimistic === void 0) { optimistic = true; }\n        var _a = observableQuery.options, variables = _a.variables, query = _a.query, fetchPolicy = _a.fetchPolicy, returnPartialData = _a.returnPartialData;\n        var lastResult = observableQuery.getLastResult();\n        var newData = this.getQuery(observableQuery.queryId).newData;\n        if (newData && newData.complete) {\n            return { data: newData.result, partial: false };\n        }\n        if (fetchPolicy === 'no-cache' || fetchPolicy === 'network-only') {\n            return { data: undefined, partial: false };\n        }\n        var _b = this.dataStore.getCache().diff({\n            query: query,\n            variables: variables,\n            previousResult: lastResult ? lastResult.data : undefined,\n            returnPartialData: true,\n            optimistic: optimistic,\n        }), result = _b.result, complete = _b.complete;\n        return {\n            data: (complete || returnPartialData) ? result : void 0,\n            partial: !complete,\n        };\n    };\n    QueryManager.prototype.getQueryWithPreviousResult = function (queryIdOrObservable) {\n        var observableQuery;\n        if (typeof queryIdOrObservable === 'string') {\n            var foundObserveableQuery = this.getQuery(queryIdOrObservable).observableQuery;\n            process.env.NODE_ENV === \"production\" ? invariant(foundObserveableQuery, 17) : invariant(foundObserveableQuery, \"ObservableQuery with this id doesn't exist: \" + queryIdOrObservable);\n            observableQuery = foundObserveableQuery;\n        }\n        else {\n            observableQuery = queryIdOrObservable;\n        }\n        var _a = observableQuery.options, variables = _a.variables, query = _a.query;\n        return {\n            previousResult: this.getCurrentQueryResult(observableQuery, false).data,\n            variables: variables,\n            document: query,\n        };\n    };\n    QueryManager.prototype.broadcastQueries = function () {\n        var _this = this;\n        this.onBroadcast();\n        this.queries.forEach(function (info, id) {\n            if (info.invalidated) {\n                info.listeners.forEach(function (listener) {\n                    if (listener) {\n                        listener(_this.queryStore.get(id), info.newData);\n                    }\n                });\n            }\n        });\n    };\n    QueryManager.prototype.getLocalState = function () {\n        return this.localState;\n    };\n    QueryManager.prototype.getObservableFromLink = function (query, context, variables, deduplication) {\n        var _this = this;\n        if (deduplication === void 0) { deduplication = this.queryDeduplication; }\n        var observable;\n        var serverQuery = this.transform(query).serverQuery;\n        if (serverQuery) {\n            var _a = this, inFlightLinkObservables_1 = _a.inFlightLinkObservables, link = _a.link;\n            var operation = {\n                query: serverQuery,\n                variables: variables,\n                operationName: getOperationName(serverQuery) || void 0,\n                context: this.prepareContext(__assign(__assign({}, context), { forceFetch: !deduplication })),\n            };\n            context = operation.context;\n            if (deduplication) {\n                var byVariables_1 = inFlightLinkObservables_1.get(serverQuery) || new Map();\n                inFlightLinkObservables_1.set(serverQuery, byVariables_1);\n                var varJson_1 = JSON.stringify(variables);\n                observable = byVariables_1.get(varJson_1);\n                if (!observable) {\n                    byVariables_1.set(varJson_1, observable = multiplex(execute(link, operation)));\n                    var cleanup = function () {\n                        byVariables_1.delete(varJson_1);\n                        if (!byVariables_1.size)\n                            inFlightLinkObservables_1.delete(serverQuery);\n                        cleanupSub_1.unsubscribe();\n                    };\n                    var cleanupSub_1 = observable.subscribe({\n                        next: cleanup,\n                        error: cleanup,\n                        complete: cleanup,\n                    });\n                }\n            }\n            else {\n                observable = multiplex(execute(link, operation));\n            }\n        }\n        else {\n            observable = Observable.of({ data: {} });\n            context = this.prepareContext(context);\n        }\n        var clientQuery = this.transform(query).clientQuery;\n        if (clientQuery) {\n            observable = asyncMap(observable, function (result) {\n                return _this.localState.runResolvers({\n                    document: clientQuery,\n                    remoteResult: result,\n                    context: context,\n                    variables: variables,\n                });\n            });\n        }\n        return observable;\n    };\n    QueryManager.prototype.fetchRequest = function (_a) {\n        var _this = this;\n        var requestId = _a.requestId, queryId = _a.queryId, document = _a.document, options = _a.options, fetchMoreForQueryId = _a.fetchMoreForQueryId;\n        var variables = options.variables, _b = options.errorPolicy, errorPolicy = _b === void 0 ? 'none' : _b, fetchPolicy = options.fetchPolicy;\n        var resultFromStore;\n        var errorsFromStore;\n        return new Promise(function (resolve, reject) {\n            var observable = _this.getObservableFromLink(document, options.context, variables);\n            var fqrfId = \"fetchRequest:\" + queryId;\n            _this.fetchQueryRejectFns.set(fqrfId, reject);\n            var cleanup = function () {\n                _this.fetchQueryRejectFns.delete(fqrfId);\n                _this.setQuery(queryId, function (_a) {\n                    var subscriptions = _a.subscriptions;\n                    subscriptions.delete(subscription);\n                });\n            };\n            var subscription = observable.map(function (result) {\n                if (requestId >= _this.getQuery(queryId).lastRequestId) {\n                    _this.markQueryResult(queryId, result, options, fetchMoreForQueryId);\n                    _this.queryStore.markQueryResult(queryId, result, fetchMoreForQueryId);\n                    _this.invalidate(queryId);\n                    _this.invalidate(fetchMoreForQueryId);\n                    _this.broadcastQueries();\n                }\n                if (errorPolicy === 'none' && isNonEmptyArray(result.errors)) {\n                    return reject(new ApolloError({\n                        graphQLErrors: result.errors,\n                    }));\n                }\n                if (errorPolicy === 'all') {\n                    errorsFromStore = result.errors;\n                }\n                if (fetchMoreForQueryId || fetchPolicy === 'no-cache') {\n                    resultFromStore = result.data;\n                }\n                else {\n                    var _a = _this.dataStore.getCache().diff({\n                        variables: variables,\n                        query: document,\n                        optimistic: false,\n                        returnPartialData: true,\n                    }), result_1 = _a.result, complete = _a.complete;\n                    if (complete || options.returnPartialData) {\n                        resultFromStore = result_1;\n                    }\n                }\n            }).subscribe({\n                error: function (error) {\n                    cleanup();\n                    reject(error);\n                },\n                complete: function () {\n                    cleanup();\n                    resolve({\n                        data: resultFromStore,\n                        errors: errorsFromStore,\n                        loading: false,\n                        networkStatus: NetworkStatus.ready,\n                        stale: false,\n                    });\n                },\n            });\n            _this.setQuery(queryId, function (_a) {\n                var subscriptions = _a.subscriptions;\n                subscriptions.add(subscription);\n            });\n        });\n    };\n    QueryManager.prototype.getQuery = function (queryId) {\n        return (this.queries.get(queryId) || {\n            listeners: new Set(),\n            invalidated: false,\n            document: null,\n            newData: null,\n            lastRequestId: 1,\n            observableQuery: null,\n            subscriptions: new Set(),\n        });\n    };\n    QueryManager.prototype.setQuery = function (queryId, updater) {\n        var prev = this.getQuery(queryId);\n        var newInfo = __assign(__assign({}, prev), updater(prev));\n        this.queries.set(queryId, newInfo);\n    };\n    QueryManager.prototype.invalidate = function (queryId, invalidated) {\n        if (invalidated === void 0) { invalidated = true; }\n        if (queryId) {\n            this.setQuery(queryId, function () { return ({ invalidated: invalidated }); });\n        }\n    };\n    QueryManager.prototype.prepareContext = function (context) {\n        if (context === void 0) { context = {}; }\n        var newContext = this.localState.prepareContext(context);\n        return __assign(__assign({}, newContext), { clientAwareness: this.clientAwareness });\n    };\n    QueryManager.prototype.checkInFlight = function (queryId) {\n        var query = this.queryStore.get(queryId);\n        return (query &&\n            query.networkStatus !== NetworkStatus.ready &&\n            query.networkStatus !== NetworkStatus.error);\n    };\n    QueryManager.prototype.startPollingQuery = function (options, queryId, listener) {\n        var _this = this;\n        var pollInterval = options.pollInterval;\n        process.env.NODE_ENV === \"production\" ? invariant(pollInterval, 18) : invariant(pollInterval, 'Attempted to start a polling query without a polling interval.');\n        if (!this.ssrMode) {\n            var info = this.pollingInfoByQueryId.get(queryId);\n            if (!info) {\n                this.pollingInfoByQueryId.set(queryId, (info = {}));\n            }\n            info.interval = pollInterval;\n            info.options = __assign(__assign({}, options), { fetchPolicy: 'network-only' });\n            var maybeFetch_1 = function () {\n                var info = _this.pollingInfoByQueryId.get(queryId);\n                if (info) {\n                    if (_this.checkInFlight(queryId)) {\n                        poll_1();\n                    }\n                    else {\n                        _this.fetchQuery(queryId, info.options, FetchType.poll).then(poll_1, poll_1);\n                    }\n                }\n            };\n            var poll_1 = function () {\n                var info = _this.pollingInfoByQueryId.get(queryId);\n                if (info) {\n                    clearTimeout(info.timeout);\n                    info.timeout = setTimeout(maybeFetch_1, info.interval);\n                }\n            };\n            if (listener) {\n                this.addQueryListener(queryId, listener);\n            }\n            poll_1();\n        }\n        return queryId;\n    };\n    QueryManager.prototype.stopPollingQuery = function (queryId) {\n        this.pollingInfoByQueryId.delete(queryId);\n    };\n    return QueryManager;\n}());\n\nvar DataStore = (function () {\n    function DataStore(initialCache) {\n        this.cache = initialCache;\n    }\n    DataStore.prototype.getCache = function () {\n        return this.cache;\n    };\n    DataStore.prototype.markQueryResult = function (result, document, variables, fetchMoreForQueryId, ignoreErrors) {\n        if (ignoreErrors === void 0) { ignoreErrors = false; }\n        var writeWithErrors = !graphQLResultHasError(result);\n        if (ignoreErrors && graphQLResultHasError(result) && result.data) {\n            writeWithErrors = true;\n        }\n        if (!fetchMoreForQueryId && writeWithErrors) {\n            this.cache.write({\n                result: result.data,\n                dataId: 'ROOT_QUERY',\n                query: document,\n                variables: variables,\n            });\n        }\n    };\n    DataStore.prototype.markSubscriptionResult = function (result, document, variables) {\n        if (!graphQLResultHasError(result)) {\n            this.cache.write({\n                result: result.data,\n                dataId: 'ROOT_SUBSCRIPTION',\n                query: document,\n                variables: variables,\n            });\n        }\n    };\n    DataStore.prototype.markMutationInit = function (mutation) {\n        var _this = this;\n        if (mutation.optimisticResponse) {\n            var optimistic_1;\n            if (typeof mutation.optimisticResponse === 'function') {\n                optimistic_1 = mutation.optimisticResponse(mutation.variables);\n            }\n            else {\n                optimistic_1 = mutation.optimisticResponse;\n            }\n            this.cache.recordOptimisticTransaction(function (c) {\n                var orig = _this.cache;\n                _this.cache = c;\n                try {\n                    _this.markMutationResult({\n                        mutationId: mutation.mutationId,\n                        result: { data: optimistic_1 },\n                        document: mutation.document,\n                        variables: mutation.variables,\n                        updateQueries: mutation.updateQueries,\n                        update: mutation.update,\n                    });\n                }\n                finally {\n                    _this.cache = orig;\n                }\n            }, mutation.mutationId);\n        }\n    };\n    DataStore.prototype.markMutationResult = function (mutation) {\n        var _this = this;\n        if (!graphQLResultHasError(mutation.result)) {\n            var cacheWrites_1 = [{\n                    result: mutation.result.data,\n                    dataId: 'ROOT_MUTATION',\n                    query: mutation.document,\n                    variables: mutation.variables,\n                }];\n            var updateQueries_1 = mutation.updateQueries;\n            if (updateQueries_1) {\n                Object.keys(updateQueries_1).forEach(function (id) {\n                    var _a = updateQueries_1[id], query = _a.query, updater = _a.updater;\n                    var _b = _this.cache.diff({\n                        query: query.document,\n                        variables: query.variables,\n                        returnPartialData: true,\n                        optimistic: false,\n                    }), currentQueryResult = _b.result, complete = _b.complete;\n                    if (complete) {\n                        var nextQueryResult = tryFunctionOrLogError(function () {\n                            return updater(currentQueryResult, {\n                                mutationResult: mutation.result,\n                                queryName: getOperationName(query.document) || undefined,\n                                queryVariables: query.variables,\n                            });\n                        });\n                        if (nextQueryResult) {\n                            cacheWrites_1.push({\n                                result: nextQueryResult,\n                                dataId: 'ROOT_QUERY',\n                                query: query.document,\n                                variables: query.variables,\n                            });\n                        }\n                    }\n                });\n            }\n            this.cache.performTransaction(function (c) {\n                cacheWrites_1.forEach(function (write) { return c.write(write); });\n                var update = mutation.update;\n                if (update) {\n                    tryFunctionOrLogError(function () { return update(c, mutation.result); });\n                }\n            });\n        }\n    };\n    DataStore.prototype.markMutationComplete = function (_a) {\n        var mutationId = _a.mutationId, optimisticResponse = _a.optimisticResponse;\n        if (optimisticResponse) {\n            this.cache.removeOptimistic(mutationId);\n        }\n    };\n    DataStore.prototype.markUpdateQueryResult = function (document, variables, newResult) {\n        this.cache.write({\n            result: newResult,\n            dataId: 'ROOT_QUERY',\n            variables: variables,\n            query: document,\n        });\n    };\n    DataStore.prototype.reset = function () {\n        return this.cache.reset();\n    };\n    return DataStore;\n}());\n\nvar version = \"2.6.10\";\n\nvar hasSuggestedDevtools = false;\nvar ApolloClient = (function () {\n    function ApolloClient(options) {\n        var _this = this;\n        this.defaultOptions = {};\n        this.resetStoreCallbacks = [];\n        this.clearStoreCallbacks = [];\n        var cache = options.cache, _a = options.ssrMode, ssrMode = _a === void 0 ? false : _a, _b = options.ssrForceFetchDelay, ssrForceFetchDelay = _b === void 0 ? 0 : _b, connectToDevTools = options.connectToDevTools, _c = options.queryDeduplication, queryDeduplication = _c === void 0 ? true : _c, defaultOptions = options.defaultOptions, _d = options.assumeImmutableResults, assumeImmutableResults = _d === void 0 ? false : _d, resolvers = options.resolvers, typeDefs = options.typeDefs, fragmentMatcher = options.fragmentMatcher, clientAwarenessName = options.name, clientAwarenessVersion = options.version;\n        var link = options.link;\n        if (!link && resolvers) {\n            link = ApolloLink.empty();\n        }\n        if (!link || !cache) {\n            throw process.env.NODE_ENV === \"production\" ? new InvariantError(4) : new InvariantError(\"In order to initialize Apollo Client, you must specify 'link' and 'cache' properties in the options object.\\n\" +\n                \"These options are part of the upgrade requirements when migrating from Apollo Client 1.x to Apollo Client 2.x.\\n\" +\n                \"For more information, please visit: https://www.apollographql.com/docs/tutorial/client.html#apollo-client-setup\");\n        }\n        this.link = link;\n        this.cache = cache;\n        this.store = new DataStore(cache);\n        this.disableNetworkFetches = ssrMode || ssrForceFetchDelay > 0;\n        this.queryDeduplication = queryDeduplication;\n        this.defaultOptions = defaultOptions || {};\n        this.typeDefs = typeDefs;\n        if (ssrForceFetchDelay) {\n            setTimeout(function () { return (_this.disableNetworkFetches = false); }, ssrForceFetchDelay);\n        }\n        this.watchQuery = this.watchQuery.bind(this);\n        this.query = this.query.bind(this);\n        this.mutate = this.mutate.bind(this);\n        this.resetStore = this.resetStore.bind(this);\n        this.reFetchObservableQueries = this.reFetchObservableQueries.bind(this);\n        var defaultConnectToDevTools = process.env.NODE_ENV !== 'production' &&\n            typeof window !== 'undefined' &&\n            !window.__APOLLO_CLIENT__;\n        if (typeof connectToDevTools === 'undefined'\n            ? defaultConnectToDevTools\n            : connectToDevTools && typeof window !== 'undefined') {\n            window.__APOLLO_CLIENT__ = this;\n        }\n        if (!hasSuggestedDevtools && process.env.NODE_ENV !== 'production') {\n            hasSuggestedDevtools = true;\n            if (typeof window !== 'undefined' &&\n                window.document &&\n                window.top === window.self) {\n                if (typeof window.__APOLLO_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n                    if (window.navigator &&\n                        window.navigator.userAgent &&\n                        window.navigator.userAgent.indexOf('Chrome') > -1) {\n                        console.debug('Download the Apollo DevTools ' +\n                            'for a better development experience: ' +\n                            'https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm');\n                    }\n                }\n            }\n        }\n        this.version = version;\n        this.localState = new LocalState({\n            cache: cache,\n            client: this,\n            resolvers: resolvers,\n            fragmentMatcher: fragmentMatcher,\n        });\n        this.queryManager = new QueryManager({\n            link: this.link,\n            store: this.store,\n            queryDeduplication: queryDeduplication,\n            ssrMode: ssrMode,\n            clientAwareness: {\n                name: clientAwarenessName,\n                version: clientAwarenessVersion,\n            },\n            localState: this.localState,\n            assumeImmutableResults: assumeImmutableResults,\n            onBroadcast: function () {\n                if (_this.devToolsHookCb) {\n                    _this.devToolsHookCb({\n                        action: {},\n                        state: {\n                            queries: _this.queryManager.queryStore.getStore(),\n                            mutations: _this.queryManager.mutationStore.getStore(),\n                        },\n                        dataWithOptimisticResults: _this.cache.extract(true),\n                    });\n                }\n            },\n        });\n    }\n    ApolloClient.prototype.stop = function () {\n        this.queryManager.stop();\n    };\n    ApolloClient.prototype.watchQuery = function (options) {\n        if (this.defaultOptions.watchQuery) {\n            options = __assign(__assign({}, this.defaultOptions.watchQuery), options);\n        }\n        if (this.disableNetworkFetches &&\n            (options.fetchPolicy === 'network-only' ||\n                options.fetchPolicy === 'cache-and-network')) {\n            options = __assign(__assign({}, options), { fetchPolicy: 'cache-first' });\n        }\n        return this.queryManager.watchQuery(options);\n    };\n    ApolloClient.prototype.query = function (options) {\n        if (this.defaultOptions.query) {\n            options = __assign(__assign({}, this.defaultOptions.query), options);\n        }\n        process.env.NODE_ENV === \"production\" ? invariant(options.fetchPolicy !== 'cache-and-network', 5) : invariant(options.fetchPolicy !== 'cache-and-network', 'The cache-and-network fetchPolicy does not work with client.query, because ' +\n            'client.query can only return a single result. Please use client.watchQuery ' +\n            'to receive multiple results from the cache and the network, or consider ' +\n            'using a different fetchPolicy, such as cache-first or network-only.');\n        if (this.disableNetworkFetches && options.fetchPolicy === 'network-only') {\n            options = __assign(__assign({}, options), { fetchPolicy: 'cache-first' });\n        }\n        return this.queryManager.query(options);\n    };\n    ApolloClient.prototype.mutate = function (options) {\n        if (this.defaultOptions.mutate) {\n            options = __assign(__assign({}, this.defaultOptions.mutate), options);\n        }\n        return this.queryManager.mutate(options);\n    };\n    ApolloClient.prototype.subscribe = function (options) {\n        return this.queryManager.startGraphQLSubscription(options);\n    };\n    ApolloClient.prototype.readQuery = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.cache.readQuery(options, optimistic);\n    };\n    ApolloClient.prototype.readFragment = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.cache.readFragment(options, optimistic);\n    };\n    ApolloClient.prototype.writeQuery = function (options) {\n        var result = this.cache.writeQuery(options);\n        this.queryManager.broadcastQueries();\n        return result;\n    };\n    ApolloClient.prototype.writeFragment = function (options) {\n        var result = this.cache.writeFragment(options);\n        this.queryManager.broadcastQueries();\n        return result;\n    };\n    ApolloClient.prototype.writeData = function (options) {\n        var result = this.cache.writeData(options);\n        this.queryManager.broadcastQueries();\n        return result;\n    };\n    ApolloClient.prototype.__actionHookForDevTools = function (cb) {\n        this.devToolsHookCb = cb;\n    };\n    ApolloClient.prototype.__requestRaw = function (payload) {\n        return execute(this.link, payload);\n    };\n    ApolloClient.prototype.initQueryManager = function () {\n        process.env.NODE_ENV === \"production\" || invariant.warn('Calling the initQueryManager method is no longer necessary, ' +\n            'and it will be removed from ApolloClient in version 3.0.');\n        return this.queryManager;\n    };\n    ApolloClient.prototype.resetStore = function () {\n        var _this = this;\n        return Promise.resolve()\n            .then(function () { return _this.queryManager.clearStore(); })\n            .then(function () { return Promise.all(_this.resetStoreCallbacks.map(function (fn) { return fn(); })); })\n            .then(function () { return _this.reFetchObservableQueries(); });\n    };\n    ApolloClient.prototype.clearStore = function () {\n        var _this = this;\n        return Promise.resolve()\n            .then(function () { return _this.queryManager.clearStore(); })\n            .then(function () { return Promise.all(_this.clearStoreCallbacks.map(function (fn) { return fn(); })); });\n    };\n    ApolloClient.prototype.onResetStore = function (cb) {\n        var _this = this;\n        this.resetStoreCallbacks.push(cb);\n        return function () {\n            _this.resetStoreCallbacks = _this.resetStoreCallbacks.filter(function (c) { return c !== cb; });\n        };\n    };\n    ApolloClient.prototype.onClearStore = function (cb) {\n        var _this = this;\n        this.clearStoreCallbacks.push(cb);\n        return function () {\n            _this.clearStoreCallbacks = _this.clearStoreCallbacks.filter(function (c) { return c !== cb; });\n        };\n    };\n    ApolloClient.prototype.reFetchObservableQueries = function (includeStandby) {\n        return this.queryManager.reFetchObservableQueries(includeStandby);\n    };\n    ApolloClient.prototype.extract = function (optimistic) {\n        return this.cache.extract(optimistic);\n    };\n    ApolloClient.prototype.restore = function (serializedState) {\n        return this.cache.restore(serializedState);\n    };\n    ApolloClient.prototype.addResolvers = function (resolvers) {\n        this.localState.addResolvers(resolvers);\n    };\n    ApolloClient.prototype.setResolvers = function (resolvers) {\n        this.localState.setResolvers(resolvers);\n    };\n    ApolloClient.prototype.getResolvers = function () {\n        return this.localState.getResolvers();\n    };\n    ApolloClient.prototype.setLocalStateFragmentMatcher = function (fragmentMatcher) {\n        this.localState.setFragmentMatcher(fragmentMatcher);\n    };\n    return ApolloClient;\n}());\n\nexport default ApolloClient;\nexport { ApolloClient, ApolloError, FetchType, NetworkStatus, ObservableQuery, isApolloError };\n//# sourceMappingURL=bundle.esm.js.map\n","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","import { getFragmentQueryDocument } from 'apollo-utilities';\n\nfunction queryFromPojo(obj) {\n    var op = {\n        kind: 'OperationDefinition',\n        operation: 'query',\n        name: {\n            kind: 'Name',\n            value: 'GeneratedClientQuery',\n        },\n        selectionSet: selectionSetFromObj(obj),\n    };\n    var out = {\n        kind: 'Document',\n        definitions: [op],\n    };\n    return out;\n}\nfunction fragmentFromPojo(obj, typename) {\n    var frag = {\n        kind: 'FragmentDefinition',\n        typeCondition: {\n            kind: 'NamedType',\n            name: {\n                kind: 'Name',\n                value: typename || '__FakeType',\n            },\n        },\n        name: {\n            kind: 'Name',\n            value: 'GeneratedClientQuery',\n        },\n        selectionSet: selectionSetFromObj(obj),\n    };\n    var out = {\n        kind: 'Document',\n        definitions: [frag],\n    };\n    return out;\n}\nfunction selectionSetFromObj(obj) {\n    if (typeof obj === 'number' ||\n        typeof obj === 'boolean' ||\n        typeof obj === 'string' ||\n        typeof obj === 'undefined' ||\n        obj === null) {\n        return null;\n    }\n    if (Array.isArray(obj)) {\n        return selectionSetFromObj(obj[0]);\n    }\n    var selections = [];\n    Object.keys(obj).forEach(function (key) {\n        var nestedSelSet = selectionSetFromObj(obj[key]);\n        var field = {\n            kind: 'Field',\n            name: {\n                kind: 'Name',\n                value: key,\n            },\n            selectionSet: nestedSelSet || undefined,\n        };\n        selections.push(field);\n    });\n    var selectionSet = {\n        kind: 'SelectionSet',\n        selections: selections,\n    };\n    return selectionSet;\n}\nvar justTypenameQuery = {\n    kind: 'Document',\n    definitions: [\n        {\n            kind: 'OperationDefinition',\n            operation: 'query',\n            name: null,\n            variableDefinitions: null,\n            directives: [],\n            selectionSet: {\n                kind: 'SelectionSet',\n                selections: [\n                    {\n                        kind: 'Field',\n                        alias: null,\n                        name: {\n                            kind: 'Name',\n                            value: '__typename',\n                        },\n                        arguments: [],\n                        directives: [],\n                        selectionSet: null,\n                    },\n                ],\n            },\n        },\n    ],\n};\n\nvar ApolloCache = (function () {\n    function ApolloCache() {\n    }\n    ApolloCache.prototype.transformDocument = function (document) {\n        return document;\n    };\n    ApolloCache.prototype.transformForLink = function (document) {\n        return document;\n    };\n    ApolloCache.prototype.readQuery = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.read({\n            query: options.query,\n            variables: options.variables,\n            optimistic: optimistic,\n        });\n    };\n    ApolloCache.prototype.readFragment = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.read({\n            query: getFragmentQueryDocument(options.fragment, options.fragmentName),\n            variables: options.variables,\n            rootId: options.id,\n            optimistic: optimistic,\n        });\n    };\n    ApolloCache.prototype.writeQuery = function (options) {\n        this.write({\n            dataId: 'ROOT_QUERY',\n            result: options.data,\n            query: options.query,\n            variables: options.variables,\n        });\n    };\n    ApolloCache.prototype.writeFragment = function (options) {\n        this.write({\n            dataId: options.id,\n            result: options.data,\n            variables: options.variables,\n            query: getFragmentQueryDocument(options.fragment, options.fragmentName),\n        });\n    };\n    ApolloCache.prototype.writeData = function (_a) {\n        var id = _a.id, data = _a.data;\n        if (typeof id !== 'undefined') {\n            var typenameResult = null;\n            try {\n                typenameResult = this.read({\n                    rootId: id,\n                    optimistic: false,\n                    query: justTypenameQuery,\n                });\n            }\n            catch (e) {\n            }\n            var __typename = (typenameResult && typenameResult.__typename) || '__ClientData';\n            var dataToWrite = Object.assign({ __typename: __typename }, data);\n            this.writeFragment({\n                id: id,\n                fragment: fragmentFromPojo(dataToWrite, __typename),\n                data: dataToWrite,\n            });\n        }\n        else {\n            this.writeQuery({ query: queryFromPojo(data), data: data });\n        }\n    };\n    return ApolloCache;\n}());\n\nvar Cache;\n(function (Cache) {\n})(Cache || (Cache = {}));\n\nexport { ApolloCache, Cache };\n//# sourceMappingURL=bundle.esm.js.map\n","// This currentContext variable will only be used if the makeSlotClass\r\n// function is called, which happens only if this is the first copy of the\r\n// @wry/context package to be imported.\r\nvar currentContext = null;\r\n// This unique internal object is used to denote the absence of a value\r\n// for a given Slot, and is never exposed to outside code.\r\nvar MISSING_VALUE = {};\r\nvar idCounter = 1;\r\n// Although we can't do anything about the cost of duplicated code from\r\n// accidentally bundling multiple copies of the @wry/context package, we can\r\n// avoid creating the Slot class more than once using makeSlotClass.\r\nvar makeSlotClass = function () { return /** @class */ (function () {\r\n    function Slot() {\r\n        // If you have a Slot object, you can find out its slot.id, but you cannot\r\n        // guess the slot.id of a Slot you don't have access to, thanks to the\r\n        // randomized suffix.\r\n        this.id = [\r\n            \"slot\",\r\n            idCounter++,\r\n            Date.now(),\r\n            Math.random().toString(36).slice(2),\r\n        ].join(\":\");\r\n    }\r\n    Slot.prototype.hasValue = function () {\r\n        for (var context_1 = currentContext; context_1; context_1 = context_1.parent) {\r\n            // We use the Slot object iself as a key to its value, which means the\r\n            // value cannot be obtained without a reference to the Slot object.\r\n            if (this.id in context_1.slots) {\r\n                var value = context_1.slots[this.id];\r\n                if (value === MISSING_VALUE)\r\n                    break;\r\n                if (context_1 !== currentContext) {\r\n                    // Cache the value in currentContext.slots so the next lookup will\r\n                    // be faster. This caching is safe because the tree of contexts and\r\n                    // the values of the slots are logically immutable.\r\n                    currentContext.slots[this.id] = value;\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n        if (currentContext) {\r\n            // If a value was not found for this Slot, it's never going to be found\r\n            // no matter how many times we look it up, so we might as well cache\r\n            // the absence of the value, too.\r\n            currentContext.slots[this.id] = MISSING_VALUE;\r\n        }\r\n        return false;\r\n    };\r\n    Slot.prototype.getValue = function () {\r\n        if (this.hasValue()) {\r\n            return currentContext.slots[this.id];\r\n        }\r\n    };\r\n    Slot.prototype.withValue = function (value, callback, \r\n    // Given the prevalence of arrow functions, specifying arguments is likely\r\n    // to be much more common than specifying `this`, hence this ordering:\r\n    args, thisArg) {\r\n        var _a;\r\n        var slots = (_a = {\r\n                __proto__: null\r\n            },\r\n            _a[this.id] = value,\r\n            _a);\r\n        var parent = currentContext;\r\n        currentContext = { parent: parent, slots: slots };\r\n        try {\r\n            // Function.prototype.apply allows the arguments array argument to be\r\n            // omitted or undefined, so args! is fine here.\r\n            return callback.apply(thisArg, args);\r\n        }\r\n        finally {\r\n            currentContext = parent;\r\n        }\r\n    };\r\n    // Capture the current context and wrap a callback function so that it\r\n    // reestablishes the captured context when called.\r\n    Slot.bind = function (callback) {\r\n        var context = currentContext;\r\n        return function () {\r\n            var saved = currentContext;\r\n            try {\r\n                currentContext = context;\r\n                return callback.apply(this, arguments);\r\n            }\r\n            finally {\r\n                currentContext = saved;\r\n            }\r\n        };\r\n    };\r\n    // Immediately run a callback function without any captured context.\r\n    Slot.noContext = function (callback, \r\n    // Given the prevalence of arrow functions, specifying arguments is likely\r\n    // to be much more common than specifying `this`, hence this ordering:\r\n    args, thisArg) {\r\n        if (currentContext) {\r\n            var saved = currentContext;\r\n            try {\r\n                currentContext = null;\r\n                // Function.prototype.apply allows the arguments array argument to be\r\n                // omitted or undefined, so args! is fine here.\r\n                return callback.apply(thisArg, args);\r\n            }\r\n            finally {\r\n                currentContext = saved;\r\n            }\r\n        }\r\n        else {\r\n            return callback.apply(thisArg, args);\r\n        }\r\n    };\r\n    return Slot;\r\n}()); };\r\n// We store a single global implementation of the Slot class as a permanent\r\n// non-enumerable symbol property of the Array constructor. This obfuscation\r\n// does nothing to prevent access to the Slot class, but at least it ensures\r\n// the implementation (i.e. currentContext) cannot be tampered with, and all\r\n// copies of the @wry/context package (hopefully just one) will share the\r\n// same Slot implementation. Since the first copy of the @wry/context package\r\n// to be imported wins, this technique imposes a very high cost for any\r\n// future breaking changes to the Slot class.\r\nvar globalKey = \"@wry/context:Slot\";\r\nvar host = Array;\r\nvar Slot = host[globalKey] || function () {\r\n    var Slot = makeSlotClass();\r\n    try {\r\n        Object.defineProperty(host, globalKey, {\r\n            value: host[globalKey] = Slot,\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: false,\r\n        });\r\n    }\r\n    finally {\r\n        return Slot;\r\n    }\r\n}();\n\nvar bind = Slot.bind, noContext = Slot.noContext;\r\nfunction setTimeoutWithContext(callback, delay) {\r\n    return setTimeout(bind(callback), delay);\r\n}\r\n// Turn any generator function into an async function (using yield instead\r\n// of await), with context automatically preserved across yields.\r\nfunction asyncFromGen(genFn) {\r\n    return function () {\r\n        var gen = genFn.apply(this, arguments);\r\n        var boundNext = bind(gen.next);\r\n        var boundThrow = bind(gen.throw);\r\n        return new Promise(function (resolve, reject) {\r\n            function invoke(method, argument) {\r\n                try {\r\n                    var result = method.call(gen, argument);\r\n                }\r\n                catch (error) {\r\n                    return reject(error);\r\n                }\r\n                var next = result.done ? resolve : invokeNext;\r\n                if (isPromiseLike(result.value)) {\r\n                    result.value.then(next, result.done ? reject : invokeThrow);\r\n                }\r\n                else {\r\n                    next(result.value);\r\n                }\r\n            }\r\n            var invokeNext = function (value) { return invoke(boundNext, value); };\r\n            var invokeThrow = function (error) { return invoke(boundThrow, error); };\r\n            invokeNext();\r\n        });\r\n    };\r\n}\r\nfunction isPromiseLike(value) {\r\n    return value && typeof value.then === \"function\";\r\n}\r\n// If you use the fibers npm package to implement coroutines in Node.js,\r\n// you should call this function at least once to ensure context management\r\n// remains coherent across any yields.\r\nvar wrappedFibers = [];\r\nfunction wrapYieldingFiberMethods(Fiber) {\r\n    // There can be only one implementation of Fiber per process, so this array\r\n    // should never grow longer than one element.\r\n    if (wrappedFibers.indexOf(Fiber) < 0) {\r\n        var wrap = function (obj, method) {\r\n            var fn = obj[method];\r\n            obj[method] = function () {\r\n                return noContext(fn, arguments, this);\r\n            };\r\n        };\r\n        // These methods can yield, according to\r\n        // https://github.com/laverdet/node-fibers/blob/ddebed9b8ae3883e57f822e2108e6943e5c8d2a8/fibers.js#L97-L100\r\n        wrap(Fiber, \"yield\");\r\n        wrap(Fiber.prototype, \"run\");\r\n        wrap(Fiber.prototype, \"throwInto\");\r\n        wrappedFibers.push(Fiber);\r\n    }\r\n    return Fiber;\r\n}\n\nexport { Slot, asyncFromGen, bind, noContext, setTimeoutWithContext as setTimeout, wrapYieldingFiberMethods };\n//# sourceMappingURL=context.esm.js.map\n","import { Slot } from '@wry/context';\nexport { asyncFromGen, bind as bindContext, noContext, setTimeout } from '@wry/context';\n\nfunction defaultDispose() { }\r\nvar Cache = /** @class */ (function () {\r\n    function Cache(max, dispose) {\r\n        if (max === void 0) { max = Infinity; }\r\n        if (dispose === void 0) { dispose = defaultDispose; }\r\n        this.max = max;\r\n        this.dispose = dispose;\r\n        this.map = new Map();\r\n        this.newest = null;\r\n        this.oldest = null;\r\n    }\r\n    Cache.prototype.has = function (key) {\r\n        return this.map.has(key);\r\n    };\r\n    Cache.prototype.get = function (key) {\r\n        var entry = this.getEntry(key);\r\n        return entry && entry.value;\r\n    };\r\n    Cache.prototype.getEntry = function (key) {\r\n        var entry = this.map.get(key);\r\n        if (entry && entry !== this.newest) {\r\n            var older = entry.older, newer = entry.newer;\r\n            if (newer) {\r\n                newer.older = older;\r\n            }\r\n            if (older) {\r\n                older.newer = newer;\r\n            }\r\n            entry.older = this.newest;\r\n            entry.older.newer = entry;\r\n            entry.newer = null;\r\n            this.newest = entry;\r\n            if (entry === this.oldest) {\r\n                this.oldest = newer;\r\n            }\r\n        }\r\n        return entry;\r\n    };\r\n    Cache.prototype.set = function (key, value) {\r\n        var entry = this.getEntry(key);\r\n        if (entry) {\r\n            return entry.value = value;\r\n        }\r\n        entry = {\r\n            key: key,\r\n            value: value,\r\n            newer: null,\r\n            older: this.newest\r\n        };\r\n        if (this.newest) {\r\n            this.newest.newer = entry;\r\n        }\r\n        this.newest = entry;\r\n        this.oldest = this.oldest || entry;\r\n        this.map.set(key, entry);\r\n        return entry.value;\r\n    };\r\n    Cache.prototype.clean = function () {\r\n        while (this.oldest && this.map.size > this.max) {\r\n            this.delete(this.oldest.key);\r\n        }\r\n    };\r\n    Cache.prototype.delete = function (key) {\r\n        var entry = this.map.get(key);\r\n        if (entry) {\r\n            if (entry === this.newest) {\r\n                this.newest = entry.older;\r\n            }\r\n            if (entry === this.oldest) {\r\n                this.oldest = entry.newer;\r\n            }\r\n            if (entry.newer) {\r\n                entry.newer.older = entry.older;\r\n            }\r\n            if (entry.older) {\r\n                entry.older.newer = entry.newer;\r\n            }\r\n            this.map.delete(key);\r\n            this.dispose(entry.value, key);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    return Cache;\r\n}());\n\nvar parentEntrySlot = new Slot();\n\nvar reusableEmptyArray = [];\r\nvar emptySetPool = [];\r\nvar POOL_TARGET_SIZE = 100;\r\n// Since this package might be used browsers, we should avoid using the\r\n// Node built-in assert module.\r\nfunction assert(condition, optionalMessage) {\r\n    if (!condition) {\r\n        throw new Error(optionalMessage || \"assertion failure\");\r\n    }\r\n}\r\nfunction valueIs(a, b) {\r\n    var len = a.length;\r\n    return (\r\n    // Unknown values are not equal to each other.\r\n    len > 0 &&\r\n        // Both values must be ordinary (or both exceptional) to be equal.\r\n        len === b.length &&\r\n        // The underlying value or exception must be the same.\r\n        a[len - 1] === b[len - 1]);\r\n}\r\nfunction valueGet(value) {\r\n    switch (value.length) {\r\n        case 0: throw new Error(\"unknown value\");\r\n        case 1: return value[0];\r\n        case 2: throw value[1];\r\n    }\r\n}\r\nfunction valueCopy(value) {\r\n    return value.slice(0);\r\n}\r\nvar Entry = /** @class */ (function () {\r\n    function Entry(fn, args) {\r\n        this.fn = fn;\r\n        this.args = args;\r\n        this.parents = new Set();\r\n        this.childValues = new Map();\r\n        // When this Entry has children that are dirty, this property becomes\r\n        // a Set containing other Entry objects, borrowed from emptySetPool.\r\n        // When the set becomes empty, it gets recycled back to emptySetPool.\r\n        this.dirtyChildren = null;\r\n        this.dirty = true;\r\n        this.recomputing = false;\r\n        this.value = [];\r\n        ++Entry.count;\r\n    }\r\n    // This is the most important method of the Entry API, because it\r\n    // determines whether the cached this.value can be returned immediately,\r\n    // or must be recomputed. The overall performance of the caching system\r\n    // depends on the truth of the following observations: (1) this.dirty is\r\n    // usually false, (2) this.dirtyChildren is usually null/empty, and thus\r\n    // (3) valueGet(this.value) is usually returned without recomputation.\r\n    Entry.prototype.recompute = function () {\r\n        assert(!this.recomputing, \"already recomputing\");\r\n        if (!rememberParent(this) && maybeReportOrphan(this)) {\r\n            // The recipient of the entry.reportOrphan callback decided to dispose\r\n            // of this orphan entry by calling entry.dispose(), so we don't need to\r\n            // (and should not) proceed with the recomputation.\r\n            return void 0;\r\n        }\r\n        return mightBeDirty(this)\r\n            ? reallyRecompute(this)\r\n            : valueGet(this.value);\r\n    };\r\n    Entry.prototype.setDirty = function () {\r\n        if (this.dirty)\r\n            return;\r\n        this.dirty = true;\r\n        this.value.length = 0;\r\n        reportDirty(this);\r\n        // We can go ahead and unsubscribe here, since any further dirty\r\n        // notifications we receive will be redundant, and unsubscribing may\r\n        // free up some resources, e.g. file watchers.\r\n        maybeUnsubscribe(this);\r\n    };\r\n    Entry.prototype.dispose = function () {\r\n        var _this = this;\r\n        forgetChildren(this).forEach(maybeReportOrphan);\r\n        maybeUnsubscribe(this);\r\n        // Because this entry has been kicked out of the cache (in index.js),\r\n        // we've lost the ability to find out if/when this entry becomes dirty,\r\n        // whether that happens through a subscription, because of a direct call\r\n        // to entry.setDirty(), or because one of its children becomes dirty.\r\n        // Because of this loss of future information, we have to assume the\r\n        // worst (that this entry might have become dirty very soon), so we must\r\n        // immediately mark this entry's parents as dirty. Normally we could\r\n        // just call entry.setDirty() rather than calling parent.setDirty() for\r\n        // each parent, but that would leave this entry in parent.childValues\r\n        // and parent.dirtyChildren, which would prevent the child from being\r\n        // truly forgotten.\r\n        this.parents.forEach(function (parent) {\r\n            parent.setDirty();\r\n            forgetChild(parent, _this);\r\n        });\r\n    };\r\n    Entry.count = 0;\r\n    return Entry;\r\n}());\r\nfunction rememberParent(child) {\r\n    var parent = parentEntrySlot.getValue();\r\n    if (parent) {\r\n        child.parents.add(parent);\r\n        if (!parent.childValues.has(child)) {\r\n            parent.childValues.set(child, []);\r\n        }\r\n        if (mightBeDirty(child)) {\r\n            reportDirtyChild(parent, child);\r\n        }\r\n        else {\r\n            reportCleanChild(parent, child);\r\n        }\r\n        return parent;\r\n    }\r\n}\r\nfunction reallyRecompute(entry) {\r\n    // Since this recomputation is likely to re-remember some of this\r\n    // entry's children, we forget our children here but do not call\r\n    // maybeReportOrphan until after the recomputation finishes.\r\n    var originalChildren = forgetChildren(entry);\r\n    // Set entry as the parent entry while calling recomputeNewValue(entry).\r\n    parentEntrySlot.withValue(entry, recomputeNewValue, [entry]);\r\n    if (maybeSubscribe(entry)) {\r\n        // If we successfully recomputed entry.value and did not fail to\r\n        // (re)subscribe, then this Entry is no longer explicitly dirty.\r\n        setClean(entry);\r\n    }\r\n    // Now that we've had a chance to re-remember any children that were\r\n    // involved in the recomputation, we can safely report any orphan\r\n    // children that remain.\r\n    originalChildren.forEach(maybeReportOrphan);\r\n    return valueGet(entry.value);\r\n}\r\nfunction recomputeNewValue(entry) {\r\n    entry.recomputing = true;\r\n    // Set entry.value as unknown.\r\n    entry.value.length = 0;\r\n    try {\r\n        // If entry.fn succeeds, entry.value will become a normal Value.\r\n        entry.value[0] = entry.fn.apply(null, entry.args);\r\n    }\r\n    catch (e) {\r\n        // If entry.fn throws, entry.value will become exceptional.\r\n        entry.value[1] = e;\r\n    }\r\n    // Either way, this line is always reached.\r\n    entry.recomputing = false;\r\n}\r\nfunction mightBeDirty(entry) {\r\n    return entry.dirty || !!(entry.dirtyChildren && entry.dirtyChildren.size);\r\n}\r\nfunction setClean(entry) {\r\n    entry.dirty = false;\r\n    if (mightBeDirty(entry)) {\r\n        // This Entry may still have dirty children, in which case we can't\r\n        // let our parents know we're clean just yet.\r\n        return;\r\n    }\r\n    reportClean(entry);\r\n}\r\nfunction reportDirty(child) {\r\n    child.parents.forEach(function (parent) { return reportDirtyChild(parent, child); });\r\n}\r\nfunction reportClean(child) {\r\n    child.parents.forEach(function (parent) { return reportCleanChild(parent, child); });\r\n}\r\n// Let a parent Entry know that one of its children may be dirty.\r\nfunction reportDirtyChild(parent, child) {\r\n    // Must have called rememberParent(child) before calling\r\n    // reportDirtyChild(parent, child).\r\n    assert(parent.childValues.has(child));\r\n    assert(mightBeDirty(child));\r\n    if (!parent.dirtyChildren) {\r\n        parent.dirtyChildren = emptySetPool.pop() || new Set;\r\n    }\r\n    else if (parent.dirtyChildren.has(child)) {\r\n        // If we already know this child is dirty, then we must have already\r\n        // informed our own parents that we are dirty, so we can terminate\r\n        // the recursion early.\r\n        return;\r\n    }\r\n    parent.dirtyChildren.add(child);\r\n    reportDirty(parent);\r\n}\r\n// Let a parent Entry know that one of its children is no longer dirty.\r\nfunction reportCleanChild(parent, child) {\r\n    // Must have called rememberChild(child) before calling\r\n    // reportCleanChild(parent, child).\r\n    assert(parent.childValues.has(child));\r\n    assert(!mightBeDirty(child));\r\n    var childValue = parent.childValues.get(child);\r\n    if (childValue.length === 0) {\r\n        parent.childValues.set(child, valueCopy(child.value));\r\n    }\r\n    else if (!valueIs(childValue, child.value)) {\r\n        parent.setDirty();\r\n    }\r\n    removeDirtyChild(parent, child);\r\n    if (mightBeDirty(parent)) {\r\n        return;\r\n    }\r\n    reportClean(parent);\r\n}\r\nfunction removeDirtyChild(parent, child) {\r\n    var dc = parent.dirtyChildren;\r\n    if (dc) {\r\n        dc.delete(child);\r\n        if (dc.size === 0) {\r\n            if (emptySetPool.length < POOL_TARGET_SIZE) {\r\n                emptySetPool.push(dc);\r\n            }\r\n            parent.dirtyChildren = null;\r\n        }\r\n    }\r\n}\r\n// If the given entry has a reportOrphan method, and no remaining parents,\r\n// call entry.reportOrphan and return true iff it returns true. The\r\n// reportOrphan function should return true to indicate entry.dispose()\r\n// has been called, and the entry has been removed from any other caches\r\n// (see index.js for the only current example).\r\nfunction maybeReportOrphan(entry) {\r\n    return entry.parents.size === 0 &&\r\n        typeof entry.reportOrphan === \"function\" &&\r\n        entry.reportOrphan() === true;\r\n}\r\n// Removes all children from this entry and returns an array of the\r\n// removed children.\r\nfunction forgetChildren(parent) {\r\n    var children = reusableEmptyArray;\r\n    if (parent.childValues.size > 0) {\r\n        children = [];\r\n        parent.childValues.forEach(function (_value, child) {\r\n            forgetChild(parent, child);\r\n            children.push(child);\r\n        });\r\n    }\r\n    // After we forget all our children, this.dirtyChildren must be empty\r\n    // and therefore must have been reset to null.\r\n    assert(parent.dirtyChildren === null);\r\n    return children;\r\n}\r\nfunction forgetChild(parent, child) {\r\n    child.parents.delete(parent);\r\n    parent.childValues.delete(child);\r\n    removeDirtyChild(parent, child);\r\n}\r\nfunction maybeSubscribe(entry) {\r\n    if (typeof entry.subscribe === \"function\") {\r\n        try {\r\n            maybeUnsubscribe(entry); // Prevent double subscriptions.\r\n            entry.unsubscribe = entry.subscribe.apply(null, entry.args);\r\n        }\r\n        catch (e) {\r\n            // If this Entry has a subscribe function and it threw an exception\r\n            // (or an unsubscribe function it previously returned now throws),\r\n            // return false to indicate that we were not able to subscribe (or\r\n            // unsubscribe), and this Entry should remain dirty.\r\n            entry.setDirty();\r\n            return false;\r\n        }\r\n    }\r\n    // Returning true indicates either that there was no entry.subscribe\r\n    // function or that it succeeded.\r\n    return true;\r\n}\r\nfunction maybeUnsubscribe(entry) {\r\n    var unsubscribe = entry.unsubscribe;\r\n    if (typeof unsubscribe === \"function\") {\r\n        entry.unsubscribe = void 0;\r\n        unsubscribe();\r\n    }\r\n}\n\n// A trie data structure that holds object keys weakly, yet can also hold\r\n// non-object keys, unlike the native `WeakMap`.\r\nvar KeyTrie = /** @class */ (function () {\r\n    function KeyTrie(weakness) {\r\n        this.weakness = weakness;\r\n    }\r\n    KeyTrie.prototype.lookup = function () {\r\n        var array = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            array[_i] = arguments[_i];\r\n        }\r\n        return this.lookupArray(array);\r\n    };\r\n    KeyTrie.prototype.lookupArray = function (array) {\r\n        var node = this;\r\n        array.forEach(function (key) { return node = node.getChildTrie(key); });\r\n        return node.data || (node.data = Object.create(null));\r\n    };\r\n    KeyTrie.prototype.getChildTrie = function (key) {\r\n        var map = this.weakness && isObjRef(key)\r\n            ? this.weak || (this.weak = new WeakMap())\r\n            : this.strong || (this.strong = new Map());\r\n        var child = map.get(key);\r\n        if (!child)\r\n            map.set(key, child = new KeyTrie(this.weakness));\r\n        return child;\r\n    };\r\n    return KeyTrie;\r\n}());\r\nfunction isObjRef(value) {\r\n    switch (typeof value) {\r\n        case \"object\":\r\n            if (value === null)\r\n                break;\r\n        // Fall through to return true...\r\n        case \"function\":\r\n            return true;\r\n    }\r\n    return false;\r\n}\n\n// The defaultMakeCacheKey function is remarkably powerful, because it gives\r\n// a unique object for any shallow-identical list of arguments. If you need\r\n// to implement a custom makeCacheKey function, you may find it helpful to\r\n// delegate the final work to defaultMakeCacheKey, which is why we export it\r\n// here. However, you may want to avoid defaultMakeCacheKey if your runtime\r\n// does not support WeakMap, or you have the ability to return a string key.\r\n// In those cases, just write your own custom makeCacheKey functions.\r\nvar keyTrie = new KeyTrie(typeof WeakMap === \"function\");\r\nfunction defaultMakeCacheKey() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    return keyTrie.lookupArray(args);\r\n}\r\nvar caches = new Set();\r\nfunction wrap(originalFunction, options) {\r\n    if (options === void 0) { options = Object.create(null); }\r\n    var cache = new Cache(options.max || Math.pow(2, 16), function (entry) { return entry.dispose(); });\r\n    var disposable = !!options.disposable;\r\n    var makeCacheKey = options.makeCacheKey || defaultMakeCacheKey;\r\n    function optimistic() {\r\n        if (disposable && !parentEntrySlot.hasValue()) {\r\n            // If there's no current parent computation, and this wrapped\r\n            // function is disposable (meaning we don't care about entry.value,\r\n            // just dependency tracking), then we can short-cut everything else\r\n            // in this function, because entry.recompute() is going to recycle\r\n            // the entry object without recomputing anything, anyway.\r\n            return void 0;\r\n        }\r\n        var key = makeCacheKey.apply(null, arguments);\r\n        if (key === void 0) {\r\n            return originalFunction.apply(null, arguments);\r\n        }\r\n        var args = Array.prototype.slice.call(arguments);\r\n        var entry = cache.get(key);\r\n        if (entry) {\r\n            entry.args = args;\r\n        }\r\n        else {\r\n            entry = new Entry(originalFunction, args);\r\n            cache.set(key, entry);\r\n            entry.subscribe = options.subscribe;\r\n            if (disposable) {\r\n                entry.reportOrphan = function () { return cache.delete(key); };\r\n            }\r\n        }\r\n        var value = entry.recompute();\r\n        // Move this entry to the front of the least-recently used queue,\r\n        // since we just finished computing its value.\r\n        cache.set(key, entry);\r\n        caches.add(cache);\r\n        // Clean up any excess entries in the cache, but only if there is no\r\n        // active parent entry, meaning we're not in the middle of a larger\r\n        // computation that might be flummoxed by the cleaning.\r\n        if (!parentEntrySlot.hasValue()) {\r\n            caches.forEach(function (cache) { return cache.clean(); });\r\n            caches.clear();\r\n        }\r\n        // If options.disposable is truthy, the caller of wrap is telling us\r\n        // they don't care about the result of entry.recompute(), so we should\r\n        // avoid returning the value, so it won't be accidentally used.\r\n        return disposable ? void 0 : value;\r\n    }\r\n    optimistic.dirty = function () {\r\n        var key = makeCacheKey.apply(null, arguments);\r\n        var child = key !== void 0 && cache.get(key);\r\n        if (child) {\r\n            child.setDirty();\r\n        }\r\n    };\r\n    return optimistic;\r\n}\n\nexport { KeyTrie, defaultMakeCacheKey, wrap };\n//# sourceMappingURL=bundle.esm.js.map\n","import { __assign, __extends } from 'tslib';\nimport { ApolloCache } from 'apollo-cache';\nimport { isTest, getQueryDefinition, assign, getDefaultValues, isEqual, getMainDefinition, getFragmentDefinitions, createFragmentMap, shouldInclude, isField, resultKeyNameFromField, isInlineFragment, mergeDeepArray, argumentsObjectFromField, getDirectiveInfoFromField, maybeDeepFreeze, isIdValue, getStoreKeyName, toIdValue, isJsonValue, canUseWeakMap, getOperationDefinition, isProduction, storeKeyNameFromField, addTypenameToDocument } from 'apollo-utilities';\nimport { wrap, KeyTrie } from 'optimism';\nimport { invariant, InvariantError } from 'ts-invariant';\n\nvar haveWarned = false;\nfunction shouldWarn() {\n    var answer = !haveWarned;\n    if (!isTest()) {\n        haveWarned = true;\n    }\n    return answer;\n}\nvar HeuristicFragmentMatcher = (function () {\n    function HeuristicFragmentMatcher() {\n    }\n    HeuristicFragmentMatcher.prototype.ensureReady = function () {\n        return Promise.resolve();\n    };\n    HeuristicFragmentMatcher.prototype.canBypassInit = function () {\n        return true;\n    };\n    HeuristicFragmentMatcher.prototype.match = function (idValue, typeCondition, context) {\n        var obj = context.store.get(idValue.id);\n        var isRootQuery = idValue.id === 'ROOT_QUERY';\n        if (!obj) {\n            return isRootQuery;\n        }\n        var _a = obj.__typename, __typename = _a === void 0 ? isRootQuery && 'Query' : _a;\n        if (!__typename) {\n            if (shouldWarn()) {\n                process.env.NODE_ENV === \"production\" || invariant.warn(\"You're using fragments in your queries, but either don't have the addTypename:\\n  true option set in Apollo Client, or you are trying to write a fragment to the store without the __typename.\\n   Please turn on the addTypename option and include __typename when writing fragments so that Apollo Client\\n   can accurately match fragments.\");\n                process.env.NODE_ENV === \"production\" || invariant.warn('Could not find __typename on Fragment ', typeCondition, obj);\n                process.env.NODE_ENV === \"production\" || invariant.warn(\"DEPRECATION WARNING: using fragments without __typename is unsupported behavior \" +\n                    \"and will be removed in future versions of Apollo client. You should fix this and set addTypename to true now.\");\n            }\n            return 'heuristic';\n        }\n        if (__typename === typeCondition) {\n            return true;\n        }\n        if (shouldWarn()) {\n            process.env.NODE_ENV === \"production\" || invariant.error('You are using the simple (heuristic) fragment matcher, but your ' +\n                'queries contain union or interface types. Apollo Client will not be ' +\n                'able to accurately map fragments. To make this error go away, use ' +\n                'the `IntrospectionFragmentMatcher` as described in the docs: ' +\n                'https://www.apollographql.com/docs/react/advanced/fragments.html#fragment-matcher');\n        }\n        return 'heuristic';\n    };\n    return HeuristicFragmentMatcher;\n}());\nvar IntrospectionFragmentMatcher = (function () {\n    function IntrospectionFragmentMatcher(options) {\n        if (options && options.introspectionQueryResultData) {\n            this.possibleTypesMap = this.parseIntrospectionResult(options.introspectionQueryResultData);\n            this.isReady = true;\n        }\n        else {\n            this.isReady = false;\n        }\n        this.match = this.match.bind(this);\n    }\n    IntrospectionFragmentMatcher.prototype.match = function (idValue, typeCondition, context) {\n        process.env.NODE_ENV === \"production\" ? invariant(this.isReady, 1) : invariant(this.isReady, 'FragmentMatcher.match() was called before FragmentMatcher.init()');\n        var obj = context.store.get(idValue.id);\n        var isRootQuery = idValue.id === 'ROOT_QUERY';\n        if (!obj) {\n            return isRootQuery;\n        }\n        var _a = obj.__typename, __typename = _a === void 0 ? isRootQuery && 'Query' : _a;\n        process.env.NODE_ENV === \"production\" ? invariant(__typename, 2) : invariant(__typename, \"Cannot match fragment because __typename property is missing: \" + JSON.stringify(obj));\n        if (__typename === typeCondition) {\n            return true;\n        }\n        var implementingTypes = this.possibleTypesMap[typeCondition];\n        if (__typename &&\n            implementingTypes &&\n            implementingTypes.indexOf(__typename) > -1) {\n            return true;\n        }\n        return false;\n    };\n    IntrospectionFragmentMatcher.prototype.parseIntrospectionResult = function (introspectionResultData) {\n        var typeMap = {};\n        introspectionResultData.__schema.types.forEach(function (type) {\n            if (type.kind === 'UNION' || type.kind === 'INTERFACE') {\n                typeMap[type.name] = type.possibleTypes.map(function (implementingType) { return implementingType.name; });\n            }\n        });\n        return typeMap;\n    };\n    return IntrospectionFragmentMatcher;\n}());\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar DepTrackingCache = (function () {\n    function DepTrackingCache(data) {\n        var _this = this;\n        if (data === void 0) { data = Object.create(null); }\n        this.data = data;\n        this.depend = wrap(function (dataId) { return _this.data[dataId]; }, {\n            disposable: true,\n            makeCacheKey: function (dataId) {\n                return dataId;\n            },\n        });\n    }\n    DepTrackingCache.prototype.toObject = function () {\n        return this.data;\n    };\n    DepTrackingCache.prototype.get = function (dataId) {\n        this.depend(dataId);\n        return this.data[dataId];\n    };\n    DepTrackingCache.prototype.set = function (dataId, value) {\n        var oldValue = this.data[dataId];\n        if (value !== oldValue) {\n            this.data[dataId] = value;\n            this.depend.dirty(dataId);\n        }\n    };\n    DepTrackingCache.prototype.delete = function (dataId) {\n        if (hasOwn.call(this.data, dataId)) {\n            delete this.data[dataId];\n            this.depend.dirty(dataId);\n        }\n    };\n    DepTrackingCache.prototype.clear = function () {\n        this.replace(null);\n    };\n    DepTrackingCache.prototype.replace = function (newData) {\n        var _this = this;\n        if (newData) {\n            Object.keys(newData).forEach(function (dataId) {\n                _this.set(dataId, newData[dataId]);\n            });\n            Object.keys(this.data).forEach(function (dataId) {\n                if (!hasOwn.call(newData, dataId)) {\n                    _this.delete(dataId);\n                }\n            });\n        }\n        else {\n            Object.keys(this.data).forEach(function (dataId) {\n                _this.delete(dataId);\n            });\n        }\n    };\n    return DepTrackingCache;\n}());\nfunction defaultNormalizedCacheFactory(seed) {\n    return new DepTrackingCache(seed);\n}\n\nvar StoreReader = (function () {\n    function StoreReader(_a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, _c = _b.cacheKeyRoot, cacheKeyRoot = _c === void 0 ? new KeyTrie(canUseWeakMap) : _c, _d = _b.freezeResults, freezeResults = _d === void 0 ? false : _d;\n        var _e = this, executeStoreQuery = _e.executeStoreQuery, executeSelectionSet = _e.executeSelectionSet, executeSubSelectedArray = _e.executeSubSelectedArray;\n        this.freezeResults = freezeResults;\n        this.executeStoreQuery = wrap(function (options) {\n            return executeStoreQuery.call(_this, options);\n        }, {\n            makeCacheKey: function (_a) {\n                var query = _a.query, rootValue = _a.rootValue, contextValue = _a.contextValue, variableValues = _a.variableValues, fragmentMatcher = _a.fragmentMatcher;\n                if (contextValue.store instanceof DepTrackingCache) {\n                    return cacheKeyRoot.lookup(contextValue.store, query, fragmentMatcher, JSON.stringify(variableValues), rootValue.id);\n                }\n            }\n        });\n        this.executeSelectionSet = wrap(function (options) {\n            return executeSelectionSet.call(_this, options);\n        }, {\n            makeCacheKey: function (_a) {\n                var selectionSet = _a.selectionSet, rootValue = _a.rootValue, execContext = _a.execContext;\n                if (execContext.contextValue.store instanceof DepTrackingCache) {\n                    return cacheKeyRoot.lookup(execContext.contextValue.store, selectionSet, execContext.fragmentMatcher, JSON.stringify(execContext.variableValues), rootValue.id);\n                }\n            }\n        });\n        this.executeSubSelectedArray = wrap(function (options) {\n            return executeSubSelectedArray.call(_this, options);\n        }, {\n            makeCacheKey: function (_a) {\n                var field = _a.field, array = _a.array, execContext = _a.execContext;\n                if (execContext.contextValue.store instanceof DepTrackingCache) {\n                    return cacheKeyRoot.lookup(execContext.contextValue.store, field, array, JSON.stringify(execContext.variableValues));\n                }\n            }\n        });\n    }\n    StoreReader.prototype.readQueryFromStore = function (options) {\n        return this.diffQueryAgainstStore(__assign(__assign({}, options), { returnPartialData: false })).result;\n    };\n    StoreReader.prototype.diffQueryAgainstStore = function (_a) {\n        var store = _a.store, query = _a.query, variables = _a.variables, previousResult = _a.previousResult, _b = _a.returnPartialData, returnPartialData = _b === void 0 ? true : _b, _c = _a.rootId, rootId = _c === void 0 ? 'ROOT_QUERY' : _c, fragmentMatcherFunction = _a.fragmentMatcherFunction, config = _a.config;\n        var queryDefinition = getQueryDefinition(query);\n        variables = assign({}, getDefaultValues(queryDefinition), variables);\n        var context = {\n            store: store,\n            dataIdFromObject: config && config.dataIdFromObject,\n            cacheRedirects: (config && config.cacheRedirects) || {},\n        };\n        var execResult = this.executeStoreQuery({\n            query: query,\n            rootValue: {\n                type: 'id',\n                id: rootId,\n                generated: true,\n                typename: 'Query',\n            },\n            contextValue: context,\n            variableValues: variables,\n            fragmentMatcher: fragmentMatcherFunction,\n        });\n        var hasMissingFields = execResult.missing && execResult.missing.length > 0;\n        if (hasMissingFields && !returnPartialData) {\n            execResult.missing.forEach(function (info) {\n                if (info.tolerable)\n                    return;\n                throw process.env.NODE_ENV === \"production\" ? new InvariantError(8) : new InvariantError(\"Can't find field \" + info.fieldName + \" on object \" + JSON.stringify(info.object, null, 2) + \".\");\n            });\n        }\n        if (previousResult) {\n            if (isEqual(previousResult, execResult.result)) {\n                execResult.result = previousResult;\n            }\n        }\n        return {\n            result: execResult.result,\n            complete: !hasMissingFields,\n        };\n    };\n    StoreReader.prototype.executeStoreQuery = function (_a) {\n        var query = _a.query, rootValue = _a.rootValue, contextValue = _a.contextValue, variableValues = _a.variableValues, _b = _a.fragmentMatcher, fragmentMatcher = _b === void 0 ? defaultFragmentMatcher : _b;\n        var mainDefinition = getMainDefinition(query);\n        var fragments = getFragmentDefinitions(query);\n        var fragmentMap = createFragmentMap(fragments);\n        var execContext = {\n            query: query,\n            fragmentMap: fragmentMap,\n            contextValue: contextValue,\n            variableValues: variableValues,\n            fragmentMatcher: fragmentMatcher,\n        };\n        return this.executeSelectionSet({\n            selectionSet: mainDefinition.selectionSet,\n            rootValue: rootValue,\n            execContext: execContext,\n        });\n    };\n    StoreReader.prototype.executeSelectionSet = function (_a) {\n        var _this = this;\n        var selectionSet = _a.selectionSet, rootValue = _a.rootValue, execContext = _a.execContext;\n        var fragmentMap = execContext.fragmentMap, contextValue = execContext.contextValue, variables = execContext.variableValues;\n        var finalResult = { result: null };\n        var objectsToMerge = [];\n        var object = contextValue.store.get(rootValue.id);\n        var typename = (object && object.__typename) ||\n            (rootValue.id === 'ROOT_QUERY' && 'Query') ||\n            void 0;\n        function handleMissing(result) {\n            var _a;\n            if (result.missing) {\n                finalResult.missing = finalResult.missing || [];\n                (_a = finalResult.missing).push.apply(_a, result.missing);\n            }\n            return result.result;\n        }\n        selectionSet.selections.forEach(function (selection) {\n            var _a;\n            if (!shouldInclude(selection, variables)) {\n                return;\n            }\n            if (isField(selection)) {\n                var fieldResult = handleMissing(_this.executeField(object, typename, selection, execContext));\n                if (typeof fieldResult !== 'undefined') {\n                    objectsToMerge.push((_a = {},\n                        _a[resultKeyNameFromField(selection)] = fieldResult,\n                        _a));\n                }\n            }\n            else {\n                var fragment = void 0;\n                if (isInlineFragment(selection)) {\n                    fragment = selection;\n                }\n                else {\n                    fragment = fragmentMap[selection.name.value];\n                    if (!fragment) {\n                        throw process.env.NODE_ENV === \"production\" ? new InvariantError(9) : new InvariantError(\"No fragment named \" + selection.name.value);\n                    }\n                }\n                var typeCondition = fragment.typeCondition && fragment.typeCondition.name.value;\n                var match = !typeCondition ||\n                    execContext.fragmentMatcher(rootValue, typeCondition, contextValue);\n                if (match) {\n                    var fragmentExecResult = _this.executeSelectionSet({\n                        selectionSet: fragment.selectionSet,\n                        rootValue: rootValue,\n                        execContext: execContext,\n                    });\n                    if (match === 'heuristic' && fragmentExecResult.missing) {\n                        fragmentExecResult = __assign(__assign({}, fragmentExecResult), { missing: fragmentExecResult.missing.map(function (info) {\n                                return __assign(__assign({}, info), { tolerable: true });\n                            }) });\n                    }\n                    objectsToMerge.push(handleMissing(fragmentExecResult));\n                }\n            }\n        });\n        finalResult.result = mergeDeepArray(objectsToMerge);\n        if (this.freezeResults && process.env.NODE_ENV !== 'production') {\n            Object.freeze(finalResult.result);\n        }\n        return finalResult;\n    };\n    StoreReader.prototype.executeField = function (object, typename, field, execContext) {\n        var variables = execContext.variableValues, contextValue = execContext.contextValue;\n        var fieldName = field.name.value;\n        var args = argumentsObjectFromField(field, variables);\n        var info = {\n            resultKey: resultKeyNameFromField(field),\n            directives: getDirectiveInfoFromField(field, variables),\n        };\n        var readStoreResult = readStoreResolver(object, typename, fieldName, args, contextValue, info);\n        if (Array.isArray(readStoreResult.result)) {\n            return this.combineExecResults(readStoreResult, this.executeSubSelectedArray({\n                field: field,\n                array: readStoreResult.result,\n                execContext: execContext,\n            }));\n        }\n        if (!field.selectionSet) {\n            assertSelectionSetForIdValue(field, readStoreResult.result);\n            if (this.freezeResults && process.env.NODE_ENV !== 'production') {\n                maybeDeepFreeze(readStoreResult);\n            }\n            return readStoreResult;\n        }\n        if (readStoreResult.result == null) {\n            return readStoreResult;\n        }\n        return this.combineExecResults(readStoreResult, this.executeSelectionSet({\n            selectionSet: field.selectionSet,\n            rootValue: readStoreResult.result,\n            execContext: execContext,\n        }));\n    };\n    StoreReader.prototype.combineExecResults = function () {\n        var execResults = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            execResults[_i] = arguments[_i];\n        }\n        var missing;\n        execResults.forEach(function (execResult) {\n            if (execResult.missing) {\n                missing = missing || [];\n                missing.push.apply(missing, execResult.missing);\n            }\n        });\n        return {\n            result: execResults.pop().result,\n            missing: missing,\n        };\n    };\n    StoreReader.prototype.executeSubSelectedArray = function (_a) {\n        var _this = this;\n        var field = _a.field, array = _a.array, execContext = _a.execContext;\n        var missing;\n        function handleMissing(childResult) {\n            if (childResult.missing) {\n                missing = missing || [];\n                missing.push.apply(missing, childResult.missing);\n            }\n            return childResult.result;\n        }\n        array = array.map(function (item) {\n            if (item === null) {\n                return null;\n            }\n            if (Array.isArray(item)) {\n                return handleMissing(_this.executeSubSelectedArray({\n                    field: field,\n                    array: item,\n                    execContext: execContext,\n                }));\n            }\n            if (field.selectionSet) {\n                return handleMissing(_this.executeSelectionSet({\n                    selectionSet: field.selectionSet,\n                    rootValue: item,\n                    execContext: execContext,\n                }));\n            }\n            assertSelectionSetForIdValue(field, item);\n            return item;\n        });\n        if (this.freezeResults && process.env.NODE_ENV !== 'production') {\n            Object.freeze(array);\n        }\n        return { result: array, missing: missing };\n    };\n    return StoreReader;\n}());\nfunction assertSelectionSetForIdValue(field, value) {\n    if (!field.selectionSet && isIdValue(value)) {\n        throw process.env.NODE_ENV === \"production\" ? new InvariantError(10) : new InvariantError(\"Missing selection set for object of type \" + value.typename + \" returned for query field \" + field.name.value);\n    }\n}\nfunction defaultFragmentMatcher() {\n    return true;\n}\nfunction assertIdValue(idValue) {\n    process.env.NODE_ENV === \"production\" ? invariant(isIdValue(idValue), 11) : invariant(isIdValue(idValue), \"Encountered a sub-selection on the query, but the store doesn't have an object reference. This should never happen during normal use unless you have custom code that is directly manipulating the store; please file an issue.\");\n}\nfunction readStoreResolver(object, typename, fieldName, args, context, _a) {\n    var resultKey = _a.resultKey, directives = _a.directives;\n    var storeKeyName = fieldName;\n    if (args || directives) {\n        storeKeyName = getStoreKeyName(storeKeyName, args, directives);\n    }\n    var fieldValue = void 0;\n    if (object) {\n        fieldValue = object[storeKeyName];\n        if (typeof fieldValue === 'undefined' &&\n            context.cacheRedirects &&\n            typeof typename === 'string') {\n            var type = context.cacheRedirects[typename];\n            if (type) {\n                var resolver = type[fieldName];\n                if (resolver) {\n                    fieldValue = resolver(object, args, {\n                        getCacheKey: function (storeObj) {\n                            var id = context.dataIdFromObject(storeObj);\n                            return id && toIdValue({\n                                id: id,\n                                typename: storeObj.__typename,\n                            });\n                        },\n                    });\n                }\n            }\n        }\n    }\n    if (typeof fieldValue === 'undefined') {\n        return {\n            result: fieldValue,\n            missing: [{\n                    object: object,\n                    fieldName: storeKeyName,\n                    tolerable: false,\n                }],\n        };\n    }\n    if (isJsonValue(fieldValue)) {\n        fieldValue = fieldValue.json;\n    }\n    return {\n        result: fieldValue,\n    };\n}\n\nvar ObjectCache = (function () {\n    function ObjectCache(data) {\n        if (data === void 0) { data = Object.create(null); }\n        this.data = data;\n    }\n    ObjectCache.prototype.toObject = function () {\n        return this.data;\n    };\n    ObjectCache.prototype.get = function (dataId) {\n        return this.data[dataId];\n    };\n    ObjectCache.prototype.set = function (dataId, value) {\n        this.data[dataId] = value;\n    };\n    ObjectCache.prototype.delete = function (dataId) {\n        this.data[dataId] = void 0;\n    };\n    ObjectCache.prototype.clear = function () {\n        this.data = Object.create(null);\n    };\n    ObjectCache.prototype.replace = function (newData) {\n        this.data = newData || Object.create(null);\n    };\n    return ObjectCache;\n}());\nfunction defaultNormalizedCacheFactory$1(seed) {\n    return new ObjectCache(seed);\n}\n\nvar WriteError = (function (_super) {\n    __extends(WriteError, _super);\n    function WriteError() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'WriteError';\n        return _this;\n    }\n    return WriteError;\n}(Error));\nfunction enhanceErrorWithDocument(error, document) {\n    var enhancedError = new WriteError(\"Error writing result to store for query:\\n \" + JSON.stringify(document));\n    enhancedError.message += '\\n' + error.message;\n    enhancedError.stack = error.stack;\n    return enhancedError;\n}\nvar StoreWriter = (function () {\n    function StoreWriter() {\n    }\n    StoreWriter.prototype.writeQueryToStore = function (_a) {\n        var query = _a.query, result = _a.result, _b = _a.store, store = _b === void 0 ? defaultNormalizedCacheFactory() : _b, variables = _a.variables, dataIdFromObject = _a.dataIdFromObject, fragmentMatcherFunction = _a.fragmentMatcherFunction;\n        return this.writeResultToStore({\n            dataId: 'ROOT_QUERY',\n            result: result,\n            document: query,\n            store: store,\n            variables: variables,\n            dataIdFromObject: dataIdFromObject,\n            fragmentMatcherFunction: fragmentMatcherFunction,\n        });\n    };\n    StoreWriter.prototype.writeResultToStore = function (_a) {\n        var dataId = _a.dataId, result = _a.result, document = _a.document, _b = _a.store, store = _b === void 0 ? defaultNormalizedCacheFactory() : _b, variables = _a.variables, dataIdFromObject = _a.dataIdFromObject, fragmentMatcherFunction = _a.fragmentMatcherFunction;\n        var operationDefinition = getOperationDefinition(document);\n        try {\n            return this.writeSelectionSetToStore({\n                result: result,\n                dataId: dataId,\n                selectionSet: operationDefinition.selectionSet,\n                context: {\n                    store: store,\n                    processedData: {},\n                    variables: assign({}, getDefaultValues(operationDefinition), variables),\n                    dataIdFromObject: dataIdFromObject,\n                    fragmentMap: createFragmentMap(getFragmentDefinitions(document)),\n                    fragmentMatcherFunction: fragmentMatcherFunction,\n                },\n            });\n        }\n        catch (e) {\n            throw enhanceErrorWithDocument(e, document);\n        }\n    };\n    StoreWriter.prototype.writeSelectionSetToStore = function (_a) {\n        var _this = this;\n        var result = _a.result, dataId = _a.dataId, selectionSet = _a.selectionSet, context = _a.context;\n        var variables = context.variables, store = context.store, fragmentMap = context.fragmentMap;\n        selectionSet.selections.forEach(function (selection) {\n            var _a;\n            if (!shouldInclude(selection, variables)) {\n                return;\n            }\n            if (isField(selection)) {\n                var resultFieldKey = resultKeyNameFromField(selection);\n                var value = result[resultFieldKey];\n                if (typeof value !== 'undefined') {\n                    _this.writeFieldToStore({\n                        dataId: dataId,\n                        value: value,\n                        field: selection,\n                        context: context,\n                    });\n                }\n                else {\n                    var isDefered = false;\n                    var isClient = false;\n                    if (selection.directives && selection.directives.length) {\n                        isDefered = selection.directives.some(function (directive) { return directive.name && directive.name.value === 'defer'; });\n                        isClient = selection.directives.some(function (directive) { return directive.name && directive.name.value === 'client'; });\n                    }\n                    if (!isDefered && !isClient && context.fragmentMatcherFunction) {\n                        process.env.NODE_ENV === \"production\" || invariant.warn(\"Missing field \" + resultFieldKey + \" in \" + JSON.stringify(result, null, 2).substring(0, 100));\n                    }\n                }\n            }\n            else {\n                var fragment = void 0;\n                if (isInlineFragment(selection)) {\n                    fragment = selection;\n                }\n                else {\n                    fragment = (fragmentMap || {})[selection.name.value];\n                    process.env.NODE_ENV === \"production\" ? invariant(fragment, 3) : invariant(fragment, \"No fragment named \" + selection.name.value + \".\");\n                }\n                var matches = true;\n                if (context.fragmentMatcherFunction && fragment.typeCondition) {\n                    var id = dataId || 'self';\n                    var idValue = toIdValue({ id: id, typename: undefined });\n                    var fakeContext = {\n                        store: new ObjectCache((_a = {}, _a[id] = result, _a)),\n                        cacheRedirects: {},\n                    };\n                    var match = context.fragmentMatcherFunction(idValue, fragment.typeCondition.name.value, fakeContext);\n                    if (!isProduction() && match === 'heuristic') {\n                        process.env.NODE_ENV === \"production\" || invariant.error('WARNING: heuristic fragment matching going on!');\n                    }\n                    matches = !!match;\n                }\n                if (matches) {\n                    _this.writeSelectionSetToStore({\n                        result: result,\n                        selectionSet: fragment.selectionSet,\n                        dataId: dataId,\n                        context: context,\n                    });\n                }\n            }\n        });\n        return store;\n    };\n    StoreWriter.prototype.writeFieldToStore = function (_a) {\n        var _b;\n        var field = _a.field, value = _a.value, dataId = _a.dataId, context = _a.context;\n        var variables = context.variables, dataIdFromObject = context.dataIdFromObject, store = context.store;\n        var storeValue;\n        var storeObject;\n        var storeFieldName = storeKeyNameFromField(field, variables);\n        if (!field.selectionSet || value === null) {\n            storeValue =\n                value != null && typeof value === 'object'\n                    ?\n                        { type: 'json', json: value }\n                    :\n                        value;\n        }\n        else if (Array.isArray(value)) {\n            var generatedId = dataId + \".\" + storeFieldName;\n            storeValue = this.processArrayValue(value, generatedId, field.selectionSet, context);\n        }\n        else {\n            var valueDataId = dataId + \".\" + storeFieldName;\n            var generated = true;\n            if (!isGeneratedId(valueDataId)) {\n                valueDataId = '$' + valueDataId;\n            }\n            if (dataIdFromObject) {\n                var semanticId = dataIdFromObject(value);\n                process.env.NODE_ENV === \"production\" ? invariant(!semanticId || !isGeneratedId(semanticId), 4) : invariant(!semanticId || !isGeneratedId(semanticId), 'IDs returned by dataIdFromObject cannot begin with the \"$\" character.');\n                if (semanticId ||\n                    (typeof semanticId === 'number' && semanticId === 0)) {\n                    valueDataId = semanticId;\n                    generated = false;\n                }\n            }\n            if (!isDataProcessed(valueDataId, field, context.processedData)) {\n                this.writeSelectionSetToStore({\n                    dataId: valueDataId,\n                    result: value,\n                    selectionSet: field.selectionSet,\n                    context: context,\n                });\n            }\n            var typename = value.__typename;\n            storeValue = toIdValue({ id: valueDataId, typename: typename }, generated);\n            storeObject = store.get(dataId);\n            var escapedId = storeObject && storeObject[storeFieldName];\n            if (escapedId !== storeValue && isIdValue(escapedId)) {\n                var hadTypename = escapedId.typename !== undefined;\n                var hasTypename = typename !== undefined;\n                var typenameChanged = hadTypename && hasTypename && escapedId.typename !== typename;\n                process.env.NODE_ENV === \"production\" ? invariant(!generated || escapedId.generated || typenameChanged, 5) : invariant(!generated || escapedId.generated || typenameChanged, \"Store error: the application attempted to write an object with no provided id but the store already contains an id of \" + escapedId.id + \" for this object. The selectionSet that was trying to be written is:\\n\" + JSON.stringify(field));\n                process.env.NODE_ENV === \"production\" ? invariant(!hadTypename || hasTypename, 6) : invariant(!hadTypename || hasTypename, \"Store error: the application attempted to write an object with no provided typename but the store already contains an object with typename of \" + escapedId.typename + \" for the object of id \" + escapedId.id + \". The selectionSet that was trying to be written is:\\n\" + JSON.stringify(field));\n                if (escapedId.generated) {\n                    if (typenameChanged) {\n                        if (!generated) {\n                            store.delete(escapedId.id);\n                        }\n                    }\n                    else {\n                        mergeWithGenerated(escapedId.id, storeValue.id, store);\n                    }\n                }\n            }\n        }\n        storeObject = store.get(dataId);\n        if (!storeObject || !isEqual(storeValue, storeObject[storeFieldName])) {\n            store.set(dataId, __assign(__assign({}, storeObject), (_b = {}, _b[storeFieldName] = storeValue, _b)));\n        }\n    };\n    StoreWriter.prototype.processArrayValue = function (value, generatedId, selectionSet, context) {\n        var _this = this;\n        return value.map(function (item, index) {\n            if (item === null) {\n                return null;\n            }\n            var itemDataId = generatedId + \".\" + index;\n            if (Array.isArray(item)) {\n                return _this.processArrayValue(item, itemDataId, selectionSet, context);\n            }\n            var generated = true;\n            if (context.dataIdFromObject) {\n                var semanticId = context.dataIdFromObject(item);\n                if (semanticId) {\n                    itemDataId = semanticId;\n                    generated = false;\n                }\n            }\n            if (!isDataProcessed(itemDataId, selectionSet, context.processedData)) {\n                _this.writeSelectionSetToStore({\n                    dataId: itemDataId,\n                    result: item,\n                    selectionSet: selectionSet,\n                    context: context,\n                });\n            }\n            return toIdValue({ id: itemDataId, typename: item.__typename }, generated);\n        });\n    };\n    return StoreWriter;\n}());\nfunction isGeneratedId(id) {\n    return id[0] === '$';\n}\nfunction mergeWithGenerated(generatedKey, realKey, cache) {\n    if (generatedKey === realKey) {\n        return false;\n    }\n    var generated = cache.get(generatedKey);\n    var real = cache.get(realKey);\n    var madeChanges = false;\n    Object.keys(generated).forEach(function (key) {\n        var value = generated[key];\n        var realValue = real[key];\n        if (isIdValue(value) &&\n            isGeneratedId(value.id) &&\n            isIdValue(realValue) &&\n            !isEqual(value, realValue) &&\n            mergeWithGenerated(value.id, realValue.id, cache)) {\n            madeChanges = true;\n        }\n    });\n    cache.delete(generatedKey);\n    var newRealValue = __assign(__assign({}, generated), real);\n    if (isEqual(newRealValue, real)) {\n        return madeChanges;\n    }\n    cache.set(realKey, newRealValue);\n    return true;\n}\nfunction isDataProcessed(dataId, field, processedData) {\n    if (!processedData) {\n        return false;\n    }\n    if (processedData[dataId]) {\n        if (processedData[dataId].indexOf(field) >= 0) {\n            return true;\n        }\n        else {\n            processedData[dataId].push(field);\n        }\n    }\n    else {\n        processedData[dataId] = [field];\n    }\n    return false;\n}\n\nvar defaultConfig = {\n    fragmentMatcher: new HeuristicFragmentMatcher(),\n    dataIdFromObject: defaultDataIdFromObject,\n    addTypename: true,\n    resultCaching: true,\n    freezeResults: false,\n};\nfunction defaultDataIdFromObject(result) {\n    if (result.__typename) {\n        if (result.id !== undefined) {\n            return result.__typename + \":\" + result.id;\n        }\n        if (result._id !== undefined) {\n            return result.__typename + \":\" + result._id;\n        }\n    }\n    return null;\n}\nvar hasOwn$1 = Object.prototype.hasOwnProperty;\nvar OptimisticCacheLayer = (function (_super) {\n    __extends(OptimisticCacheLayer, _super);\n    function OptimisticCacheLayer(optimisticId, parent, transaction) {\n        var _this = _super.call(this, Object.create(null)) || this;\n        _this.optimisticId = optimisticId;\n        _this.parent = parent;\n        _this.transaction = transaction;\n        return _this;\n    }\n    OptimisticCacheLayer.prototype.toObject = function () {\n        return __assign(__assign({}, this.parent.toObject()), this.data);\n    };\n    OptimisticCacheLayer.prototype.get = function (dataId) {\n        return hasOwn$1.call(this.data, dataId)\n            ? this.data[dataId]\n            : this.parent.get(dataId);\n    };\n    return OptimisticCacheLayer;\n}(ObjectCache));\nvar InMemoryCache = (function (_super) {\n    __extends(InMemoryCache, _super);\n    function InMemoryCache(config) {\n        if (config === void 0) { config = {}; }\n        var _this = _super.call(this) || this;\n        _this.watches = new Set();\n        _this.typenameDocumentCache = new Map();\n        _this.cacheKeyRoot = new KeyTrie(canUseWeakMap);\n        _this.silenceBroadcast = false;\n        _this.config = __assign(__assign({}, defaultConfig), config);\n        if (_this.config.customResolvers) {\n            process.env.NODE_ENV === \"production\" || invariant.warn('customResolvers have been renamed to cacheRedirects. Please update your config as we will be deprecating customResolvers in the next major version.');\n            _this.config.cacheRedirects = _this.config.customResolvers;\n        }\n        if (_this.config.cacheResolvers) {\n            process.env.NODE_ENV === \"production\" || invariant.warn('cacheResolvers have been renamed to cacheRedirects. Please update your config as we will be deprecating cacheResolvers in the next major version.');\n            _this.config.cacheRedirects = _this.config.cacheResolvers;\n        }\n        _this.addTypename = !!_this.config.addTypename;\n        _this.data = _this.config.resultCaching\n            ? new DepTrackingCache()\n            : new ObjectCache();\n        _this.optimisticData = _this.data;\n        _this.storeWriter = new StoreWriter();\n        _this.storeReader = new StoreReader({\n            cacheKeyRoot: _this.cacheKeyRoot,\n            freezeResults: config.freezeResults,\n        });\n        var cache = _this;\n        var maybeBroadcastWatch = cache.maybeBroadcastWatch;\n        _this.maybeBroadcastWatch = wrap(function (c) {\n            return maybeBroadcastWatch.call(_this, c);\n        }, {\n            makeCacheKey: function (c) {\n                if (c.optimistic) {\n                    return;\n                }\n                if (c.previousResult) {\n                    return;\n                }\n                if (cache.data instanceof DepTrackingCache) {\n                    return cache.cacheKeyRoot.lookup(c.query, JSON.stringify(c.variables));\n                }\n            }\n        });\n        return _this;\n    }\n    InMemoryCache.prototype.restore = function (data) {\n        if (data)\n            this.data.replace(data);\n        return this;\n    };\n    InMemoryCache.prototype.extract = function (optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return (optimistic ? this.optimisticData : this.data).toObject();\n    };\n    InMemoryCache.prototype.read = function (options) {\n        if (typeof options.rootId === 'string' &&\n            typeof this.data.get(options.rootId) === 'undefined') {\n            return null;\n        }\n        var fragmentMatcher = this.config.fragmentMatcher;\n        var fragmentMatcherFunction = fragmentMatcher && fragmentMatcher.match;\n        return this.storeReader.readQueryFromStore({\n            store: options.optimistic ? this.optimisticData : this.data,\n            query: this.transformDocument(options.query),\n            variables: options.variables,\n            rootId: options.rootId,\n            fragmentMatcherFunction: fragmentMatcherFunction,\n            previousResult: options.previousResult,\n            config: this.config,\n        }) || null;\n    };\n    InMemoryCache.prototype.write = function (write) {\n        var fragmentMatcher = this.config.fragmentMatcher;\n        var fragmentMatcherFunction = fragmentMatcher && fragmentMatcher.match;\n        this.storeWriter.writeResultToStore({\n            dataId: write.dataId,\n            result: write.result,\n            variables: write.variables,\n            document: this.transformDocument(write.query),\n            store: this.data,\n            dataIdFromObject: this.config.dataIdFromObject,\n            fragmentMatcherFunction: fragmentMatcherFunction,\n        });\n        this.broadcastWatches();\n    };\n    InMemoryCache.prototype.diff = function (query) {\n        var fragmentMatcher = this.config.fragmentMatcher;\n        var fragmentMatcherFunction = fragmentMatcher && fragmentMatcher.match;\n        return this.storeReader.diffQueryAgainstStore({\n            store: query.optimistic ? this.optimisticData : this.data,\n            query: this.transformDocument(query.query),\n            variables: query.variables,\n            returnPartialData: query.returnPartialData,\n            previousResult: query.previousResult,\n            fragmentMatcherFunction: fragmentMatcherFunction,\n            config: this.config,\n        });\n    };\n    InMemoryCache.prototype.watch = function (watch) {\n        var _this = this;\n        this.watches.add(watch);\n        return function () {\n            _this.watches.delete(watch);\n        };\n    };\n    InMemoryCache.prototype.evict = function (query) {\n        throw process.env.NODE_ENV === \"production\" ? new InvariantError(7) : new InvariantError(\"eviction is not implemented on InMemory Cache\");\n    };\n    InMemoryCache.prototype.reset = function () {\n        this.data.clear();\n        this.broadcastWatches();\n        return Promise.resolve();\n    };\n    InMemoryCache.prototype.removeOptimistic = function (idToRemove) {\n        var toReapply = [];\n        var removedCount = 0;\n        var layer = this.optimisticData;\n        while (layer instanceof OptimisticCacheLayer) {\n            if (layer.optimisticId === idToRemove) {\n                ++removedCount;\n            }\n            else {\n                toReapply.push(layer);\n            }\n            layer = layer.parent;\n        }\n        if (removedCount > 0) {\n            this.optimisticData = layer;\n            while (toReapply.length > 0) {\n                var layer_1 = toReapply.pop();\n                this.performTransaction(layer_1.transaction, layer_1.optimisticId);\n            }\n            this.broadcastWatches();\n        }\n    };\n    InMemoryCache.prototype.performTransaction = function (transaction, optimisticId) {\n        var _a = this, data = _a.data, silenceBroadcast = _a.silenceBroadcast;\n        this.silenceBroadcast = true;\n        if (typeof optimisticId === 'string') {\n            this.data = this.optimisticData = new OptimisticCacheLayer(optimisticId, this.optimisticData, transaction);\n        }\n        try {\n            transaction(this);\n        }\n        finally {\n            this.silenceBroadcast = silenceBroadcast;\n            this.data = data;\n        }\n        this.broadcastWatches();\n    };\n    InMemoryCache.prototype.recordOptimisticTransaction = function (transaction, id) {\n        return this.performTransaction(transaction, id);\n    };\n    InMemoryCache.prototype.transformDocument = function (document) {\n        if (this.addTypename) {\n            var result = this.typenameDocumentCache.get(document);\n            if (!result) {\n                result = addTypenameToDocument(document);\n                this.typenameDocumentCache.set(document, result);\n                this.typenameDocumentCache.set(result, result);\n            }\n            return result;\n        }\n        return document;\n    };\n    InMemoryCache.prototype.broadcastWatches = function () {\n        var _this = this;\n        if (!this.silenceBroadcast) {\n            this.watches.forEach(function (c) { return _this.maybeBroadcastWatch(c); });\n        }\n    };\n    InMemoryCache.prototype.maybeBroadcastWatch = function (c) {\n        c.callback(this.diff({\n            query: c.query,\n            variables: c.variables,\n            previousResult: c.previousResult && c.previousResult(),\n            optimistic: c.optimistic,\n        }));\n    };\n    return InMemoryCache;\n}(ApolloCache));\n\nexport { HeuristicFragmentMatcher, InMemoryCache, IntrospectionFragmentMatcher, ObjectCache, StoreReader, StoreWriter, WriteError, assertIdValue, defaultDataIdFromObject, defaultNormalizedCacheFactory$1 as defaultNormalizedCacheFactory, enhanceErrorWithDocument };\n//# sourceMappingURL=bundle.esm.js.map\n","/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n *\n * @internal\n */\nexport function dedentBlockStringValue(rawString) {\n  // Expand a block string's raw value into independent lines.\n  var lines = rawString.split(/\\r\\n|[\\n\\r]/g); // Remove common indentation from all lines but first.\n\n  var commonIndent = getBlockStringIndentation(lines);\n\n  if (commonIndent !== 0) {\n    for (var i = 1; i < lines.length; i++) {\n      lines[i] = lines[i].slice(commonIndent);\n    }\n  } // Remove leading and trailing blank lines.\n\n\n  while (lines.length > 0 && isBlank(lines[0])) {\n    lines.shift();\n  }\n\n  while (lines.length > 0 && isBlank(lines[lines.length - 1])) {\n    lines.pop();\n  } // Return a string of the lines joined with U+000A.\n\n\n  return lines.join('\\n');\n}\n/**\n * @internal\n */\n\nexport function getBlockStringIndentation(lines) {\n  var commonIndent = null;\n\n  for (var i = 1; i < lines.length; i++) {\n    var line = lines[i];\n    var indent = leadingWhitespace(line);\n\n    if (indent === line.length) {\n      continue; // skip empty lines\n    }\n\n    if (commonIndent === null || indent < commonIndent) {\n      commonIndent = indent;\n\n      if (commonIndent === 0) {\n        break;\n      }\n    }\n  }\n\n  return commonIndent === null ? 0 : commonIndent;\n}\n\nfunction leadingWhitespace(str) {\n  var i = 0;\n\n  while (i < str.length && (str[i] === ' ' || str[i] === '\\t')) {\n    i++;\n  }\n\n  return i;\n}\n\nfunction isBlank(str) {\n  return leadingWhitespace(str) === str.length;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n *\n * @internal\n */\n\n\nexport function printBlockString(value) {\n  var indentation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var preferMultipleLines = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var isSingleLine = value.indexOf('\\n') === -1;\n  var hasLeadingSpace = value[0] === ' ' || value[0] === '\\t';\n  var hasTrailingQuote = value[value.length - 1] === '\"';\n  var hasTrailingSlash = value[value.length - 1] === '\\\\';\n  var printAsMultipleLines = !isSingleLine || hasTrailingQuote || hasTrailingSlash || preferMultipleLines;\n  var result = ''; // Format a multi-line block quote to account for leading space.\n\n  if (printAsMultipleLines && !(isSingleLine && hasLeadingSpace)) {\n    result += '\\n' + indentation;\n  }\n\n  result += indentation ? value.replace(/\\n/g, '\\n' + indentation) : value;\n\n  if (printAsMultipleLines) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result.replace(/\"\"\"/g, '\\\\\"\"\"') + '\"\"\"';\n}\n","import { visit } from \"./visitor.mjs\";\nimport { printBlockString } from \"./blockString.mjs\";\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\n\nexport function print(ast) {\n  return visit(ast, {\n    leave: printDocASTReducer\n  });\n} // TODO: provide better type coverage in future\n\nvar printDocASTReducer = {\n  Name: function Name(node) {\n    return node.value;\n  },\n  Variable: function Variable(node) {\n    return '$' + node.name;\n  },\n  // Document\n  Document: function Document(node) {\n    return join(node.definitions, '\\n\\n') + '\\n';\n  },\n  OperationDefinition: function OperationDefinition(node) {\n    var op = node.operation;\n    var name = node.name;\n    var varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n    var directives = join(node.directives, ' ');\n    var selectionSet = node.selectionSet; // Anonymous queries with no directives or variable definitions can use\n    // the query short form.\n\n    return !name && !directives && !varDefs && op === 'query' ? selectionSet : join([op, join([name, varDefs]), directives, selectionSet], ' ');\n  },\n  VariableDefinition: function VariableDefinition(_ref) {\n    var variable = _ref.variable,\n        type = _ref.type,\n        defaultValue = _ref.defaultValue,\n        directives = _ref.directives;\n    return variable + ': ' + type + wrap(' = ', defaultValue) + wrap(' ', join(directives, ' '));\n  },\n  SelectionSet: function SelectionSet(_ref2) {\n    var selections = _ref2.selections;\n    return block(selections);\n  },\n  Field: function Field(_ref3) {\n    var alias = _ref3.alias,\n        name = _ref3.name,\n        args = _ref3.arguments,\n        directives = _ref3.directives,\n        selectionSet = _ref3.selectionSet;\n    return join([wrap('', alias, ': ') + name + wrap('(', join(args, ', '), ')'), join(directives, ' '), selectionSet], ' ');\n  },\n  Argument: function Argument(_ref4) {\n    var name = _ref4.name,\n        value = _ref4.value;\n    return name + ': ' + value;\n  },\n  // Fragments\n  FragmentSpread: function FragmentSpread(_ref5) {\n    var name = _ref5.name,\n        directives = _ref5.directives;\n    return '...' + name + wrap(' ', join(directives, ' '));\n  },\n  InlineFragment: function InlineFragment(_ref6) {\n    var typeCondition = _ref6.typeCondition,\n        directives = _ref6.directives,\n        selectionSet = _ref6.selectionSet;\n    return join(['...', wrap('on ', typeCondition), join(directives, ' '), selectionSet], ' ');\n  },\n  FragmentDefinition: function FragmentDefinition(_ref7) {\n    var name = _ref7.name,\n        typeCondition = _ref7.typeCondition,\n        variableDefinitions = _ref7.variableDefinitions,\n        directives = _ref7.directives,\n        selectionSet = _ref7.selectionSet;\n    return (// Note: fragment variable definitions are experimental and may be changed\n      // or removed in the future.\n      \"fragment \".concat(name).concat(wrap('(', join(variableDefinitions, ', '), ')'), \" \") + \"on \".concat(typeCondition, \" \").concat(wrap('', join(directives, ' '), ' ')) + selectionSet\n    );\n  },\n  // Value\n  IntValue: function IntValue(_ref8) {\n    var value = _ref8.value;\n    return value;\n  },\n  FloatValue: function FloatValue(_ref9) {\n    var value = _ref9.value;\n    return value;\n  },\n  StringValue: function StringValue(_ref10, key) {\n    var value = _ref10.value,\n        isBlockString = _ref10.block;\n    return isBlockString ? printBlockString(value, key === 'description' ? '' : '  ') : JSON.stringify(value);\n  },\n  BooleanValue: function BooleanValue(_ref11) {\n    var value = _ref11.value;\n    return value ? 'true' : 'false';\n  },\n  NullValue: function NullValue() {\n    return 'null';\n  },\n  EnumValue: function EnumValue(_ref12) {\n    var value = _ref12.value;\n    return value;\n  },\n  ListValue: function ListValue(_ref13) {\n    var values = _ref13.values;\n    return '[' + join(values, ', ') + ']';\n  },\n  ObjectValue: function ObjectValue(_ref14) {\n    var fields = _ref14.fields;\n    return '{' + join(fields, ', ') + '}';\n  },\n  ObjectField: function ObjectField(_ref15) {\n    var name = _ref15.name,\n        value = _ref15.value;\n    return name + ': ' + value;\n  },\n  // Directive\n  Directive: function Directive(_ref16) {\n    var name = _ref16.name,\n        args = _ref16.arguments;\n    return '@' + name + wrap('(', join(args, ', '), ')');\n  },\n  // Type\n  NamedType: function NamedType(_ref17) {\n    var name = _ref17.name;\n    return name;\n  },\n  ListType: function ListType(_ref18) {\n    var type = _ref18.type;\n    return '[' + type + ']';\n  },\n  NonNullType: function NonNullType(_ref19) {\n    var type = _ref19.type;\n    return type + '!';\n  },\n  // Type System Definitions\n  SchemaDefinition: addDescription(function (_ref20) {\n    var directives = _ref20.directives,\n        operationTypes = _ref20.operationTypes;\n    return join(['schema', join(directives, ' '), block(operationTypes)], ' ');\n  }),\n  OperationTypeDefinition: function OperationTypeDefinition(_ref21) {\n    var operation = _ref21.operation,\n        type = _ref21.type;\n    return operation + ': ' + type;\n  },\n  ScalarTypeDefinition: addDescription(function (_ref22) {\n    var name = _ref22.name,\n        directives = _ref22.directives;\n    return join(['scalar', name, join(directives, ' ')], ' ');\n  }),\n  ObjectTypeDefinition: addDescription(function (_ref23) {\n    var name = _ref23.name,\n        interfaces = _ref23.interfaces,\n        directives = _ref23.directives,\n        fields = _ref23.fields;\n    return join(['type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  }),\n  FieldDefinition: addDescription(function (_ref24) {\n    var name = _ref24.name,\n        args = _ref24.arguments,\n        type = _ref24.type,\n        directives = _ref24.directives;\n    return name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + ': ' + type + wrap(' ', join(directives, ' '));\n  }),\n  InputValueDefinition: addDescription(function (_ref25) {\n    var name = _ref25.name,\n        type = _ref25.type,\n        defaultValue = _ref25.defaultValue,\n        directives = _ref25.directives;\n    return join([name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')], ' ');\n  }),\n  InterfaceTypeDefinition: addDescription(function (_ref26) {\n    var name = _ref26.name,\n        interfaces = _ref26.interfaces,\n        directives = _ref26.directives,\n        fields = _ref26.fields;\n    return join(['interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  }),\n  UnionTypeDefinition: addDescription(function (_ref27) {\n    var name = _ref27.name,\n        directives = _ref27.directives,\n        types = _ref27.types;\n    return join(['union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  }),\n  EnumTypeDefinition: addDescription(function (_ref28) {\n    var name = _ref28.name,\n        directives = _ref28.directives,\n        values = _ref28.values;\n    return join(['enum', name, join(directives, ' '), block(values)], ' ');\n  }),\n  EnumValueDefinition: addDescription(function (_ref29) {\n    var name = _ref29.name,\n        directives = _ref29.directives;\n    return join([name, join(directives, ' ')], ' ');\n  }),\n  InputObjectTypeDefinition: addDescription(function (_ref30) {\n    var name = _ref30.name,\n        directives = _ref30.directives,\n        fields = _ref30.fields;\n    return join(['input', name, join(directives, ' '), block(fields)], ' ');\n  }),\n  DirectiveDefinition: addDescription(function (_ref31) {\n    var name = _ref31.name,\n        args = _ref31.arguments,\n        repeatable = _ref31.repeatable,\n        locations = _ref31.locations;\n    return 'directive @' + name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + (repeatable ? ' repeatable' : '') + ' on ' + join(locations, ' | ');\n  }),\n  SchemaExtension: function SchemaExtension(_ref32) {\n    var directives = _ref32.directives,\n        operationTypes = _ref32.operationTypes;\n    return join(['extend schema', join(directives, ' '), block(operationTypes)], ' ');\n  },\n  ScalarTypeExtension: function ScalarTypeExtension(_ref33) {\n    var name = _ref33.name,\n        directives = _ref33.directives;\n    return join(['extend scalar', name, join(directives, ' ')], ' ');\n  },\n  ObjectTypeExtension: function ObjectTypeExtension(_ref34) {\n    var name = _ref34.name,\n        interfaces = _ref34.interfaces,\n        directives = _ref34.directives,\n        fields = _ref34.fields;\n    return join(['extend type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  },\n  InterfaceTypeExtension: function InterfaceTypeExtension(_ref35) {\n    var name = _ref35.name,\n        interfaces = _ref35.interfaces,\n        directives = _ref35.directives,\n        fields = _ref35.fields;\n    return join(['extend interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  },\n  UnionTypeExtension: function UnionTypeExtension(_ref36) {\n    var name = _ref36.name,\n        directives = _ref36.directives,\n        types = _ref36.types;\n    return join(['extend union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  },\n  EnumTypeExtension: function EnumTypeExtension(_ref37) {\n    var name = _ref37.name,\n        directives = _ref37.directives,\n        values = _ref37.values;\n    return join(['extend enum', name, join(directives, ' '), block(values)], ' ');\n  },\n  InputObjectTypeExtension: function InputObjectTypeExtension(_ref38) {\n    var name = _ref38.name,\n        directives = _ref38.directives,\n        fields = _ref38.fields;\n    return join(['extend input', name, join(directives, ' '), block(fields)], ' ');\n  }\n};\n\nfunction addDescription(cb) {\n  return function (node) {\n    return join([node.description, cb(node)], '\\n');\n  };\n}\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\n\nfunction join(maybeArray) {\n  var _maybeArray$filter$jo;\n\n  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return (_maybeArray$filter$jo = maybeArray === null || maybeArray === void 0 ? void 0 : maybeArray.filter(function (x) {\n    return x;\n  }).join(separator)) !== null && _maybeArray$filter$jo !== void 0 ? _maybeArray$filter$jo : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an\n * indented \"{ }\" block.\n */\n\n\nfunction block(array) {\n  return array && array.length !== 0 ? '{\\n' + indent(join(array, '\\n')) + '\\n}' : '';\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise\n * print an empty string.\n */\n\n\nfunction wrap(start, maybeString) {\n  var end = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  return maybeString ? start + maybeString + end : '';\n}\n\nfunction indent(maybeString) {\n  return maybeString && '  ' + maybeString.replace(/\\n/g, '\\n  ');\n}\n\nfunction isMultiline(string) {\n  return string.indexOf('\\n') !== -1;\n}\n\nfunction hasMultilineItems(maybeArray) {\n  return maybeArray && maybeArray.some(isMultiline);\n}\n","import { __assign } from 'tslib';\nimport { print } from 'graphql/language/printer';\nimport { InvariantError } from 'ts-invariant';\n\nvar defaultHttpOptions = {\n    includeQuery: true,\n    includeExtensions: false,\n};\nvar defaultHeaders = {\n    accept: '*/*',\n    'content-type': 'application/json',\n};\nvar defaultOptions = {\n    method: 'POST',\n};\nvar fallbackHttpConfig = {\n    http: defaultHttpOptions,\n    headers: defaultHeaders,\n    options: defaultOptions,\n};\nvar throwServerError = function (response, result, message) {\n    var error = new Error(message);\n    error.name = 'ServerError';\n    error.response = response;\n    error.statusCode = response.status;\n    error.result = result;\n    throw error;\n};\nvar parseAndCheckHttpResponse = function (operations) { return function (response) {\n    return (response\n        .text()\n        .then(function (bodyText) {\n        try {\n            return JSON.parse(bodyText);\n        }\n        catch (err) {\n            var parseError = err;\n            parseError.name = 'ServerParseError';\n            parseError.response = response;\n            parseError.statusCode = response.status;\n            parseError.bodyText = bodyText;\n            return Promise.reject(parseError);\n        }\n    })\n        .then(function (result) {\n        if (response.status >= 300) {\n            throwServerError(response, result, \"Response not successful: Received status code \" + response.status);\n        }\n        if (!Array.isArray(result) &&\n            !result.hasOwnProperty('data') &&\n            !result.hasOwnProperty('errors')) {\n            throwServerError(response, result, \"Server response was missing for query '\" + (Array.isArray(operations)\n                ? operations.map(function (op) { return op.operationName; })\n                : operations.operationName) + \"'.\");\n        }\n        return result;\n    }));\n}; };\nvar checkFetcher = function (fetcher) {\n    if (!fetcher && typeof fetch === 'undefined') {\n        var library = 'unfetch';\n        if (typeof window === 'undefined')\n            library = 'node-fetch';\n        throw process.env.NODE_ENV === \"production\" ? new InvariantError(1) : new InvariantError(\"\\nfetch is not found globally and no fetcher passed, to fix pass a fetch for\\nyour environment like https://www.npmjs.com/package/\" + library + \".\\n\\nFor example:\\nimport fetch from '\" + library + \"';\\nimport { createHttpLink } from 'apollo-link-http';\\n\\nconst link = createHttpLink({ uri: '/graphql', fetch: fetch });\");\n    }\n};\nvar createSignalIfSupported = function () {\n    if (typeof AbortController === 'undefined')\n        return { controller: false, signal: false };\n    var controller = new AbortController();\n    var signal = controller.signal;\n    return { controller: controller, signal: signal };\n};\nvar selectHttpOptionsAndBody = function (operation, fallbackConfig) {\n    var configs = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        configs[_i - 2] = arguments[_i];\n    }\n    var options = __assign({}, fallbackConfig.options, { headers: fallbackConfig.headers, credentials: fallbackConfig.credentials });\n    var http = fallbackConfig.http;\n    configs.forEach(function (config) {\n        options = __assign({}, options, config.options, { headers: __assign({}, options.headers, config.headers) });\n        if (config.credentials)\n            options.credentials = config.credentials;\n        http = __assign({}, http, config.http);\n    });\n    var operationName = operation.operationName, extensions = operation.extensions, variables = operation.variables, query = operation.query;\n    var body = { operationName: operationName, variables: variables };\n    if (http.includeExtensions)\n        body.extensions = extensions;\n    if (http.includeQuery)\n        body.query = print(query);\n    return {\n        options: options,\n        body: body,\n    };\n};\nvar serializeFetchParameter = function (p, label) {\n    var serialized;\n    try {\n        serialized = JSON.stringify(p);\n    }\n    catch (e) {\n        var parseError = process.env.NODE_ENV === \"production\" ? new InvariantError(2) : new InvariantError(\"Network request failed. \" + label + \" is not serializable: \" + e.message);\n        parseError.parseError = e;\n        throw parseError;\n    }\n    return serialized;\n};\nvar selectURI = function (operation, fallbackURI) {\n    var context = operation.getContext();\n    var contextURI = context.uri;\n    if (contextURI) {\n        return contextURI;\n    }\n    else if (typeof fallbackURI === 'function') {\n        return fallbackURI(operation);\n    }\n    else {\n        return fallbackURI || '/graphql';\n    }\n};\n\nexport { checkFetcher, createSignalIfSupported, fallbackHttpConfig, parseAndCheckHttpResponse, selectHttpOptionsAndBody, selectURI, serializeFetchParameter, throwServerError };\n//# sourceMappingURL=bundle.esm.js.map\n","import { __rest, __assign, __extends } from 'tslib';\nimport { ApolloLink, fromError, Observable } from 'apollo-link';\nimport { checkFetcher, selectURI, selectHttpOptionsAndBody, fallbackHttpConfig, createSignalIfSupported, serializeFetchParameter, parseAndCheckHttpResponse } from 'apollo-link-http-common';\n\nvar createHttpLink = function (linkOptions) {\n    if (linkOptions === void 0) { linkOptions = {}; }\n    var _a = linkOptions.uri, uri = _a === void 0 ? '/graphql' : _a, fetcher = linkOptions.fetch, includeExtensions = linkOptions.includeExtensions, useGETForQueries = linkOptions.useGETForQueries, requestOptions = __rest(linkOptions, [\"uri\", \"fetch\", \"includeExtensions\", \"useGETForQueries\"]);\n    checkFetcher(fetcher);\n    if (!fetcher) {\n        fetcher = fetch;\n    }\n    var linkConfig = {\n        http: { includeExtensions: includeExtensions },\n        options: requestOptions.fetchOptions,\n        credentials: requestOptions.credentials,\n        headers: requestOptions.headers,\n    };\n    return new ApolloLink(function (operation) {\n        var chosenURI = selectURI(operation, uri);\n        var context = operation.getContext();\n        var clientAwarenessHeaders = {};\n        if (context.clientAwareness) {\n            var _a = context.clientAwareness, name_1 = _a.name, version = _a.version;\n            if (name_1) {\n                clientAwarenessHeaders['apollographql-client-name'] = name_1;\n            }\n            if (version) {\n                clientAwarenessHeaders['apollographql-client-version'] = version;\n            }\n        }\n        var contextHeaders = __assign({}, clientAwarenessHeaders, context.headers);\n        var contextConfig = {\n            http: context.http,\n            options: context.fetchOptions,\n            credentials: context.credentials,\n            headers: contextHeaders,\n        };\n        var _b = selectHttpOptionsAndBody(operation, fallbackHttpConfig, linkConfig, contextConfig), options = _b.options, body = _b.body;\n        var controller;\n        if (!options.signal) {\n            var _c = createSignalIfSupported(), _controller = _c.controller, signal = _c.signal;\n            controller = _controller;\n            if (controller)\n                options.signal = signal;\n        }\n        var definitionIsMutation = function (d) {\n            return d.kind === 'OperationDefinition' && d.operation === 'mutation';\n        };\n        if (useGETForQueries &&\n            !operation.query.definitions.some(definitionIsMutation)) {\n            options.method = 'GET';\n        }\n        if (options.method === 'GET') {\n            var _d = rewriteURIForGET(chosenURI, body), newURI = _d.newURI, parseError = _d.parseError;\n            if (parseError) {\n                return fromError(parseError);\n            }\n            chosenURI = newURI;\n        }\n        else {\n            try {\n                options.body = serializeFetchParameter(body, 'Payload');\n            }\n            catch (parseError) {\n                return fromError(parseError);\n            }\n        }\n        return new Observable(function (observer) {\n            fetcher(chosenURI, options)\n                .then(function (response) {\n                operation.setContext({ response: response });\n                return response;\n            })\n                .then(parseAndCheckHttpResponse(operation))\n                .then(function (result) {\n                observer.next(result);\n                observer.complete();\n                return result;\n            })\n                .catch(function (err) {\n                if (err.name === 'AbortError')\n                    return;\n                if (err.result && err.result.errors && err.result.data) {\n                    observer.next(err.result);\n                }\n                observer.error(err);\n            });\n            return function () {\n                if (controller)\n                    controller.abort();\n            };\n        });\n    });\n};\nfunction rewriteURIForGET(chosenURI, body) {\n    var queryParams = [];\n    var addQueryParam = function (key, value) {\n        queryParams.push(key + \"=\" + encodeURIComponent(value));\n    };\n    if ('query' in body) {\n        addQueryParam('query', body.query);\n    }\n    if (body.operationName) {\n        addQueryParam('operationName', body.operationName);\n    }\n    if (body.variables) {\n        var serializedVariables = void 0;\n        try {\n            serializedVariables = serializeFetchParameter(body.variables, 'Variables map');\n        }\n        catch (parseError) {\n            return { parseError: parseError };\n        }\n        addQueryParam('variables', serializedVariables);\n    }\n    if (body.extensions) {\n        var serializedExtensions = void 0;\n        try {\n            serializedExtensions = serializeFetchParameter(body.extensions, 'Extensions map');\n        }\n        catch (parseError) {\n            return { parseError: parseError };\n        }\n        addQueryParam('extensions', serializedExtensions);\n    }\n    var fragment = '', preFragment = chosenURI;\n    var fragmentStart = chosenURI.indexOf('#');\n    if (fragmentStart !== -1) {\n        fragment = chosenURI.substr(fragmentStart);\n        preFragment = chosenURI.substr(0, fragmentStart);\n    }\n    var queryParamsPrefix = preFragment.indexOf('?') === -1 ? '?' : '&';\n    var newURI = preFragment + queryParamsPrefix + queryParams.join('&') + fragment;\n    return { newURI: newURI };\n}\nvar HttpLink = (function (_super) {\n    __extends(HttpLink, _super);\n    function HttpLink(opts) {\n        return _super.call(this, createHttpLink(opts).request) || this;\n    }\n    return HttpLink;\n}(ApolloLink));\n\nexport { HttpLink, createHttpLink };\n//# sourceMappingURL=bundle.esm.js.map\n","export default function devAssert(condition, message) {\n  var booleanCondition = Boolean(condition); // istanbul ignore else (See transformation done in './resources/inlineInvariant.js')\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\nexport default function isObjectLike(value) {\n  return _typeof(value) == 'object' && value !== null;\n}\n","// In ES2015 (or a polyfilled) environment, this will be Symbol.iterator\n// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\nexport var SYMBOL_ITERATOR = typeof Symbol === 'function' ? Symbol.iterator : '@@iterator'; // In ES2017 (or a polyfilled) environment, this will be Symbol.asyncIterator\n// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\nexport var SYMBOL_ASYNC_ITERATOR = // $FlowFixMe Flow doesn't define `Symbol.asyncIterator` yet\ntypeof Symbol === 'function' ? Symbol.asyncIterator : '@@asyncIterator'; // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\nexport var SYMBOL_TO_STRING_TAG = // $FlowFixMe Flow doesn't define `Symbol.toStringTag` yet\ntypeof Symbol === 'function' ? Symbol.toStringTag : '@@toStringTag';\n","/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  var lineRegexp = /\\r\\n|[\\n\\r]/g;\n  var line = 1;\n  var column = position + 1;\n  var match;\n\n  while ((match = lineRegexp.exec(source.body)) && match.index < position) {\n    line += 1;\n    column = position + 1 - (match.index + match[0].length);\n  }\n\n  return {\n    line: line,\n    column: column\n  };\n}\n","import { getLocation } from \"./location.mjs\";\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printLocation(location) {\n  return printSourceLocation(location.source, getLocation(location.source, location.start));\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  var firstLineColumnOffset = source.locationOffset.column - 1;\n  var body = whitespace(firstLineColumnOffset) + source.body;\n  var lineIndex = sourceLocation.line - 1;\n  var lineOffset = source.locationOffset.line - 1;\n  var lineNum = sourceLocation.line + lineOffset;\n  var columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  var columnNum = sourceLocation.column + columnOffset;\n  var locationStr = \"\".concat(source.name, \":\").concat(lineNum, \":\").concat(columnNum, \"\\n\");\n  var lines = body.split(/\\r\\n|[\\n\\r]/g);\n  var locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    var subLineIndex = Math.floor(columnNum / 80);\n    var subLineColumnNum = columnNum % 80;\n    var subLines = [];\n\n    for (var i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return locationStr + printPrefixedLines([[\"\".concat(lineNum), subLines[0]]].concat(subLines.slice(1, subLineIndex + 1).map(function (subLine) {\n      return ['', subLine];\n    }), [[' ', whitespace(subLineColumnNum - 1) + '^'], ['', subLines[subLineIndex + 1]]]));\n  }\n\n  return locationStr + printPrefixedLines([// Lines specified like this: [\"prefix\", \"string\"],\n  [\"\".concat(lineNum - 1), lines[lineIndex - 1]], [\"\".concat(lineNum), locationLine], ['', whitespace(columnNum - 1) + '^'], [\"\".concat(lineNum + 1), lines[lineIndex + 1]]]);\n}\n\nfunction printPrefixedLines(lines) {\n  var existingLines = lines.filter(function (_ref) {\n    var _ = _ref[0],\n        line = _ref[1];\n    return line !== undefined;\n  });\n  var padLen = Math.max.apply(Math, existingLines.map(function (_ref2) {\n    var prefix = _ref2[0];\n    return prefix.length;\n  }));\n  return existingLines.map(function (_ref3) {\n    var prefix = _ref3[0],\n        line = _ref3[1];\n    return leftPad(padLen, prefix) + (line ? ' | ' + line : ' |');\n  }).join('\\n');\n}\n\nfunction whitespace(len) {\n  return Array(len + 1).join(' ');\n}\n\nfunction leftPad(len, str) {\n  return whitespace(len - str.length) + str;\n}\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n// FIXME:\n// flowlint uninitialized-instance-property:off\nimport isObjectLike from \"../jsutils/isObjectLike.mjs\";\nimport { SYMBOL_TO_STRING_TAG } from \"../polyfills/symbols.mjs\";\nimport { getLocation } from \"../language/location.mjs\";\nimport { printLocation, printSourceLocation } from \"../language/printLocation.mjs\";\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nexport var GraphQLError = /*#__PURE__*/function (_Error) {\n  _inherits(GraphQLError, _Error);\n\n  var _super = _createSuper(GraphQLError);\n\n  /**\n   * A message describing the Error for debugging purposes.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   *\n   * Note: should be treated as readonly, despite invariant usage.\n   */\n\n  /**\n   * An array of { line, column } locations within the source GraphQL document\n   * which correspond to this error.\n   *\n   * Errors during validation often contain multiple locations, for example to\n   * point out two things with the same name. Errors during execution include a\n   * single location, the field which produced the error.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array describing the JSON-path into the execution response which\n   * corresponds to this error. Only included for errors during execution.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array of GraphQL AST Nodes corresponding to this error.\n   */\n\n  /**\n   * The source GraphQL document for the first location of this error.\n   *\n   * Note that if this Error represents more than one node, the source may not\n   * represent nodes after the first node.\n   */\n\n  /**\n   * An array of character offsets within the source GraphQL document\n   * which correspond to this error.\n   */\n\n  /**\n   * The original error thrown from a field resolver during execution.\n   */\n\n  /**\n   * Extension fields to add to the formatted error.\n   */\n  function GraphQLError(message, nodes, source, positions, path, originalError, extensions) {\n    var _locations2, _source2, _positions2, _extensions2;\n\n    var _this;\n\n    _classCallCheck(this, GraphQLError);\n\n    _this = _super.call(this, message); // Compute list of blame nodes.\n\n    var _nodes = Array.isArray(nodes) ? nodes.length !== 0 ? nodes : undefined : nodes ? [nodes] : undefined; // Compute locations in the source for the given nodes/positions.\n\n\n    var _source = source;\n\n    if (!_source && _nodes) {\n      var _nodes$0$loc;\n\n      _source = (_nodes$0$loc = _nodes[0].loc) === null || _nodes$0$loc === void 0 ? void 0 : _nodes$0$loc.source;\n    }\n\n    var _positions = positions;\n\n    if (!_positions && _nodes) {\n      _positions = _nodes.reduce(function (list, node) {\n        if (node.loc) {\n          list.push(node.loc.start);\n        }\n\n        return list;\n      }, []);\n    }\n\n    if (_positions && _positions.length === 0) {\n      _positions = undefined;\n    }\n\n    var _locations;\n\n    if (positions && source) {\n      _locations = positions.map(function (pos) {\n        return getLocation(source, pos);\n      });\n    } else if (_nodes) {\n      _locations = _nodes.reduce(function (list, node) {\n        if (node.loc) {\n          list.push(getLocation(node.loc.source, node.loc.start));\n        }\n\n        return list;\n      }, []);\n    }\n\n    var _extensions = extensions;\n\n    if (_extensions == null && originalError != null) {\n      var originalExtensions = originalError.extensions;\n\n      if (isObjectLike(originalExtensions)) {\n        _extensions = originalExtensions;\n      }\n    }\n\n    Object.defineProperties(_assertThisInitialized(_this), {\n      name: {\n        value: 'GraphQLError'\n      },\n      message: {\n        value: message,\n        // By being enumerable, JSON.stringify will include `message` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: true,\n        writable: true\n      },\n      locations: {\n        // Coercing falsy values to undefined ensures they will not be included\n        // in JSON.stringify() when not provided.\n        value: (_locations2 = _locations) !== null && _locations2 !== void 0 ? _locations2 : undefined,\n        // By being enumerable, JSON.stringify will include `locations` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: _locations != null\n      },\n      path: {\n        // Coercing falsy values to undefined ensures they will not be included\n        // in JSON.stringify() when not provided.\n        value: path !== null && path !== void 0 ? path : undefined,\n        // By being enumerable, JSON.stringify will include `path` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: path != null\n      },\n      nodes: {\n        value: _nodes !== null && _nodes !== void 0 ? _nodes : undefined\n      },\n      source: {\n        value: (_source2 = _source) !== null && _source2 !== void 0 ? _source2 : undefined\n      },\n      positions: {\n        value: (_positions2 = _positions) !== null && _positions2 !== void 0 ? _positions2 : undefined\n      },\n      originalError: {\n        value: originalError\n      },\n      extensions: {\n        // Coercing falsy values to undefined ensures they will not be included\n        // in JSON.stringify() when not provided.\n        value: (_extensions2 = _extensions) !== null && _extensions2 !== void 0 ? _extensions2 : undefined,\n        // By being enumerable, JSON.stringify will include `path` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: _extensions != null\n      }\n    }); // Include (non-enumerable) stack trace.\n\n    if (originalError === null || originalError === void 0 ? void 0 : originalError.stack) {\n      Object.defineProperty(_assertThisInitialized(_this), 'stack', {\n        value: originalError.stack,\n        writable: true,\n        configurable: true\n      });\n      return _possibleConstructorReturn(_this);\n    } // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(_assertThisInitialized(_this), GraphQLError);\n    } else {\n      Object.defineProperty(_assertThisInitialized(_this), 'stack', {\n        value: Error().stack,\n        writable: true,\n        configurable: true\n      });\n    }\n\n    return _this;\n  }\n\n  _createClass(GraphQLError, [{\n    key: \"toString\",\n    value: function toString() {\n      return printError(this);\n    } // FIXME: workaround to not break chai comparisons, should be remove in v16\n    // $FlowFixMe Flow doesn't support computed properties yet\n\n  }, {\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'Object';\n    }\n  }]);\n\n  return GraphQLError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n */\n\nexport function printError(error) {\n  var output = error.message;\n\n  if (error.nodes) {\n    for (var _i2 = 0, _error$nodes2 = error.nodes; _i2 < _error$nodes2.length; _i2++) {\n      var node = _error$nodes2[_i2];\n\n      if (node.loc) {\n        output += '\\n\\n' + printLocation(node.loc);\n      }\n    }\n  } else if (error.source && error.locations) {\n    for (var _i4 = 0, _error$locations2 = error.locations; _i4 < _error$locations2.length; _i4++) {\n      var location = _error$locations2[_i4];\n      output += '\\n\\n' + printSourceLocation(error.source, location);\n    }\n  }\n\n  return output;\n}\n","import { GraphQLError } from \"./GraphQLError.mjs\";\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n\nexport function syntaxError(source, position, description) {\n  return new GraphQLError(\"Syntax Error: \".concat(description), undefined, source, [position]);\n}\n","/**\n * The set of allowed kind values for AST nodes.\n */\nexport var Kind = Object.freeze({\n  // Name\n  NAME: 'Name',\n  // Document\n  DOCUMENT: 'Document',\n  OPERATION_DEFINITION: 'OperationDefinition',\n  VARIABLE_DEFINITION: 'VariableDefinition',\n  SELECTION_SET: 'SelectionSet',\n  FIELD: 'Field',\n  ARGUMENT: 'Argument',\n  // Fragments\n  FRAGMENT_SPREAD: 'FragmentSpread',\n  INLINE_FRAGMENT: 'InlineFragment',\n  FRAGMENT_DEFINITION: 'FragmentDefinition',\n  // Values\n  VARIABLE: 'Variable',\n  INT: 'IntValue',\n  FLOAT: 'FloatValue',\n  STRING: 'StringValue',\n  BOOLEAN: 'BooleanValue',\n  NULL: 'NullValue',\n  ENUM: 'EnumValue',\n  LIST: 'ListValue',\n  OBJECT: 'ObjectValue',\n  OBJECT_FIELD: 'ObjectField',\n  // Directives\n  DIRECTIVE: 'Directive',\n  // Types\n  NAMED_TYPE: 'NamedType',\n  LIST_TYPE: 'ListType',\n  NON_NULL_TYPE: 'NonNullType',\n  // Type System Definitions\n  SCHEMA_DEFINITION: 'SchemaDefinition',\n  OPERATION_TYPE_DEFINITION: 'OperationTypeDefinition',\n  // Type Definitions\n  SCALAR_TYPE_DEFINITION: 'ScalarTypeDefinition',\n  OBJECT_TYPE_DEFINITION: 'ObjectTypeDefinition',\n  FIELD_DEFINITION: 'FieldDefinition',\n  INPUT_VALUE_DEFINITION: 'InputValueDefinition',\n  INTERFACE_TYPE_DEFINITION: 'InterfaceTypeDefinition',\n  UNION_TYPE_DEFINITION: 'UnionTypeDefinition',\n  ENUM_TYPE_DEFINITION: 'EnumTypeDefinition',\n  ENUM_VALUE_DEFINITION: 'EnumValueDefinition',\n  INPUT_OBJECT_TYPE_DEFINITION: 'InputObjectTypeDefinition',\n  // Directive Definitions\n  DIRECTIVE_DEFINITION: 'DirectiveDefinition',\n  // Type System Extensions\n  SCHEMA_EXTENSION: 'SchemaExtension',\n  // Type Extensions\n  SCALAR_TYPE_EXTENSION: 'ScalarTypeExtension',\n  OBJECT_TYPE_EXTENSION: 'ObjectTypeExtension',\n  INTERFACE_TYPE_EXTENSION: 'InterfaceTypeExtension',\n  UNION_TYPE_EXTENSION: 'UnionTypeExtension',\n  ENUM_TYPE_EXTENSION: 'EnumTypeExtension',\n  INPUT_OBJECT_TYPE_EXTENSION: 'InputObjectTypeExtension'\n});\n/**\n * The enum type representing the possible kind values of AST nodes.\n */\n","function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { SYMBOL_TO_STRING_TAG } from \"../polyfills/symbols.mjs\";\nimport devAssert from \"../jsutils/devAssert.mjs\";\n\n/**\n * A representation of source input to GraphQL.\n * `name` and `locationOffset` are optional. They are useful for clients who\n * store GraphQL documents in source files; for example, if the GraphQL input\n * starts at line 40 in a file named Foo.graphql, it might be useful for name to\n * be \"Foo.graphql\" and location to be `{ line: 40, column: 0 }`.\n * line and column in locationOffset are 1-indexed\n */\nexport var Source = /*#__PURE__*/function () {\n  function Source(body) {\n    var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GraphQL request';\n    var locationOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      line: 1,\n      column: 1\n    };\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    this.locationOffset.line > 0 || devAssert(0, 'line in locationOffset is 1-indexed and must be positive.');\n    this.locationOffset.column > 0 || devAssert(0, 'column in locationOffset is 1-indexed and must be positive.');\n  } // $FlowFixMe Flow doesn't support computed properties yet\n\n\n  _createClass(Source, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'Source';\n    }\n  }]);\n\n  return Source;\n}();\n","/**\n * The set of allowed directive location values.\n */\nexport var DirectiveLocation = Object.freeze({\n  // Request Definitions\n  QUERY: 'QUERY',\n  MUTATION: 'MUTATION',\n  SUBSCRIPTION: 'SUBSCRIPTION',\n  FIELD: 'FIELD',\n  FRAGMENT_DEFINITION: 'FRAGMENT_DEFINITION',\n  FRAGMENT_SPREAD: 'FRAGMENT_SPREAD',\n  INLINE_FRAGMENT: 'INLINE_FRAGMENT',\n  VARIABLE_DEFINITION: 'VARIABLE_DEFINITION',\n  // Type System Definitions\n  SCHEMA: 'SCHEMA',\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  FIELD_DEFINITION: 'FIELD_DEFINITION',\n  ARGUMENT_DEFINITION: 'ARGUMENT_DEFINITION',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  ENUM_VALUE: 'ENUM_VALUE',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  INPUT_FIELD_DEFINITION: 'INPUT_FIELD_DEFINITION'\n});\n/**\n * The enum type representing the directive location values.\n */\n","/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nexport var TokenKind = Object.freeze({\n  SOF: '<SOF>',\n  EOF: '<EOF>',\n  BANG: '!',\n  DOLLAR: '$',\n  AMP: '&',\n  PAREN_L: '(',\n  PAREN_R: ')',\n  SPREAD: '...',\n  COLON: ':',\n  EQUALS: '=',\n  AT: '@',\n  BRACKET_L: '[',\n  BRACKET_R: ']',\n  BRACE_L: '{',\n  PIPE: '|',\n  BRACE_R: '}',\n  NAME: 'Name',\n  INT: 'Int',\n  FLOAT: 'Float',\n  STRING: 'String',\n  BLOCK_STRING: 'BlockString',\n  COMMENT: 'Comment'\n});\n/**\n * The enum type representing the token kinds values.\n */\n","import { syntaxError } from \"../error/syntaxError.mjs\";\nimport { Token } from \"./ast.mjs\";\nimport { dedentBlockStringValue } from \"./blockString.mjs\";\nimport { TokenKind } from \"./tokenKind.mjs\";\n/**\n * Given a Source object, creates a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n\nexport var Lexer = /*#__PURE__*/function () {\n  /**\n   * The previously focused non-ignored token.\n   */\n\n  /**\n   * The currently focused non-ignored token.\n   */\n\n  /**\n   * The (1-indexed) line containing the current token.\n   */\n\n  /**\n   * The character offset at which the current line begins.\n   */\n  function Lexer(source) {\n    var startOfFileToken = new Token(TokenKind.SOF, 0, 0, 0, 0, null);\n    this.source = source;\n    this.lastToken = startOfFileToken;\n    this.token = startOfFileToken;\n    this.line = 1;\n    this.lineStart = 0;\n  }\n  /**\n   * Advances the token stream to the next non-ignored token.\n   */\n\n\n  var _proto = Lexer.prototype;\n\n  _proto.advance = function advance() {\n    this.lastToken = this.token;\n    var token = this.token = this.lookahead();\n    return token;\n  }\n  /**\n   * Looks ahead and returns the next non-ignored token, but does not change\n   * the state of Lexer.\n   */\n  ;\n\n  _proto.lookahead = function lookahead() {\n    var token = this.token;\n\n    if (token.kind !== TokenKind.EOF) {\n      do {\n        var _token$next;\n\n        // Note: next is only mutable during parsing, so we cast to allow this.\n        token = (_token$next = token.next) !== null && _token$next !== void 0 ? _token$next : token.next = readToken(this, token);\n      } while (token.kind === TokenKind.COMMENT);\n    }\n\n    return token;\n  };\n\n  return Lexer;\n}();\n/**\n * @internal\n */\n\nexport function isPunctuatorTokenKind(kind) {\n  return kind === TokenKind.BANG || kind === TokenKind.DOLLAR || kind === TokenKind.AMP || kind === TokenKind.PAREN_L || kind === TokenKind.PAREN_R || kind === TokenKind.SPREAD || kind === TokenKind.COLON || kind === TokenKind.EQUALS || kind === TokenKind.AT || kind === TokenKind.BRACKET_L || kind === TokenKind.BRACKET_R || kind === TokenKind.BRACE_L || kind === TokenKind.PIPE || kind === TokenKind.BRACE_R;\n}\n\nfunction printCharCode(code) {\n  return (// NaN/undefined represents access beyond the end of the file.\n    isNaN(code) ? TokenKind.EOF : // Trust JSON for ASCII.\n    code < 0x007f ? JSON.stringify(String.fromCharCode(code)) : // Otherwise print the escaped form.\n    \"\\\"\\\\u\".concat(('00' + code.toString(16).toUpperCase()).slice(-4), \"\\\"\")\n  );\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\n\nfunction readToken(lexer, prev) {\n  var source = lexer.source;\n  var body = source.body;\n  var bodyLength = body.length;\n  var pos = positionAfterWhitespace(body, prev.end, lexer);\n  var line = lexer.line;\n  var col = 1 + pos - lexer.lineStart;\n\n  if (pos >= bodyLength) {\n    return new Token(TokenKind.EOF, bodyLength, bodyLength, line, col, prev);\n  }\n\n  var code = body.charCodeAt(pos); // SourceCharacter\n\n  switch (code) {\n    // !\n    case 33:\n      return new Token(TokenKind.BANG, pos, pos + 1, line, col, prev);\n    // #\n\n    case 35:\n      return readComment(source, pos, line, col, prev);\n    // $\n\n    case 36:\n      return new Token(TokenKind.DOLLAR, pos, pos + 1, line, col, prev);\n    // &\n\n    case 38:\n      return new Token(TokenKind.AMP, pos, pos + 1, line, col, prev);\n    // (\n\n    case 40:\n      return new Token(TokenKind.PAREN_L, pos, pos + 1, line, col, prev);\n    // )\n\n    case 41:\n      return new Token(TokenKind.PAREN_R, pos, pos + 1, line, col, prev);\n    // .\n\n    case 46:\n      if (body.charCodeAt(pos + 1) === 46 && body.charCodeAt(pos + 2) === 46) {\n        return new Token(TokenKind.SPREAD, pos, pos + 3, line, col, prev);\n      }\n\n      break;\n    // :\n\n    case 58:\n      return new Token(TokenKind.COLON, pos, pos + 1, line, col, prev);\n    // =\n\n    case 61:\n      return new Token(TokenKind.EQUALS, pos, pos + 1, line, col, prev);\n    // @\n\n    case 64:\n      return new Token(TokenKind.AT, pos, pos + 1, line, col, prev);\n    // [\n\n    case 91:\n      return new Token(TokenKind.BRACKET_L, pos, pos + 1, line, col, prev);\n    // ]\n\n    case 93:\n      return new Token(TokenKind.BRACKET_R, pos, pos + 1, line, col, prev);\n    // {\n\n    case 123:\n      return new Token(TokenKind.BRACE_L, pos, pos + 1, line, col, prev);\n    // |\n\n    case 124:\n      return new Token(TokenKind.PIPE, pos, pos + 1, line, col, prev);\n    // }\n\n    case 125:\n      return new Token(TokenKind.BRACE_R, pos, pos + 1, line, col, prev);\n    // A-Z _ a-z\n\n    case 65:\n    case 66:\n    case 67:\n    case 68:\n    case 69:\n    case 70:\n    case 71:\n    case 72:\n    case 73:\n    case 74:\n    case 75:\n    case 76:\n    case 77:\n    case 78:\n    case 79:\n    case 80:\n    case 81:\n    case 82:\n    case 83:\n    case 84:\n    case 85:\n    case 86:\n    case 87:\n    case 88:\n    case 89:\n    case 90:\n    case 95:\n    case 97:\n    case 98:\n    case 99:\n    case 100:\n    case 101:\n    case 102:\n    case 103:\n    case 104:\n    case 105:\n    case 106:\n    case 107:\n    case 108:\n    case 109:\n    case 110:\n    case 111:\n    case 112:\n    case 113:\n    case 114:\n    case 115:\n    case 116:\n    case 117:\n    case 118:\n    case 119:\n    case 120:\n    case 121:\n    case 122:\n      return readName(source, pos, line, col, prev);\n    // - 0-9\n\n    case 45:\n    case 48:\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      return readNumber(source, pos, code, line, col, prev);\n    // \"\n\n    case 34:\n      if (body.charCodeAt(pos + 1) === 34 && body.charCodeAt(pos + 2) === 34) {\n        return readBlockString(source, pos, line, col, prev, lexer);\n      }\n\n      return readString(source, pos, line, col, prev);\n  }\n\n  throw syntaxError(source, pos, unexpectedCharacterMessage(code));\n}\n/**\n * Report a message that an unexpected character was encountered.\n */\n\n\nfunction unexpectedCharacterMessage(code) {\n  if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n    return \"Cannot contain the invalid character \".concat(printCharCode(code), \".\");\n  }\n\n  if (code === 39) {\n    // '\n    return 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?';\n  }\n\n  return \"Cannot parse the unexpected character \".concat(printCharCode(code), \".\");\n}\n/**\n * Reads from body starting at startPosition until it finds a non-whitespace\n * character, then returns the position of that character for lexing.\n */\n\n\nfunction positionAfterWhitespace(body, startPosition, lexer) {\n  var bodyLength = body.length;\n  var position = startPosition;\n\n  while (position < bodyLength) {\n    var code = body.charCodeAt(position); // tab | space | comma | BOM\n\n    if (code === 9 || code === 32 || code === 44 || code === 0xfeff) {\n      ++position;\n    } else if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else {\n      break;\n    }\n  }\n\n  return position;\n}\n/**\n * Reads a comment token from the source file.\n *\n * #[\\u0009\\u0020-\\uFFFF]*\n */\n\n\nfunction readComment(source, start, line, col, prev) {\n  var body = source.body;\n  var code;\n  var position = start;\n\n  do {\n    code = body.charCodeAt(++position);\n  } while (!isNaN(code) && ( // SourceCharacter but not LineTerminator\n  code > 0x001f || code === 0x0009));\n\n  return new Token(TokenKind.COMMENT, start, position, line, col, prev, body.slice(start + 1, position));\n}\n/**\n * Reads a number token from the source file, either a float\n * or an int depending on whether a decimal point appears.\n *\n * Int:   -?(0|[1-9][0-9]*)\n * Float: -?(0|[1-9][0-9]*)(\\.[0-9]+)?((E|e)(+|-)?[0-9]+)?\n */\n\n\nfunction readNumber(source, start, firstCode, line, col, prev) {\n  var body = source.body;\n  var code = firstCode;\n  var position = start;\n  var isFloat = false;\n\n  if (code === 45) {\n    // -\n    code = body.charCodeAt(++position);\n  }\n\n  if (code === 48) {\n    // 0\n    code = body.charCodeAt(++position);\n\n    if (code >= 48 && code <= 57) {\n      throw syntaxError(source, position, \"Invalid number, unexpected digit after 0: \".concat(printCharCode(code), \".\"));\n    }\n  } else {\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 46) {\n    // .\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 69 || code === 101) {\n    // E e\n    isFloat = true;\n    code = body.charCodeAt(++position);\n\n    if (code === 43 || code === 45) {\n      // + -\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or NameStart\n\n\n  if (code === 46 || isNameStart(code)) {\n    throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n  }\n\n  return new Token(isFloat ? TokenKind.FLOAT : TokenKind.INT, start, position, line, col, prev, body.slice(start, position));\n}\n/**\n * Returns the new position in the source after reading digits.\n */\n\n\nfunction readDigits(source, start, firstCode) {\n  var body = source.body;\n  var position = start;\n  var code = firstCode;\n\n  if (code >= 48 && code <= 57) {\n    // 0 - 9\n    do {\n      code = body.charCodeAt(++position);\n    } while (code >= 48 && code <= 57); // 0 - 9\n\n\n    return position;\n  }\n\n  throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n}\n/**\n * Reads a string token from the source file.\n *\n * \"([^\"\\\\\\u000A\\u000D]|(\\\\(u[0-9a-fA-F]{4}|[\"\\\\/bfnrt])))*\"\n */\n\n\nfunction readString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 1;\n  var chunkStart = position;\n  var code = 0;\n  var value = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position)) && // not LineTerminator\n  code !== 0x000a && code !== 0x000d) {\n    // Closing Quote (\")\n    if (code === 34) {\n      value += body.slice(chunkStart, position);\n      return new Token(TokenKind.STRING, start, position + 1, line, col, prev, value);\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    ++position;\n\n    if (code === 92) {\n      // \\\n      value += body.slice(chunkStart, position - 1);\n      code = body.charCodeAt(position);\n\n      switch (code) {\n        case 34:\n          value += '\"';\n          break;\n\n        case 47:\n          value += '/';\n          break;\n\n        case 92:\n          value += '\\\\';\n          break;\n\n        case 98:\n          value += '\\b';\n          break;\n\n        case 102:\n          value += '\\f';\n          break;\n\n        case 110:\n          value += '\\n';\n          break;\n\n        case 114:\n          value += '\\r';\n          break;\n\n        case 116:\n          value += '\\t';\n          break;\n\n        case 117:\n          {\n            // uXXXX\n            var charCode = uniCharCode(body.charCodeAt(position + 1), body.charCodeAt(position + 2), body.charCodeAt(position + 3), body.charCodeAt(position + 4));\n\n            if (charCode < 0) {\n              var invalidSequence = body.slice(position + 1, position + 5);\n              throw syntaxError(source, position, \"Invalid character escape sequence: \\\\u\".concat(invalidSequence, \".\"));\n            }\n\n            value += String.fromCharCode(charCode);\n            position += 4;\n            break;\n          }\n\n        default:\n          throw syntaxError(source, position, \"Invalid character escape sequence: \\\\\".concat(String.fromCharCode(code), \".\"));\n      }\n\n      ++position;\n      chunkStart = position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Reads a block string token from the source file.\n *\n * \"\"\"(\"?\"?(\\\\\"\"\"|\\\\(?!=\"\"\")|[^\"\\\\]))*\"\"\"\n */\n\n\nfunction readBlockString(source, start, line, col, prev, lexer) {\n  var body = source.body;\n  var position = start + 3;\n  var chunkStart = position;\n  var code = 0;\n  var rawValue = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position))) {\n    // Closing Triple-Quote (\"\"\")\n    if (code === 34 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34) {\n      rawValue += body.slice(chunkStart, position);\n      return new Token(TokenKind.BLOCK_STRING, start, position + 3, line, col, prev, dedentBlockStringValue(rawValue));\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if ( // Escape Triple-Quote (\\\"\"\")\n    code === 92 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34 && body.charCodeAt(position + 3) === 34) {\n      rawValue += body.slice(chunkStart, position) + '\"\"\"';\n      position += 4;\n      chunkStart = position;\n    } else {\n      ++position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Converts four hexadecimal chars to the integer that the\n * string represents. For example, uniCharCode('0','0','0','f')\n * will return 15, and uniCharCode('0','0','f','f') returns 255.\n *\n * Returns a negative number on error, if a char was invalid.\n *\n * This is implemented by noting that char2hex() returns -1 on error,\n * which means the result of ORing the char2hex() will also be negative.\n */\n\n\nfunction uniCharCode(a, b, c, d) {\n  return char2hex(a) << 12 | char2hex(b) << 8 | char2hex(c) << 4 | char2hex(d);\n}\n/**\n * Converts a hex character to its integer value.\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 on error.\n */\n\n\nfunction char2hex(a) {\n  return a >= 48 && a <= 57 ? a - 48 // 0-9\n  : a >= 65 && a <= 70 ? a - 55 // A-F\n  : a >= 97 && a <= 102 ? a - 87 // a-f\n  : -1;\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * [_A-Za-z][_0-9A-Za-z]*\n */\n\n\nfunction readName(source, start, line, col, prev) {\n  var body = source.body;\n  var bodyLength = body.length;\n  var position = start + 1;\n  var code = 0;\n\n  while (position !== bodyLength && !isNaN(code = body.charCodeAt(position)) && (code === 95 || // _\n  code >= 48 && code <= 57 || // 0-9\n  code >= 65 && code <= 90 || // A-Z\n  code >= 97 && code <= 122) // a-z\n  ) {\n    ++position;\n  }\n\n  return new Token(TokenKind.NAME, start, position, line, col, prev, body.slice(start, position));\n} // _ A-Z a-z\n\n\nfunction isNameStart(code) {\n  return code === 95 || code >= 65 && code <= 90 || code >= 97 && code <= 122;\n}\n","import inspect from \"../jsutils/inspect.mjs\";\nimport devAssert from \"../jsutils/devAssert.mjs\";\nimport { syntaxError } from \"../error/syntaxError.mjs\";\nimport { Kind } from \"./kinds.mjs\";\nimport { Source } from \"./source.mjs\";\nimport { DirectiveLocation } from \"./directiveLocation.mjs\";\nimport { TokenKind } from \"./tokenKind.mjs\";\nimport { Lexer, isPunctuatorTokenKind } from \"./lexer.mjs\";\nimport { Location } from \"./ast.mjs\";\n/**\n * Configuration options to control parser behavior\n */\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nexport function parse(source, options) {\n  var parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nexport function parseValue(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var value = parser.parseValueLiteral(false);\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nexport function parseType(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var type = parser.parseTypeReference();\n  parser.expectToken(TokenKind.EOF);\n  return type;\n}\n\nvar Parser = /*#__PURE__*/function () {\n  function Parser(source, options) {\n    var sourceObj = typeof source === 'string' ? new Source(source) : source;\n    sourceObj instanceof Source || devAssert(0, \"Must provide Source. Received: \".concat(inspect(sourceObj), \".\"));\n    this._lexer = new Lexer(sourceObj);\n    this._options = options;\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.parseName = function parseName() {\n    var token = this.expectToken(TokenKind.NAME);\n    return {\n      kind: Kind.NAME,\n      value: token.value,\n      loc: this.loc(token)\n    };\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n  ;\n\n  _proto.parseDocument = function parseDocument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.DOCUMENT,\n      definitions: this.many(TokenKind.SOF, this.parseDefinition, TokenKind.EOF),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   */\n  ;\n\n  _proto.parseDefinition = function parseDefinition() {\n    if (this.peek(TokenKind.NAME)) {\n      switch (this._lexer.token.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'schema':\n        case 'scalar':\n        case 'type':\n        case 'interface':\n        case 'union':\n        case 'enum':\n        case 'input':\n        case 'directive':\n          return this.parseTypeSystemDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    } else if (this.peek(TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } else if (this.peekDescription()) {\n      return this.parseTypeSystemDefinition();\n    }\n\n    throw this.unexpected();\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseOperationDefinition = function parseOperationDefinition() {\n    var start = this._lexer.token;\n\n    if (this.peek(TokenKind.BRACE_L)) {\n      return {\n        kind: Kind.OPERATION_DEFINITION,\n        operation: 'query',\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    var operation = this.parseOperationType();\n    var name;\n\n    if (this.peek(TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return {\n      kind: Kind.OPERATION_DEFINITION,\n      operation: operation,\n      name: name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n  ;\n\n  _proto.parseOperationType = function parseOperationType() {\n    var operationToken = this.expectToken(TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return 'query';\n\n      case 'mutation':\n        return 'mutation';\n\n      case 'subscription':\n        return 'subscription';\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n  ;\n\n  _proto.parseVariableDefinitions = function parseVariableDefinitions() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseVariableDefinition, TokenKind.PAREN_R);\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseVariableDefinition = function parseVariableDefinition() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(TokenKind.EQUALS) ? this.parseValueLiteral(true) : undefined,\n      directives: this.parseDirectives(true),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Variable : $ Name\n   */\n  ;\n\n  _proto.parseVariable = function parseVariable() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.DOLLAR);\n    return {\n      kind: Kind.VARIABLE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * SelectionSet : { Selection+ }\n   */\n  ;\n\n  _proto.parseSelectionSet = function parseSelectionSet() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.SELECTION_SET,\n      selections: this.many(TokenKind.BRACE_L, this.parseSelection, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n  ;\n\n  _proto.parseSelection = function parseSelection() {\n    return this.peek(TokenKind.SPREAD) ? this.parseFragment() : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n  ;\n\n  _proto.parseField = function parseField() {\n    var start = this._lexer.token;\n    var nameOrAlias = this.parseName();\n    var alias;\n    var name;\n\n    if (this.expectOptionalToken(TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return {\n      kind: Kind.FIELD,\n      alias: alias,\n      name: name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(TokenKind.BRACE_L) ? this.parseSelectionSet() : undefined,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n  ;\n\n  _proto.parseArguments = function parseArguments(isConst) {\n    var item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseArgument = function parseArgument() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.ARGUMENT,\n      name: name,\n      value: this.parseValueLiteral(false),\n      loc: this.loc(start)\n    };\n  };\n\n  _proto.parseConstArgument = function parseConstArgument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.ARGUMENT,\n      name: this.parseName(),\n      value: (this.expectToken(TokenKind.COLON), this.parseValueLiteral(true)),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseFragment = function parseFragment() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.SPREAD);\n    var hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {\n      return {\n        kind: Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n  ;\n\n  _proto.parseFragmentDefinition = function parseFragmentDefinition() {\n    var _this$_options;\n\n    var start = this._lexer.token;\n    this.expectKeyword('fragment'); // Experimental support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (((_this$_options = this._options) === null || _this$_options === void 0 ? void 0 : _this$_options.experimentalFragmentVariables) === true) {\n      return {\n        kind: Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n  ;\n\n  _proto.parseFragmentName = function parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n  ;\n\n  _proto.parseValueLiteral = function parseValueLiteral(isConst) {\n    var token = this._lexer.token;\n\n    switch (token.kind) {\n      case TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case TokenKind.INT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.INT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.FLOAT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.FLOAT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.STRING:\n      case TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case TokenKind.NAME:\n        this._lexer.advance();\n\n        switch (token.value) {\n          case 'true':\n            return {\n              kind: Kind.BOOLEAN,\n              value: true,\n              loc: this.loc(token)\n            };\n\n          case 'false':\n            return {\n              kind: Kind.BOOLEAN,\n              value: false,\n              loc: this.loc(token)\n            };\n\n          case 'null':\n            return {\n              kind: Kind.NULL,\n              loc: this.loc(token)\n            };\n\n          default:\n            return {\n              kind: Kind.ENUM,\n              value: token.value,\n              loc: this.loc(token)\n            };\n        }\n\n      case TokenKind.DOLLAR:\n        if (!isConst) {\n          return this.parseVariable();\n        }\n\n        break;\n    }\n\n    throw this.unexpected();\n  };\n\n  _proto.parseStringLiteral = function parseStringLiteral() {\n    var token = this._lexer.token;\n\n    this._lexer.advance();\n\n    return {\n      kind: Kind.STRING,\n      value: token.value,\n      block: token.kind === TokenKind.BLOCK_STRING,\n      loc: this.loc(token)\n    };\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n  ;\n\n  _proto.parseList = function parseList(isConst) {\n    var _this = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this.parseValueLiteral(isConst);\n    };\n\n    return {\n      kind: Kind.LIST,\n      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   */\n  ;\n\n  _proto.parseObject = function parseObject(isConst) {\n    var _this2 = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this2.parseObjectField(isConst);\n    };\n\n    return {\n      kind: Kind.OBJECT,\n      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseObjectField = function parseObjectField(isConst) {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.OBJECT_FIELD,\n      name: name,\n      value: this.parseValueLiteral(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n  ;\n\n  _proto.parseDirectives = function parseDirectives(isConst) {\n    var directives = [];\n\n    while (this.peek(TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n  /**\n   * Directive[Const] : @ Name Arguments[?Const]?\n   */\n  ;\n\n  _proto.parseDirective = function parseDirective(isConst) {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.AT);\n    return {\n      kind: Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n  ;\n\n  _proto.parseTypeReference = function parseTypeReference() {\n    var start = this._lexer.token;\n    var type;\n\n    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {\n      type = this.parseTypeReference();\n      this.expectToken(TokenKind.BRACKET_R);\n      type = {\n        kind: Kind.LIST_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(TokenKind.BANG)) {\n      return {\n        kind: Kind.NON_NULL_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n  ;\n\n  _proto.parseNamedType = function parseNamedType() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.NAMED_TYPE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Type Definition section.\n\n  /**\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemDefinition = function parseTypeSystemDefinition() {\n    // Many definitions begin with a description and require a lookahead.\n    var keywordToken = this.peekDescription() ? this._lexer.lookahead() : this._lexer.token;\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  };\n\n  _proto.peekDescription = function peekDescription() {\n    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n  ;\n\n  _proto.parseDescription = function parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }\n   */\n  ;\n\n  _proto.parseSchemaDefinition = function parseSchemaDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.many(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n    return {\n      kind: Kind.SCHEMA_DEFINITION,\n      description: description,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n  ;\n\n  _proto.parseOperationTypeDefinition = function parseOperationTypeDefinition() {\n    var start = this._lexer.token;\n    var operation = this.parseOperationType();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseNamedType();\n    return {\n      kind: Kind.OPERATION_TYPE_DEFINITION,\n      operation: operation,\n      type: type,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n  ;\n\n  _proto.parseScalarTypeDefinition = function parseScalarTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.SCALAR_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseObjectTypeDefinition = function parseObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n  ;\n\n  _proto.parseImplementsInterfaces = function parseImplementsInterfaces() {\n    var types = [];\n\n    if (this.expectOptionalKeyword('implements')) {\n      // Optional leading ampersand\n      this.expectOptionalToken(TokenKind.AMP);\n\n      do {\n        var _this$_options2;\n\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(TokenKind.AMP) || // Legacy support for the SDL?\n      ((_this$_options2 = this._options) === null || _this$_options2 === void 0 ? void 0 : _this$_options2.allowLegacySDLImplementsInterfaces) === true && this.peek(TokenKind.NAME));\n    }\n\n    return types;\n  }\n  /**\n   * FieldsDefinition : { FieldDefinition+ }\n   */\n  ;\n\n  _proto.parseFieldsDefinition = function parseFieldsDefinition() {\n    var _this$_options3;\n\n    // Legacy support for the SDL?\n    if (((_this$_options3 = this._options) === null || _this$_options3 === void 0 ? void 0 : _this$_options3.allowLegacySDLEmptyFields) === true && this.peek(TokenKind.BRACE_L) && this._lexer.lookahead().kind === TokenKind.BRACE_R) {\n      this._lexer.advance();\n\n      this._lexer.advance();\n\n      return [];\n    }\n\n    return this.optionalMany(TokenKind.BRACE_L, this.parseFieldDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n  ;\n\n  _proto.parseFieldDefinition = function parseFieldDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.FIELD_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      type: type,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n  ;\n\n  _proto.parseArgumentDefs = function parseArgumentDefs() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseInputValueDef, TokenKind.PAREN_R);\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseInputValueDef = function parseInputValueDef() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var defaultValue;\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      defaultValue = this.parseValueLiteral(true);\n    }\n\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.INPUT_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      type: type,\n      defaultValue: defaultValue,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseInterfaceTypeDefinition = function parseInterfaceTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.INTERFACE_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n  ;\n\n  _proto.parseUnionTypeDefinition = function parseUnionTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n    return {\n      kind: Kind.UNION_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n  ;\n\n  _proto.parseUnionMemberTypes = function parseUnionMemberTypes() {\n    var types = [];\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      // Optional leading pipe\n      this.expectOptionalToken(TokenKind.PIPE);\n\n      do {\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(TokenKind.PIPE));\n    }\n\n    return types;\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n  ;\n\n  _proto.parseEnumTypeDefinition = function parseEnumTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n    return {\n      kind: Kind.ENUM_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   */\n  ;\n\n  _proto.parseEnumValuesDefinition = function parseEnumValuesDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseEnumValueDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   *\n   * EnumValue : Name\n   */\n  ;\n\n  _proto.parseEnumValueDefinition = function parseEnumValueDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.ENUM_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n  ;\n\n  _proto.parseInputObjectTypeDefinition = function parseInputObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   */\n  ;\n\n  _proto.parseInputFieldsDefinition = function parseInputFieldsDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseInputValueDef, TokenKind.BRACE_R);\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemExtension = function parseTypeSystemExtension() {\n    var keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   */\n  ;\n\n  _proto.parseSchemaExtension = function parseSchemaExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.optionalMany(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCHEMA_EXTENSION,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n  ;\n\n  _proto.parseScalarTypeExtension = function parseScalarTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCALAR_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseObjectTypeExtension = function parseObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.OBJECT_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeExtension :\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]\n   *  - extend interface Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseInterfaceTypeExtension = function parseInterfaceTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INTERFACE_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n  ;\n\n  _proto.parseUnionTypeExtension = function parseUnionTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.UNION_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n  ;\n\n  _proto.parseEnumTypeExtension = function parseEnumTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.ENUM_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n  ;\n\n  _proto.parseInputObjectTypeExtension = function parseInputObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   */\n  ;\n\n  _proto.parseDirectiveDefinition = function parseDirectiveDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(TokenKind.AT);\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    var repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    var locations = this.parseDirectiveLocations();\n    return {\n      kind: Kind.DIRECTIVE_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      repeatable: repeatable,\n      locations: locations,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n  ;\n\n  _proto.parseDirectiveLocations = function parseDirectiveLocations() {\n    // Optional leading pipe\n    this.expectOptionalToken(TokenKind.PIPE);\n    var locations = [];\n\n    do {\n      locations.push(this.parseDirectiveLocation());\n    } while (this.expectOptionalToken(TokenKind.PIPE));\n\n    return locations;\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n  ;\n\n  _proto.parseDirectiveLocation = function parseDirectiveLocation() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n\n    if (DirectiveLocation[name.value] !== undefined) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a location object, used to identify the place in\n   * the source that created a given parsed object.\n   */\n  ;\n\n  _proto.loc = function loc(startToken) {\n    var _this$_options4;\n\n    if (((_this$_options4 = this._options) === null || _this$_options4 === void 0 ? void 0 : _this$_options4.noLocation) !== true) {\n      return new Location(startToken, this._lexer.lastToken, this._lexer.source);\n    }\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n  ;\n\n  _proto.peek = function peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing\n   * the lexer. Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectToken = function expectToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    throw syntaxError(this._lexer.source, token.start, \"Expected \".concat(getTokenKindDesc(kind), \", found \").concat(getTokenDesc(token), \".\"));\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing\n   * the lexer. Otherwise, do not change the parser state and return undefined.\n   */\n  ;\n\n  _proto.expectOptionalToken = function expectOptionalToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    return undefined;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectKeyword = function expectKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n    } else {\n      throw syntaxError(this._lexer.source, token.start, \"Expected \\\"\".concat(value, \"\\\", found \").concat(getTokenDesc(token), \".\"));\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing\n   * the lexer. Otherwise, do not change the parser state and return \"false\".\n   */\n  ;\n\n  _proto.expectOptionalKeyword = function expectOptionalKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token\n   * is encountered.\n   */\n  ;\n\n  _proto.unexpected = function unexpected(atToken) {\n    var token = atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;\n    return syntaxError(this._lexer.source, token.start, \"Unexpected \".concat(getTokenDesc(token), \".\"));\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by\n   * the parseFn. This list begins with a lex token of openKind\n   * and ends with a lex token of closeKind. Advances the parser\n   * to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.any = function any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always\n   * return non-empty list that begins with a lex token of openKind and ends\n   * with a lex token of closeKind. Advances the parser to the next lex token\n   * after the closing token.\n   */\n  ;\n\n  _proto.optionalMany = function optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      var nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by\n   * the parseFn. This list begins with a lex token of openKind\n   * and ends with a lex token of closeKind. Advances the parser\n   * to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.many = function many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  };\n\n  return Parser;\n}();\n/**\n * A helper function to describe a token as a string for debugging\n */\n\n\nfunction getTokenDesc(token) {\n  var value = token.value;\n  return getTokenKindDesc(token.kind) + (value != null ? \" \\\"\".concat(value, \"\\\"\") : '');\n}\n/**\n * A helper function to describe a token kind as a string for debugging\n */\n\n\nfunction getTokenKindDesc(kind) {\n  return isPunctuatorTokenKind(kind) ? \"\\\"\".concat(kind, \"\\\"\") : kind;\n}\n","var parser = require('graphql/language/parser');\n\nvar parse = parser.parse;\n\n// Strip insignificant whitespace\n// Note that this could do a lot more, such as reorder fields etc.\nfunction normalize(string) {\n  return string.replace(/[\\s,]+/g, ' ').trim();\n}\n\n// A map docString -> graphql document\nvar docCache = {};\n\n// A map fragmentName -> [normalized source]\nvar fragmentSourceMap = {};\n\nfunction cacheKeyFromLoc(loc) {\n  return normalize(loc.source.body.substring(loc.start, loc.end));\n}\n\n// For testing.\nfunction resetCaches() {\n  docCache = {};\n  fragmentSourceMap = {};\n}\n\n// Take a unstripped parsed document (query/mutation or even fragment), and\n// check all fragment definitions, checking for name->source uniqueness.\n// We also want to make sure only unique fragments exist in the document.\nvar printFragmentWarnings = true;\nfunction processFragments(ast) {\n  var astFragmentMap = {};\n  var definitions = [];\n\n  for (var i = 0; i < ast.definitions.length; i++) {\n    var fragmentDefinition = ast.definitions[i];\n\n    if (fragmentDefinition.kind === 'FragmentDefinition') {\n      var fragmentName = fragmentDefinition.name.value;\n      var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc);\n\n      // We know something about this fragment\n      if (fragmentSourceMap.hasOwnProperty(fragmentName) && !fragmentSourceMap[fragmentName][sourceKey]) {\n\n        // this is a problem because the app developer is trying to register another fragment with\n        // the same name as one previously registered. So, we tell them about it.\n        if (printFragmentWarnings) {\n          console.warn(\"Warning: fragment with name \" + fragmentName + \" already exists.\\n\"\n            + \"graphql-tag enforces all fragment names across your application to be unique; read more about\\n\"\n            + \"this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names\");\n        }\n\n        fragmentSourceMap[fragmentName][sourceKey] = true;\n\n      } else if (!fragmentSourceMap.hasOwnProperty(fragmentName)) {\n        fragmentSourceMap[fragmentName] = {};\n        fragmentSourceMap[fragmentName][sourceKey] = true;\n      }\n\n      if (!astFragmentMap[sourceKey]) {\n        astFragmentMap[sourceKey] = true;\n        definitions.push(fragmentDefinition);\n      }\n    } else {\n      definitions.push(fragmentDefinition);\n    }\n  }\n\n  ast.definitions = definitions;\n  return ast;\n}\n\nfunction disableFragmentWarnings() {\n  printFragmentWarnings = false;\n}\n\nfunction stripLoc(doc, removeLocAtThisLevel) {\n  var docType = Object.prototype.toString.call(doc);\n\n  if (docType === '[object Array]') {\n    return doc.map(function (d) {\n      return stripLoc(d, removeLocAtThisLevel);\n    });\n  }\n\n  if (docType !== '[object Object]') {\n    throw new Error('Unexpected input.');\n  }\n\n  // We don't want to remove the root loc field so we can use it\n  // for fragment substitution (see below)\n  if (removeLocAtThisLevel && doc.loc) {\n    delete doc.loc;\n  }\n\n  // https://github.com/apollographql/graphql-tag/issues/40\n  if (doc.loc) {\n    delete doc.loc.startToken;\n    delete doc.loc.endToken;\n  }\n\n  var keys = Object.keys(doc);\n  var key;\n  var value;\n  var valueType;\n\n  for (key in keys) {\n    if (keys.hasOwnProperty(key)) {\n      value = doc[keys[key]];\n      valueType = Object.prototype.toString.call(value);\n\n      if (valueType === '[object Object]' || valueType === '[object Array]') {\n        doc[keys[key]] = stripLoc(value, true);\n      }\n    }\n  }\n\n  return doc;\n}\n\nvar experimentalFragmentVariables = false;\nfunction parseDocument(doc) {\n  var cacheKey = normalize(doc);\n\n  if (docCache[cacheKey]) {\n    return docCache[cacheKey];\n  }\n\n  var parsed = parse(doc, { experimentalFragmentVariables: experimentalFragmentVariables });\n  if (!parsed || parsed.kind !== 'Document') {\n    throw new Error('Not a valid GraphQL document.');\n  }\n\n  // check that all \"new\" fragments inside the documents are consistent with\n  // existing fragments of the same name\n  parsed = processFragments(parsed);\n  parsed = stripLoc(parsed, false);\n  docCache[cacheKey] = parsed;\n\n  return parsed;\n}\n\nfunction enableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = true;\n}\n\nfunction disableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = false;\n}\n\n// XXX This should eventually disallow arbitrary string interpolation, like Relay does\nfunction gql(/* arguments */) {\n  var args = Array.prototype.slice.call(arguments);\n\n  var literals = args[0];\n\n  // We always get literals[0] and then matching post literals for each arg given\n  var result = (typeof(literals) === \"string\") ? literals : literals[0];\n\n  for (var i = 1; i < args.length; i++) {\n    if (args[i] && args[i].kind && args[i].kind === 'Document') {\n      result += args[i].loc.source.body;\n    } else {\n      result += args[i];\n    }\n\n    result += literals[i];\n  }\n\n  return parseDocument(result);\n}\n\n// Support typescript, which isn't as nice as Babel about default exports\ngql.default = gql;\ngql.resetCaches = resetCaches;\ngql.disableFragmentWarnings = disableFragmentWarnings;\ngql.enableExperimentalFragmentVariables = enableExperimentalFragmentVariables;\ngql.disableExperimentalFragmentVariables = disableExperimentalFragmentVariables;\n\nmodule.exports = gql;\n","const APOLLO_KEY = \"__lwcapolloc_client__\";\nexport function getClient() {\n    return window[APOLLO_KEY];\n}\nexport function setClient(client) {\n    return window[APOLLO_KEY] = client;\n}\n//# sourceMappingURL=client.js.map","import { LightningElement, track, api, wire } from 'lwc';\nimport { useQuery } from '@lwce/apollo-client';\nimport gql from 'graphql-tag';\n\n\nconst QUERY = gql`\n    query($pidList: [String]) {\n        multipleProducts(pidList: $pidList) {\n            id\n            name\n        }\n    }\n`\n\nexport default class Greeting extends LightningElement {\n\n    @api\n    set pid(val) {\n        var temp = this.strToArr(val);\n        console.log(\"inside set pid, pidList:\", temp);\n        this.variables = { ...this.variables, pidList: temp };\n    }\n\n    get pid() {\n        return this.variables.pidList;\n    }\n\n    strToArr(val){\n        console.log(\"inside strToArr function\" );\n            var pidStr = val;\n            console.log(\"inside strToArr pid: \",pidStr);\n            let pidSlice = pidStr.slice(1, (pidStr.length-1));\n            let pidList = pidSlice.split(\",\");\n            for (var i = 0; i < pidList.length; i++) {\n                pidList[i] = pidList[i].trim()\n            }\n            console.log(\"inside strToArr pidList: \",pidList[1]);\n            return pidList;\n            //this.pidList( this.pidList);\n        };\n\n        connectedCallback() {\n            this.results.fetch({ \n                variables: {\n                    ... this.variables\n                }\n            })\n        }\n\n    variables = {\n        pidList: '' //[\"25696638M\", \"25697639M\", \"25696717M\"]//this.pidList\n    };\n\n    @wire(useQuery, {\n        query: QUERY,\n        lazy: false,\n        variables: '$variables',\n    }) results;\n\n    get firstResult() {\n       // console.log(\"value of pidList\", this.pid());\n        console.log(\"inside firstResult: \", this.results);\n       return this.results.loading ? \"\" : this.results.data.multipleProducts[0].name;\n    }\n\n}","/*\n    Copyright (c) 2020, salesforce.com, inc.\n    All rights reserved.\n    SPDX-License-Identifier: BSD-3-Clause\n    For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n*/\nimport { getClient } from './client';\nexport class useQuery {\n    constructor(dataCallback) {\n        this.connected = false;\n        this.dataCallback = dataCallback;\n        this.pendingResult = {\n            client: undefined,\n            loading: false,\n            data: undefined,\n            error: undefined,\n            initialized: false,\n            fetch: this.fetch.bind(this)\n        };\n    }\n    update(config) {\n        const { client, lazy, ...props } = config;\n        this.apolloOptions = props;\n        this.pendingResult.client = client || getClient();\n        if (!lazy) {\n            this.fetch();\n        }\n        else {\n            this.sendUpdate();\n        }\n    }\n    connect() {\n        this.connected = true;\n        this.sendUpdate();\n    }\n    disconnect() {\n        this.connected = false;\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    sendUpdate() {\n        if (this.connected) {\n            // Make a copy to make the notification effective and prevent changes (ex: client instance)\n            const o = Object.assign({}, this.pendingResult);\n            this.dataCallback(o);\n        }\n    }\n    fetch(options) {\n        const mergedOptions = { ...this.apolloOptions, ...options };\n        this.pendingResult.loading = true;\n        this.sendUpdate();\n        try {\n            if (this.subscription) {\n                this.subscription.unsubscribe();\n            }\n            this.observableQuery = this.pendingResult.client.watchQuery(mergedOptions);\n            this.subscription = this.observableQuery.subscribe(({ data, loading, errors }) => {\n                Object.assign(this.pendingResult, {\n                    loading,\n                    data,\n                    error: errors,\n                    initialized: true\n                });\n                this.sendUpdate();\n            });\n        }\n        catch (error) {\n            Object.assign(this.pendingResult, {\n                loading: false,\n                data: undefined,\n                error,\n                initialized: true\n            });\n            this.sendUpdate();\n        }\n    }\n}\n//# sourceMappingURL=query.js.map","/* eslint-disable no-constant-condition */\n/* eslint-disable no-undef */\n\n/**\n * NOTE: THIS IS FOR DIDACTIC PURPOSES ONLY\n * READ THE OFFICIAL DOCUMENTATION TO FULLY UNDERSTANDING ALL THIS CONCEPTS\n */\n\nimport { createElement, buildCustomElementConstructor } from \"lwc\";\n\nimport {\n    ApolloClient,\n    ApolloLink,\n    InMemoryCache,\n    HttpLink,\n} from 'apollo-boost';\nimport { setClient } from '@lwce/apollo-client';\n\nconst httpLink = new HttpLink({\n    uri: 'https://safe-brushlands-35946.herokuapp.com//'\n});\n\nconst authLink = new ApolloLink((operation, forward) => {\n    // Call the next link in the middleware chain.\n    return forward(operation);\n});\n\nconst defaultOptions = {\n    watchQuery: {\n        fetchPolicy: 'no-cache',\n        errorPolicy: 'all',\n    },\n    query: {\n        fetchPolicy: 'no-cache',\n        errorPolicy: 'all',\n    },\n};\n\nsetClient(new ApolloClient({\n    link: authLink.concat(httpLink), // Chain it with the HttpLink\n    cache: new InMemoryCache(),\n    defaultOptions: defaultOptions,\n}));\n\n// Components to export\nimport Greeting from \"my/greeting\";\n\n// Register the components as custom elements\n// This function can be removed if the components are not going to be used as custom elements\nif(true && typeof customElements !== 'undefined') {\n    customElements.define('my-greeting', buildCustomElementConstructor(Greeting));\n}\n\n// Register a function to create the components dynamically\n// This function can be removed if the components are not going to be created that way\nif(true) {\n    const delegate = window.createLwcComponent;\n    window.createLwcComponent = function createLwcComponent(name) {\n        if(name===\"my-greeting\") {\n            return createElement(\"my-greeting\", { is: Greeting });\n        }\n        return delegate ? delegate(name) : null;\n    }\n}"],"names":["isConcatSpreadable","Symbol","isArray","Array","slice","ArraySlice","unshift","ArrayUnshift","shift","ArrayShift","prototype","isSpreadable","O","isObject","spreadable","undefined","Boolean","ArrayConcatPolyfill","_args","Object","this","A","N","items","call","arguments","length","E","k","subElement","Proxy","proxy","concat","detect","assign","create","defineProperties","defineProperty","freeze","getOwnPropertyDescriptor","getOwnPropertyNames","getPrototypeOf","hasOwnProperty","keys","seal","setPrototypeOf","isArray$1","filter","ArrayFilter","find","ArrayFind","indexOf","ArrayIndexOf","join","ArrayJoin","map","ArrayMap","push","ArrayPush","reduce","ArrayReduce","reverse","ArrayReverse","ArraySlice$1","splice","ArraySplice","ArrayUnshift$1","forEach","charCodeAt","StringCharCodeAt","replace","StringReplace","StringSlice","toLowerCase","StringToLowerCase","String","isUndefined","obj","isNull","isTrue$1","isFalse$1","isFunction","isString","OtS","toString","emptyString","getPropertyDescriptor","o","p","d","AttrNameToPropNameMap","PropNameToAttrNameMap","propName","attrName","hasNativeSymbolsSupport","createHiddenField","key","namespace","hiddenFieldsMap","WeakMap","setHiddenField","field","value","valuesByField","get","set","getHiddenField","detect$1","Element","getAttribute","hasAttribute","removeAttribute","removeAttributeNS","setAttribute","setAttributeNS","nodeToAriaPropertyValuesMap","getAriaPropertyMap","elm","createAriaPropertyPropertyDescriptor","newValue","normalizedValue","configurable","enumerable","patch","descriptor","ElementPrototypeAriaPropertyNames","i","len","nextTickCallbackQueue","SPACE_CHAR","EmptyObject","EmptyArray","flushCallbackQueue","callbacks","addCallbackToNextTick","callback","Promise","resolve","then","create$1","ArraySplice$1","ArrayIndexOf$1","ArrayPush$1","TargetToReactiveRecordMap","isUndefined$1","currentReactiveObserver","valueMutated","target","reactiveRecord","reactiveObservers","notify","valueObserved","ro","newRecord","getReactiveRecord","link","ReactiveObserver","constructor","listeners","observe","job","inceptionReactiveRecord","error","e","reset","pos","componentValueMutated","vm","component","componentValueObserved","getComponentTag","tagName","getErrorComponentStack","wcStack","currentVm","owner","createAllEventListeners","vnode","data","on","listener","handler","event","type","handleEvent","name","addEventListener","modEvents","update","oldVnode","defaultDefHTMLPropertyNames","offsetPropertyErrorMessage","accessKey","attribute","accessKeyLabel","readOnly","className","contentEditable","dataset","dir","draggable","dropzone","hidden","id","inputMode","lang","slot","spellcheck","style","tabIndex","title","translate","isContentEditable","offsetHeight","offsetLeft","offsetParent","offsetTop","offsetWidth","role","AttrNameToPropNameMap$1","PropNameToAttrNameMap$1","CAPS_REGEX","getAttrNameFromPropName","match","controlledAttributeName","controlledElement","lockAttribute","_elm","_key","unlockAttribute","xlinkNS","xmlNS","ColonCharCode","updateAttrs","attrs","oldAttrs","cur","emptyVNode","modAttrs","isLiveBindingProp","sel","props","oldProps","isFirstPatch","emptyVNode$1","modProps","classNameToClassMap","getMapFromClassName","start","updateClassAttribute","newClass","oldClass","classList","newClassMap","oldClassMap","remove","add","emptyVNode$2","modComputedClassName","updateStyleAttribute","newStyle","cssText","emptyVNode$3","modComputedStyle","modStaticClassName","classMap","modStaticStyle","styleMap","sameVnode","vnode1","vnode2","isVNode","createKeyToOldIdx","children","beginIdx","endIdx","j","ch","addVnodes","parentElm","before","vnodes","startIdx","hook","insert","updateDynamicChildren","oldCh","newCh","oldKeyToIdx","idxInOld","elmToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","patchVnode","move","nextSibling","n","removeVnodes","updateStaticChildren","referenceElm","oldVNode","HTMLElementOriginalDescriptors","createBridgeToElementDescriptor","TypeError","getAssociatedVM","isBeingConstructed","cmpProps","getLinkedElement","cmp","BaseLightningElementConstructor","vmBeingConstructed","ReferenceError","mode","def","ctor","cmpRoot","attachShadow","delegatesFocus","callHook","setHook","getHook","associateVM","HTMLElement","dispatchEvent","apply","options","wrappedListener","getWrappedComponentsListener","removeEventListener","hasAttributeNS","_namespace","getAttributeNS","getBoundingClientRect","querySelector","querySelectorAll","getElementsByTagName","getElementsByClassName","isConnected","render","template","lightningBasedDescriptors","BaseLightningElement","internalWireFieldDecorator","cmpFields","isArray$2","getPrototypeOf$1","ObjectCreate","ObjectDefineProperty","ObjectDefineProperties","isExtensible","getOwnPropertyDescriptor$1","getOwnPropertyNames$1","getOwnPropertySymbols","preventExtensions","hasOwnProperty$1","ArrayPush$2","ArrayConcat","ArrayMap$1","isUndefined$2","isFunction$1","proxyToValueMap","registerProxy","unwrap","replicaOrAny","wrapValue","membrane","valueIsObservable","getProxy","lockShadowTarget","shadowTarget","originalTarget","wrapDescriptor","ReactiveProxyHandler","deleteProperty","thisArg","argArray","construct","newTarget","has","ownKeys","shadowIsExtensible","targetIsExtensible","desc","shadowDescriptor","originalDescriptor","unwrapDescriptor","wrapReadOnlyValue","getReadOnlyProxy","ReadOnlyHandler","createShadowTarget","ObjectDotPrototype","defaultValueIsObservable","proto","defaultValueObserved","defaultValueMutated","defaultValueDistortion","getValue","unwrapProxy","reactiveMembrane","valueDistortion","objectGraph","unwrappedValue","distorted","getReactiveState","reactive","distortedValue","reactiveState","reactiveHandler","readOnlyHandler","internalTrackDecorator","reactiveOrAnyValue","assign$1","create$2","defineProperties$1","defineProperty$1","freeze$1","getOwnPropertyDescriptor$2","getOwnPropertyNames$2","getPrototypeOf$2","hasOwnProperty$2","keys$1","seal$1","setPrototypeOf$1","ArrayFilter$1","ArrayFind$1","ArrayIndexOf$2","ArrayJoin$1","ArrayMap$2","ArrayPush$3","ArrayReduce$1","ArrayReverse$1","ArraySlice$2","ArraySplice$2","ArrayUnshift$2","forEach$1","StringCharCodeAt$1","StringReplace$1","StringSlice$1","StringToLowerCase$1","AttrNameToPropNameMap$2","PropNameToAttrNameMap$2","_globalThis","globalThis","_globalThis$1","__magic__","ex","window","getGlobalThis","lwcRuntimeFlags","runtimeFlags","createPublicPropertyDescriptor","AccessorReactiveObserver","debouncing","isDirty","dirtyStateBeforeSetterCall","idx","rerenderVM","createPublicAccessorDescriptor","Error","ENABLE_REACTIVE_SETTER","oar","createObservedFieldPropertyDescriptor","PropType","signedDecoratorToMetaMap","Map","defaultMeta","apiMethods","apiFields","apiFieldsConfig","wiredMethods","wiredFields","observedFields","signedTemplateSet","Set","defaultEmptyTemplate","cachedGetterByKey","cachedSetterByKey","createGetter","fn","createSetter","createMethodCaller","methodName","HTMLBridgeElementFactory","SuperClass","methods","HTMLBridgeElement","writable","descriptors","BaseBridgeElement","resolveCircularModuleDependency","isCircularModuleDependency","CtorToDefMap","createComponentDef","Ctor","meta","subclassComponentName","decoratorsMeta","getDecoratorsMeta","connectedCallback","disconnectedCallback","renderedCallback","errorCallback","superProto","getCtorProto","superDef","getComponentInternalDef","lightingElementDef","bridge","propsConfig","wire","isComponentConstructor","current","circularResolved","signedComponentToMetaMap","getComponentRegisteredMeta","setElementProto","useSyntheticShadow","EventTarget","Node","noop","setElementShadowToken","token","$shadowToken$","insertNodeHook","parentNode","referenceNode","insertBefore","removeNodeHook","removeChild","LWCDOMMode","insertCustomElmHook","rehydrate","appendVM","updateChildrenHook","hasDynamicChildren","runWithBoundaryProtection","allocateChildrenHook","aChildren","cmpSlots","oldSlots","slotName","oldKeys","markComponentAsDirty","oldVNodes","a","allocateInSlot","createChildrenHook","removeCustomElmHook","resetComponentStateWhenRemoved","FromIteration","CHAR_S","CHAR_V","CHAR_G","NamespaceAttributeForSVG","SymbolIterator","iterator","TextHook","document","createTextNode","text","linkNodeToShadow","nodeValue","ElementHook","clonedElement","ns","createElement","createElementNS","context","shadowAttribute","lwc","dom","manual","$domManual$","observeElementChildNodes","fallbackElmHook","createElmHook","updateElmHook","removeElmHook","CustomElementHook","getAssociatedVMIfPresent","createVM","createViewModelHook","createCustomElmHook","updateCustomElmHook","rerenderCustomElmHook","runConnectedCallback","$shadowResolver$","h","vmBeingRendered","getVMBeingRendered","addNS","childNode","c","velements","addVNodeToChildLWC","t","DynamicImportedComponentMap","dynamicImportedComponentCounter","sc","api$1","__proto__","ti","s","slotset","iterable","factory","list","next","done","last","f","flattened","item","b","invokeEventListener","compilerKey","gid","fid","url","test","dc","CachedStyleFragments","createStyleElement","styleContent","textContent","globalStyleParent","head","body","InsertedGlobalStyleContent","collectStylesheets","stylesheets","hostSelector","shadowSelector","isNative","aggregatorFn","sheet","evaluateCSS","hostAttribute","appendChild","insertGlobalStyle","buffer","createStyleVNode","fragment","createDocumentFragment","styleElm","cloneNode","firstChild","getCachedStyleElement","GlobalMeasurementPhase","isUserTimingSupported","performance","mark","clearMarks","measure","clearMeasures","getMarkName","phase","noop$1","startGlobalMeasure","markName","endGlobalMeasure","measureName","end","isUpdatingTemplate","setVMBeingRendered","evaluateTemplate","html","isUpdatingTemplateInception","vmOfTemplateBeingUpdatedInception","cmpTemplate","tro","resetShadowRoot","tpl","isTemplateRegistered","tplCache","oldHostAttribute","resetStyleAttributes","stylesheetTokens","styleVNode","applyStyleAttributes","noop$2","invokeComponentCallback","args","result","thisValue","registerComponent","tmpl","createComponent","vmBeingConstructedInception","invokeComponentConstructor","getTemplateReactiveObserver","isScheduled","rehydrateQueue","flushRehydrationQueue","scheduleRehydration","renderComponent","vmBeingRenderedInception","renderInvocationSuccessful","invokeComponentRenderMethod","cmpEventListenerMap","Services","invokeServiceHook","cbs","VMState","ViewModelReflection","prop","connectRootElement","HYDRATE","state","connected","disconnectRootElement","disconnected","hasWireAdapters","wiredDisconnecting","noop$3","disconnectWireAdapters","runDisconnectedCallback","runShadowChildNodesDisconnectedCallback","adoptedChildren","recursivelyDisconnectChildren","runLightChildNodesDisconnectedCallback","created","wiredConnecting","fieldNameOrMethod","wireDef","WireMetaMap","adapterInstance","createConnector","connect","disconnect","installWireAdapters","rendered","invokeComponentRenderedCallback","runRenderedCallback","patchShadowRoot","REHYDRATE","vms","sort","connectWireAdapters","vCustomElementCollection","childVM","child","pre","post","errorBoundaryVm","getErrorBoundaryVM","DeprecatedWiredElementHost","DeprecatedWiredParamsMeta","createContextWatcher","callbackWhenContextIsReady","adapter","adapterContextToken","AdapterToTokenMap","getAdapterToken","internalDomEvent","CustomEvent","bubbles","composed","detail","newContext","disconnectCallback","method","configCallback","dynamic","hasDynamicParams","dataCallback","createFieldDataCallback","createMethodDataCallback","connector","updateConnectorConfig","config","computeConfigAndUpdate","callbackWhenConfigIsReady","hasPendingConfig","createConfigWatcher","contextSchema","storeWiredMethodMeta","storeWiredFieldMeta","buildCustomElementConstructor","_a","attributeToPropMap","attributeChangedCallback","oldValue","isAttributeLocked","observedAttributes","ConnectingSlot","DisconnectingSlot","callNodeSlot","node","replaceChild","newChild","oldChild","replacedNode","ComponentConstructorToCustomElementConstructorMap","ce","getCustomElementConstructor","extendStatics","__extends","__","__assign","__awaiter","_arguments","P","generator","reject","fulfilled","step","rejected","__generator","y","g","_","label","sent","trys","ops","verb","v","op","pop","__spreadArrays","il","r","jl","nodejsCustomInspectSymbol","for","_typeof","MAX_ARRAY_LENGTH","MAX_RECURSIVE_DEPTH","inspect","formatValue","seenValues","JSON","stringify","previouslySeenValues","customInspectFn","object","getCustomFn","customValue","array","Math","min","remaining","formatArray","tag","getObjectTag","formatObject","formatObjectValue","defineInspect","classObject","toJSON","condition","message","invariant","Location","startToken","endToken","source","Token","kind","line","column","prev","isNode","maybeNode","QueryDocumentKeys","Name","Document","OperationDefinition","VariableDefinition","Variable","SelectionSet","Field","Argument","FragmentSpread","InlineFragment","FragmentDefinition","IntValue","FloatValue","StringValue","BooleanValue","NullValue","EnumValue","ListValue","ObjectValue","ObjectField","Directive","NamedType","ListType","NonNullType","SchemaDefinition","OperationTypeDefinition","ScalarTypeDefinition","ObjectTypeDefinition","FieldDefinition","InputValueDefinition","InterfaceTypeDefinition","UnionTypeDefinition","EnumTypeDefinition","EnumValueDefinition","InputObjectTypeDefinition","DirectiveDefinition","SchemaExtension","ScalarTypeExtension","ObjectTypeExtension","InterfaceTypeExtension","UnionTypeExtension","EnumTypeExtension","InputObjectTypeExtension","BREAK","visit","root","visitor","visitorKeys","stack","inArray","index","edits","parent","path","ancestors","newRoot","isLeaving","isEdited","clone","_i2","_Object$keys2","editOffset","ii","editKey","editValue","_visitorKeys$node$kin","visitFn","getVisitFn","kindVisitor","kindSpecificVisitor","leave","enter","specificVisitor","specificKindVisitor","genericMessage","InvariantError","_super","_this","framesToPop","wrapConsoleMethod","console","warn","processStub","env","process","Function","atLeastWeTried","module","opts","cycles","aobj","bobj","seen","isFinite","out","seenIndex","previousComparisons","equal","check","aTag","bTag","previouslyCompared","aKeys","bKeys","keyCount","size","aIterator","entries","isMap","info","aKey","aValue","clear","bSet","valueToObjectRepresentation","argObj","variables","isIntValue","isFloatValue","Number","isBooleanValue","isStringValue","isObjectValue","nestedArgObj_1","fields","isVariable","variableValue","isListValue","values","listValue","nestedArgArrayObj","isEnumValue","isNullValue","KNOWN_DIRECTIVES","getStoreKeyName","fieldName","directives","filterKeys","queryArgs_1","filteredArgs_1","completeFieldName","stringifiedArgs","argumentsObjectFromField","argObj_1","resultKeyNameFromField","alias","isField","selection","isInlineFragment","isIdValue","idObject","generated","toIdValue","idConfig","typename","_classCallCheck","instance","Constructor","_defineProperties","_createClass","protoProps","staticProps","exports","hasSymbols","hasSymbol","getSymbol","observable","SymbolObservable","SymbolSpecies","getMethod","getSpecies","Observable","isObservable","x","hostReportError","log","setTimeout","enqueue","cleanupSubscription","subscription","cleanup","_cleanup","unsubscribe","closeSubscription","_observer","_queue","_state","notifySubscription","observer","m","onNotify","queue","flushSubscription","Subscription","subscriber","subscriptionObserver","SubscriptionObserver","_subscription","_subscriber","complete","subscribe","_this2","_this3","_this4","C","hasSeed","hasValue","acc","first","_this5","_len","sources","startNext","from","_this6","subscriptions","outer","inner","completeIfDone","closed","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","_item","err","return","_len2","_key2","symbol","require","LinkError","isTerminating","request","fromError","errorValue","createOperation","starting","operation","query","operationName","getKey","transformedOperation","extensions","getOperationName","OPERATION_FIELDS","_i","NetworkStatus","ponyfill","self","global","isNetworkRequestInFlight","networkStatus","queryFromPojo","definitions","selectionSet","selectionSetFromObj","selections","justTypenameQuery","variableDefinitions","typeCondition","currentContext","MISSING_VALUE","idCounter","host","Slot","Date","now","random","context_1","slots","withValue","bind","saved","noContext","defaultDispose","Cache","max","dispose","Infinity","newest","oldest","entry","getEntry","older","newer","clean","delete","HeuristicFragmentMatcher","ensureReady","canBypassInit","idValue","store","isRootQuery","__typename","jsonObject","directivesObj","directive","dedentBlockStringValue","rawString","lines","split","commonIndent","indent","leadingWhitespace","getBlockStringIndentation","isBlank","str","printDocASTReducer","varDefs","wrap","_ref","variable","defaultValue","_ref2","block","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","indentation","preferMultipleLines","isSingleLine","hasLeadingSpace","hasTrailingQuote","hasTrailingSlash","printAsMultipleLines","printBlockString","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","addDescription","_ref20","operationTypes","_ref21","_ref22","_ref23","interfaces","_ref24","hasMultilineItems","_ref25","_ref26","_ref27","types","_ref28","_ref29","_ref30","_ref31","repeatable","locations","_ref32","_ref33","_ref34","_ref35","_ref36","_ref37","_ref38","cb","description","maybeArray","_maybeArray$filter$jo","separator","maybeString","isMultiline","string","some","fallbackHttpConfig","http","includeQuery","includeExtensions","headers","accept","throwServerError","response","statusCode","status","selectHttpOptionsAndBody","fallbackConfig","configs","credentials","serializeFetchParameter","serialized","parseError","createHttpLink","linkOptions","uri","fetcher","fetch","useGETForQueries","requestOptions","propertyIsEnumerable","__rest","checkFetcher","linkConfig","fetchOptions","ApolloLink","chosenURI","fallbackURI","contextURI","getContext","selectURI","clientAwarenessHeaders","clientAwareness","name_1","version","controller","contextHeaders","contextConfig","_b","signal","_c","AbortController","createSignalIfSupported","_controller","_d","queryParams","addQueryParam","encodeURIComponent","serializedVariables","serializedExtensions","preFragment","fragmentStart","substr","queryParamsPrefix","newURI","rewriteURIForGET","operations","setContext","bodyText","parse","catch","errors","abort","HttpLink","devAssert","SYMBOL_TO_STRING_TAG","toStringTag","getLocation","position","lineRegexp","exec","printLocation","location","printSourceLocation","sourceLocation","firstLineColumnOffset","locationOffset","whitespace","lineIndex","lineOffset","lineNum","columnOffset","columnNum","locationStr","locationLine","subLineIndex","floor","subLineColumnNum","subLines","printPrefixedLines","subLine","existingLines","padLen","prefix","_possibleConstructorReturn","_assertThisInitialized","_wrapNativeSuper","Class","_cache","Wrapper","_construct","_getPrototypeOf","_setPrototypeOf","Parent","_isNativeReflectConstruct","Reflect","sham","GraphQLError","_Error","subClass","superClass","_inherits","Derived","hasNativeReflectConstruct","Super","NewTarget","nodes","positions","originalError","_locations2","_source2","_positions2","_extensions2","_nodes$0$loc","_nodes","_source","loc","_locations","_positions","_extensions","originalExtensions","captureStackTrace","output","_error$nodes2","_i4","_error$locations2","printError","syntaxError","Kind","NAME","DOCUMENT","OPERATION_DEFINITION","VARIABLE_DEFINITION","SELECTION_SET","FIELD","ARGUMENT","FRAGMENT_SPREAD","INLINE_FRAGMENT","FRAGMENT_DEFINITION","VARIABLE","INT","FLOAT","STRING","BOOLEAN","NULL","ENUM","LIST","OBJECT","OBJECT_FIELD","DIRECTIVE","NAMED_TYPE","LIST_TYPE","NON_NULL_TYPE","SCHEMA_DEFINITION","OPERATION_TYPE_DEFINITION","SCALAR_TYPE_DEFINITION","OBJECT_TYPE_DEFINITION","FIELD_DEFINITION","INPUT_VALUE_DEFINITION","INTERFACE_TYPE_DEFINITION","UNION_TYPE_DEFINITION","ENUM_TYPE_DEFINITION","ENUM_VALUE_DEFINITION","INPUT_OBJECT_TYPE_DEFINITION","DIRECTIVE_DEFINITION","SCHEMA_EXTENSION","SCALAR_TYPE_EXTENSION","OBJECT_TYPE_EXTENSION","INTERFACE_TYPE_EXTENSION","UNION_TYPE_EXTENSION","ENUM_TYPE_EXTENSION","INPUT_OBJECT_TYPE_EXTENSION","Source","DirectiveLocation","QUERY","MUTATION","SUBSCRIPTION","SCHEMA","SCALAR","ARGUMENT_DEFINITION","INTERFACE","UNION","ENUM_VALUE","INPUT_OBJECT","INPUT_FIELD_DEFINITION","TokenKind","SOF","EOF","BANG","DOLLAR","AMP","PAREN_L","PAREN_R","SPREAD","COLON","EQUALS","AT","BRACKET_L","BRACKET_R","BRACE_L","PIPE","BRACE_R","BLOCK_STRING","COMMENT","Lexer","startOfFileToken","lastToken","lineStart","_proto","advance","lookahead","_token$next","readToken","printCharCode","code","isNaN","fromCharCode","toUpperCase","lexer","bodyLength","startPosition","positionAfterWhitespace","col","readComment","readName","firstCode","isFloat","readDigits","isNameStart","readNumber","chunkStart","rawValue","readBlockString","charCode","char2hex","invalidSequence","readString","unexpectedCharacterMessage","Parser","sourceObj","_lexer","_options","parseName","expectToken","parseDocument","many","parseDefinition","peek","parseOperationDefinition","parseFragmentDefinition","parseTypeSystemDefinition","parseTypeSystemExtension","peekDescription","unexpected","parseSelectionSet","parseOperationType","parseVariableDefinitions","parseDirectives","operationToken","optionalMany","parseVariableDefinition","parseVariable","parseTypeReference","expectOptionalToken","parseValueLiteral","parseSelection","parseFragment","parseField","nameOrAlias","parseArguments","isConst","parseConstArgument","parseArgument","hasTypeCondition","expectOptionalKeyword","parseFragmentName","parseNamedType","_this$_options","expectKeyword","experimentalFragmentVariables","parseList","parseObject","parseStringLiteral","any","parseObjectField","parseDirective","keywordToken","parseSchemaDefinition","parseScalarTypeDefinition","parseObjectTypeDefinition","parseInterfaceTypeDefinition","parseUnionTypeDefinition","parseEnumTypeDefinition","parseInputObjectTypeDefinition","parseDirectiveDefinition","parseDescription","parseOperationTypeDefinition","parseImplementsInterfaces","parseFieldsDefinition","_this$_options2","allowLegacySDLImplementsInterfaces","_this$_options3","allowLegacySDLEmptyFields","parseFieldDefinition","parseArgumentDefs","parseInputValueDef","parseUnionMemberTypes","parseEnumValuesDefinition","parseEnumValueDefinition","parseInputFieldsDefinition","parseSchemaExtension","parseScalarTypeExtension","parseObjectTypeExtension","parseInterfaceTypeExtension","parseUnionTypeExtension","parseEnumTypeExtension","parseInputObjectTypeExtension","parseDirectiveLocations","parseDirectiveLocation","_this$_options4","noLocation","getTokenKindDesc","getTokenDesc","atToken","openKind","parseFn","closeKind","isPunctuatorTokenKind","parser","normalize","trim","docCache","fragmentSourceMap","printFragmentWarnings","doc","cacheKey","parsed","stripLoc","removeLocAtThisLevel","docType","valueType","ast","astFragmentMap","fragmentDefinition","fragmentName","sourceKey","substring","processFragments","gql","literals","default","resetCaches","disableFragmentWarnings","enableExperimentalFragmentVariables","disableExperimentalFragmentVariables","APOLLO_KEY","Greeting","LightningElement","pidList","results","val","temp","strToArr","pidStr","loading","multipleProducts","publicProps","publicMethods","track","propConfig","fieldOrMethodName","setDecoratorsMeta","[object Object]","pendingResult","client","initialized","lazy","apolloOptions","sendUpdate","mergedOptions","observableQuery","watchQuery","httpLink","authLink","forward","ApolloClient","cache","InMemoryCache","defaultOptions","fetchPolicy","errorPolicy","customElements","define","CustomElementConstructor","delegate","createLwcComponent","is","element"],"mappings":"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"}